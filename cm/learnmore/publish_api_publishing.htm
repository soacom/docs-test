---
layout: page
title: API Publishing
description: Learn how to set up and manage your API on the platform.
product: cm
category: learn
subcategory: API Admin
weight: 20
type: page
nav-title: 
no-nav: true
no-catalog: true
---

<h2 id="top">API Publishing</h2>

<p>Publish an API, configure license scope to determine what licenses will be offered for the API, and perform maintenance activities.</p>

<div class = "divider1"></div>

<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#what_are_apis">What are APIs?</a></li>
  <li><a href="#what_is_a_private_api">What is a private API?</a></li>
  <li><a href="#what_are_the_recommended_api_development_best_practices">What are the recommended API development best practices?</a></li>
  <li><a href="#what_is_the_minimum_requirement_for_adding_an_api">What is the minimum requirement for adding an API?</a></li>
  <li><a href="#what_security_and_monitoring_policies_are_supported">What security and monitoring policies are supported?</a></li>
  <li><a href="#what_is_the_minimum_policy_requirement_for_my_api">What is the minimum policy requirement for my API?</a></li>
  <li><a href="#how_do_i_add_an_api">How do I add an API?</a></li>
  <li><a href="#what_is_scope_mapping_and_how_do_i_set_it_up">What is scope mapping and how do I set it up?</a></li>
  <li><a href="#how_do_i_inform_app_developers_about_available_licenses_and_app_access">How do I inform app developers about available licenses and API access?</a></li>
  <li><a href="#how_do_i_add_a_rest_service">How do I add a REST service?</a></li>
  <li><a href="#how_do_i_manage_api_visibility">How do I manage API visibility?</a></li>
  <li><a href="#what_is_a_proxy_api">What is a proxy API?</a></li>
  <li><a href="#what_is_the_difference_between_sandbox_and_production_environments">What is the difference between sandbox and production environments?</a></li>
  <li><a href="#what_is_an_api_type_profile">What is an API Type Profile?</a></li>
  <li><a href="#what_are_the_supported_methods_and_content_types_for_requests">What are the supported HTTP methods and content types for requests?</a></li>
  <li><a href="#what_is_anonymous_api_access">What is Anonymous API Access?</a></li>
  <li><a href="#how_do_i_add_an_api_version">How do I add an API version?</a></li>
  <li><a href="#how_do_i_edit_an_api">How do I edit an API?</a></li>
  <li><a href="#how_do_i_delete_an_API">How do I delete an API?</a></li>
  <li><a href="#how_do_i_determine_what_licenses_will_be_available_for_my_api">How do I determine what licenses will be available for my API?</a></li>
  <li><a href="#how_do_i_edit_the_license_on_an_api_access_request_api_administrator">How do I edit the license on an API access request?</a></li>
</ol>
<div class = "divider1"></div>


<a name="what_are_apis"></a><h3>What are APIs?</h3>
<p>APIs are business capabilities exposed over the internet for applications to use. Simply put, an API is a programming interface that your organization exposes over the internet that allows applications to communicate with your backend systems. Typically, you build APIs that expose specific aspects of business functionality. These are things that differentiate you in the market place and that make money for you and your company. So essentially what you are doing through the creation of APIs is creating a new channel for your business by exposing a set of capabilities for your product (i.e., services that people can build into mobile applications and sell to their customers), thereby creating a channel for your products and services online.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_private_api"></a><h3>What is a private API?</h3>
<p>The platform supports public and private APIs. Public APIs are visible to visitors and members. Private APIs are visible to members who have been invited to join a Private API Group. Once a member has accepted an invitation to a Private API Group, the Private API is displayed with a unique icon throughout the member&rsquo;s platform experience.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_are_the_recommended_api_development_best_practices"></a><h3>What are the recommended API development best practices?</h3>
<p>Developing an API includes these key phases: Plan, Build, Run, and Promote.</p>
<p><strong>Planning:</strong></p>
<p>The planning phase involves determining which APIs to publish. Key considerations when selecting APIs include:</p>
<ol>
  <li>Is the API well defined and well scoped?</li>
  <li>Does the API deliver a clear business value?</li>
  <li>Does the API highlight and showcase your differentiators as a company?</li>
  <li>Does the API offer your potential consumer with a clear business value and reason for using it?</li>
  <li>Does the API offer cost benefits or functionality over potential competitors?</li>
</ol>

<p><strong>Build:</strong></p>
<p>After the API has been planned, approved and appropriately scoped, the next step is to build it. Jet considerations when building an API:</p>
<ol>
  <li>Is the API atomic and well documented?
<p>Building an API that is simple, easy to understand, and well documented will encourage developers to use it.</p>
</li>
</ol>
<p><strong>Run</strong>:</p>
<p>After the API is built, the next step is to run it. Key considerations when running an API include:</p>
<ul>
  <li>Is the API secure?
<p>The API must be robust and managed. To achieve this you must provide developers with feedback that the API will perform reliably in terms of functionality, performance, and its ability to security the customer data.</p></li>
</ul>
<p><strong>Promote:</strong></p>
<p>Once the API is running you must promote it. Key considerations when promoting an API include:</p>
<ol>
  <li>How can you as an organization create a market  for the API?
<p><em>Collaborate</em>&#8212;To market your API to a set of consumers (i.e., developers writing applications) you must create a community around your API. Creating a community of partners provides a value add to your services and your APIs and allows developers to collaborate with each other. This can be accomplished in the platform using the <em>API Group</em> and <em>API Board</em> functions.</p>
<p><em>Search</em>&#8212;Users need to be able to  effectively find your APIs, you need to get access to  the documentation and  collaborate around  developing their applications. This can be accomplished in the platform using the <em>Search</em> function where users can perform a free text search or use a pre-defined search filter.</p>
<p><em>Support</em>&#8212;You must support the API effectively. As you write your APIs you may run into problems and would like gain expertise and advice from community members. This can be accomplished in the platform using the <em>API Board</em>, trouble ticket management system, and by submitting a support request to the email address listed on the <em>Support</em> page which is accessible by clicking<strong> ?</strong> in the top navigation.</p></li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_minimum_requirement_for_adding_an_api"></a><h3>What is the minimum requirement for adding an API?</h3>
<p>The minimum requirement to add an API to the platform is that it must have an endpoint. For example:</p>
<ul class="usingOrderedList">
  <li>Your   API could be  in the design phase and you may want to publish it so you can use the <em>API Board</em> to collaborate with developers on requirements and design. In this scenario you could use any endpoint to facilitate usage of the platform features until the API development is complete.</li>
  <li>When your API is ready for use in  sandbox or production environments, it  must have a valid endpoint so that applications can request load access to it.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_security_and_monitoring_policies_are_supported"></a><h3>What security and monitoring policies are supported?</h3>
<p>The platform allows you to secure and monitor your APIs with the following  pre-configured policies. These policies are selected by default and should  be assigned to   newly created APIs. Three policy categories are supported:</p>
<ul class="usingOrderedList">
  <li><strong>Simple Header Security</strong>&#8212;Used to identify (authenticate) the application that is attempting to consume an API to determine if it is authorized or not.&nbsp;This policy type supports multiple mechanisms for the App to present its identity, including plain text App Id, signed header with X.509 or a shared secret, or OAuth (1.0a or 2.0).</li>
  <li><strong>Monitoring</strong>&#8212;Collects transaction details including recorded messages for every transaction.</li>
  <li><strong>OAuth</strong>&#8212;Provides support for applications performing authentication and authorization using OAuth.</li>
</ul>
<table cellspacing="0px" class="doctable" style="width: 80%;">
  <thead>
  <tr>
    <th width="20%">Policy Name</th>
    <th width="80%">Description</th>
  </tr>
  </thead>
  <tbody>
    <tr class="t2row">
      <td>ApplicationSecurityUnsigned</td>
      <td>This is a default security policy for platform  applications.<br />
        <br />
<p><em>Policy Category:</em> Simple Header Security<br />
          <br />
          <em>Policy Type:</em> API Consumer Application Security
          <br />
          <br />
        <em>Configuration:</em> No Signature checked.</p></td>
    </tr>
    <tr class="t1row">
      <td>ApplicationSecuritySigned</td>
      <td>This is a default security policy for Enterprise API Platform applications. It provides support for SHA1 (Shared Secret).<br />
        <br />
<p><em>Policy Category:</em> Simple Header Security<br />
          <br />
          <em>Policy Type:</em> API Consumer Application Security<br />
          <br />
        <em>Configuration:</em> Shared Secret checked</p></td>
    </tr>
    <tr class="t2row">
      <td>BasicAuditing</td>
      <td>Provides basic auditing of messages. Message metrics will be recorded in the Usage Logs Monitoring tab. The messages themselves will not be audited. That can be achieved using the DetailedAuditing policy.<br /><br />
        <p><em>Policy Category:</em> Monitoring<br />
          <br />
          <em>Policy Type:</em> WS-Auditing Service Policy<br />
          <br />
        <em>Configuration: </em>Audit All Messages, Audit Message Size, Audit Identities (Consumer and End User), Reporting Options (Log)</p></td>
    </tr> <tr class="t1row">
      <td>DetailedAuditing</td>
      <td>Provides detailed auditing of messages. Message metrics will be recorded in the Usage Logs Monitoring tab as well as the entire messages of each exchange.<br /><br />
        <p><em>Policy Category:</em> Monitoring</p>
        <p><em>Policy Type:</em> WS-Auditing Service Policy</p>
        <p><em>Configuration: </em>Audit All Messages, Audit Input Message, Audit Output Message, Audit Fault Message, Audit Message Size, Audit Binding, Audit Transport, Audit Contract, Audit Identities (Consumer and End User), Reporting Options (Log)</p></td>
    </tr>
     <tr class="t2row">
      <td>OAuthSecurity</td>
      <td>The OAuthSecurity Policy uses the OAuth configuration assigned to an API when enforcing OAuth tokens in the received request. <br /><br />
        <p><strong>Note:</strong> Selection of this policy is typically assigned to an API after performing the <strong>Edit OAuth Details</strong> configuration on the <em>API Details</em> page in the Community Manager portal. Use Edit on the API Details page, go to the <em>3. Proxy</em> page, and in the <em>Advanced Options</em> select <strong>OAuthSecurity</strong> in the <em>Policy</em> section.</p>
        <p><em>Policy Category:</em> OAuth</p>
        <p><em>Policy Type:</em> XML Policy</p>
        <p><em>Configuration: </em>Do not configure.</p></td>
    </tr>
</tbody>
</table>
<br />
<p>If you subscribe to an  API Enterprise Management Platform or decide to install on-premises then you  also have the ability to create and manage your own Policies. If you require a policy that is not on the default list, submit a support request to the email address listed on the <em>Support</em> page which is accessible by clicking<strong> ?</strong> in the top navigation.</p>
<p><a href="#top">Back to top</a></p>


<a name="what_is_the_minimum_policy_requirement_for_my_api"></a><h3>What is the minimum policy requirement for my API?</h3>
<p>When you add an API using the <strong>Add a New API Wizard</strong>, in the <em>Policies</em> section on the <em>Proxy</em> page, you MUST select one security policy (e.g., Category: Simple Header  Security) and you should select a monitoring policy if you want to see charts  and logs. If no policies display, consult your API Provider or Site Administrator.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_an_api"></a><h3>How do I add an API?</h3>
<p>The platform provides an<strong> Add a New API</strong> function that allows you to add a <em>SOAP</em> or <em>REST</em>-based API. APIs can be added for both Sandbox and Production environments.</p>
<b>Prerequisites:</b>
<ul class="usingOrderedList">
  <li>API documentation and legal agreements should be ready to upload before publishing your API.</li>
</ul>
<p>The <em>Add APIs Wizard</em> includes the following sections:</p>
<p><strong>API</strong></p>
<p>On the <em>API</em> page you perform the initial step of specifying an API Name, Version ID, Tags, Visibility (Public/Private), API Description, Version Description, and API Icon. This information displays on your public API page which also displays in the API search results.</p>
<p>A platform user who performs a search and finds your public API page, sees the API description and can rate and write and review your API. Individuals can also participate in a Yes/No survey indicating whether a review was useful or not. Based on this high visibility it's important that your API description is highly informative and includes the necessary marketing, functional, and use case information that will engage customers to request access to your API.</p>
<p><strong>Target</strong></p>
<p>On the <em>Target</em> page, you can configure SOAP-based APIs by specifying the SOAP version and WSDL. REST-based APIs are configured by specifying one or more operations. Policy selection is not required for the Target URL.</p>
<p><strong>Proxy</strong></p>
<p>The Proxy API page allows you to configure your API's proxy settings. If you would like to proxy your API, select the <strong>Yes</strong> radio button in the <em>Proxy API</em> section. There are many benefits to proxying your API including utilizing platform security and service level policies, monitoring performance, and allowing App Developers to gain access to your API sandbox endpoint (to test API functionality in their app), and production endpoint (to use API functionality in a live application). The Allow Anonymous Access option allows you to enable anonymous access to an API endpoint if you would like to offer a preview of an API to developers without requiring users to create an app or sign up to the platform.</p>
<p>To add an API:</p>
<p><strong>A. Launch the Add a New API Wizard</strong></p>
<p>The first step in the process is to launch the wizard. To do this:</p>
<ol>
  <li>From the <em>Plus Menu</em>, select <strong>Add a New API</strong>. The <em>Add API Wizard</em> displays.</li>
  <li>Review the tooltips for each option to gather additional details and recommendations.</li>
</ol>
<p><strong>B. Specify API Information</strong></p>
<ol>
  <li>On the <em>APIs</em> page, specify the API Name, Version ID, Tags, Visibility (Public/Private), API Description, Version Description, and API Icon for the API. All the information you specify here displays on your customer-facing <em>API Details</em> page.
    <ul class="usingUnorderedList">
      <li>See <a href="#how_do_i_manage_api_visibility">How do I manage API visibility?</a> for information on Public and Private APIs.</li>
      <li>See <a href="basics_account_management.htm#how_do_i_upload_and_crop_icons">How do I upload and crop icons?</a> for details on setting up your API icon.</li>
    </ul>
</li>
  <li>The next step is to define the scope of operations to be authorized. Click the
    <strong>Support Scope Permissions</strong> checkbox to enable the <strong>Scope Mapping</strong> option. For more information, see <a href="#what_is_scope_mapping_and_how_do_i_set_it_up">What is scope mapping and how do I set it up?</a></li>
</ol>
<p><strong>C. Specify Target URL and Environment</strong></p>
<ol>
  <li>After specifying the API information, click <strong>Next</strong> to continue. The <em>Target</em> page displays. Here you will specify <em>Target URL</em>, select the <em>Environment</em>, and configure <em> Advanced Options</em> for your API.</li>
  <li>In the <em>Target</em> section, specify the Target URL (i.e., endpoint) of the API implementation in the &quot;Target URL&quot; field. If you would like to specify additional Target URLs, click <strong>Add URL</strong>. For example, you might add one URL for a Sandbox Environment and another for a Production Environment.</li>
  <li>In the <em>Environment</em> section, click the radio button of the environment (Production or Sandbox) the Target URL is associated with.</li>
  <li>See <a href="#what_is_the_difference_between_sandbox_and_production_environments">What is the difference between Sandbox and Production environments?</a> for more information.</li>
  <li>See the <em>Configure Advanced Options</em> section.</li>
</ol>
<p><strong>D. Configure Advanced Options</strong></p>
<p>By default, the REST protocol is selected for your API, a Default Profile (Any in and out), and Default Operation are specified. After specifying the Target URL and Environment, you can optionally update the existing protocol (REST), or change the protocol to SOAP in the <em>Advanced Options</em> section.</p>
<p><strong><em>Configure Protocol: </em></strong></p>
<ol>
  <li>On the <em>Advanced Options </em>line click <strong>Show</strong> to expand the section.</li>
</ol>
<h4>To configure a SOAP API:</h4>
<ol>
  <li>Click the <strong>SOAP</strong> radio button. You can enter a WSDL URL directly or upload a zip archive:
    <ul class="usingUnorderedList">
      <li><strong>WSDL URL</strong><strong></strong>Click the <strong>WSDL URL</strong> radio button, enter the WSDL URL and click <strong>Get</strong>. The operations load into the <em>Operations</em> section.</li>
      <li><strong>Zip Archive</strong>&#8212;Click the<strong> Zip Archive</strong> radio button, then click <strong>Browse</strong> and select your zip archive. Click <strong>Upload</strong>. The <em>Upload File</em> dialog displays<em> Select a WSDL File from the Archive</em> and presents a listing of WSDL files that can be selected. Click the radio button of the WSDL file you would like to upload. Click <strong>Select</strong>. The operations load into the <em>Operations</em> section.</li>
    </ul>
</li>
</ol>
<h4>To configure a REST-based API:</h4>
<ol>
  <li>Click the <strong>REST</strong> radio button and select a <em>Default Profile</em> from the drop-down menu. <strong>Any in and out </strong>is the default selection.</li>
  <li>A &quot;Default_Operation&quot; is automatically assigned, with a GET method, Path that is pre-filled with the default URI, and &quot;API Default&quot; selected for the Request and Response serialization.</li>
  <li>Modify the &quot;Default_Operation&quot; and/or click <strong>+Add </strong> and specify the operations for the API definition based on your requirements.<br />
    <br />
    For the typical REST service, the most common methods, URIs, and serialization types would be:<br />
    <br />
    <table cellspacing="0px" class="doctable" style="width: 80%;">
      <thead>
        <tr>
          <th width="20%">Operation</th>
          <th width="20%">Method</th>
          <th width="20%">URI</th>
          <th width="20%">Request (Input)</th>
          <th width="20%">Response (Output)</th>
</tr>
        </thead>
        <tbody>
      <tr class="t2row">
        <td>list</td>
        <td>GET</td>
        <td>/</td>
        <td>N/A</td>
        <td>text/xml</td>
        </tr>
      <tr class="t1row">
        <td>read</td>
        <td>GET</td>
        <td>/{id}</td>
        <td>N/A</td>
        <td>text/xml</td>
        </tr>
      <tr class="t2row">
        <td>add</td>
        <td>POST</td>
        <td>/</td>
        <td>text/xml</td>
        <td>text/xml</td>
        </tr>
        <tr class="t1row">
        <td>delete</td>
        <td>DELETE</td>
        <td>/{id}</td>
        <td>N/A</td>
        <td>text/xml</td>
        </tr>
        <tr class="t2row">
        <td>update</td>
        <td>PUT</td>
        <td>/{id}</td>
        <td>text/xml</td>
        <td>text/xml</td>
        </tr>
  </tbody>
</table>
<br />
</li>
  <li>Click the <strong>Add Content-Length</strong> checkbox if you would like to send the Content_Length heading to the Target API. This disabled chunked encoding.</li>
  <li>Click the <strong>Use HTTP 1.0</strong> checkbox if you need to force the HTTP version to 1.0 for the Target API. It is unlikely to be needed.</li>
  <li>See <a href="#how_do_i_add_a_rest_service">How do I add a REST service?</a> for a sample walkthrough.</li>
</ol>
<p><strong>E. Configure Proxy</strong></p>
<ol>
  <li>After specifying the Target information, click <strong>Next</strong> to continue. The <em>Proxy </em> page displays. Here you will specify the <em>Published URL</em> that represents what users will select when accessing your API. The page displays a summary list of all Production and Sandbox endpoints specified in the previous step. It's recommended that you use a Proxy API to take advantage of important platform functionality. See <a href="#what_is_a_proxy_api">What is a Proxy API?</a> for more information.<br />
    <em><br />
      Note:
      As a security measure, users will be able to access a proxy that will run in the Cloud, and access the API implementation directly. </em><br />
</li>
  <li>The <em>Advanced Options</em> section displays the settings configured in the <em>Target</em> section. If you would like the Proxy configuration to be different than you initially specified in the <em>Target</em> section, you can update the existing settings. <br />
    <br />
    For example, you might have two APIs that have the same <em>Target</em> information, but different <em>Proxy</em> information. Alternatively, you  might have a SOAP API implementation but want to offer developers a REST API implementation, in this case, the <em>Target</em> would be SOAP, and the <em>Proxy</em> would be REST.</li>
</ol>
<p><strong>F. Enable / Disable Proxy API</strong></p>
<ol>
  <li>In the <em>Proxy API </em>section, click a<strong> </strong>radio button to indicate whether you would like to proxy your API.
    <ul class="usingUnorderedList">
      <li>If you select <strong>No</strong>, click <strong>Save</strong> to complete the API configuration process.</li>
      <li>If you select <strong>Yes</strong>, proceed and configure the <em>Production Endpoint </em>and <em>Advanced Options</em>.</li>
    </ul>
  </li>
  </ol>
<p><strong>G. Configure Production Endpoint</strong></p>
<ol>
  <li>In the <em>Production Endpoint</em> section, configure the proxy information for each Sandbox or Production endpoint.
    <ul class="usingUnorderedList">
      <li>In the <strong>URL</strong> section, specify the protocol. When the system proxies the API, the URL is made up of a selected protocol and hostname in the first field plus the path in the second field. You do not need to specify a path.</li>
      <li>For <strong>Allow Anonymous Access</strong>, click the <strong>Yes</strong> or <strong>No</strong> radio button to indicate whether you would like to enable or disable anonymous access for this API. See <a href="#what_is_anonymous_api_access">What is Anonymous API Access?</a> for more information.</li>
      <li>For <strong>This API requires Approval</strong>, indicate whether you would like to approve API access requests made with the <strong>API Access Wizard</strong>. All API Access Requests can be monitored by API Providers and designated administrators in the <em>API Name &gt; Apps</em> section.</li>
      <li>If you select <strong>Yes</strong>, proceed and configure the <em>Production Endpoint </em>and <em>Advanced Options</em>.</li>
      <li><em>Its common practice for Sandbox endpoint requests to be auto-approved. Production endpoint requests usually go through an approval cycle as API developers may want to review the app requesting access to see how the API functionality is being used.</em></li>
    </ul>
  </li>
  <li>Enter the <strong>CNAME</strong>. This represents the host name that is assigned to the proxy that is visible to individuals viewing your API. Note: The API Provider is responsible for mapping the Host Name of the IP Address to the applicable DNS.
<ul class="usingUnorderedList">
      <li>As you populate the fields, the Published URL display name updates to reflect your changes.</li>
    </ul>
  </li>
  </ol>
<p><strong>H. Configure Advanced Options</strong></p>
<ol>
  <li>On the <em>Advanced Options </em>line click <strong>Show</strong> to expand the section.</li>
  <li>The <em>Advanced Options</em> section allows you to select a protocol for the Proxy API, select policies, and select a Default Profile (REST option only). It displays the settings configured in the <em>Target</em> section.</li>
  <li>If you would like the Proxy configuration to be different than you initially specified in the <em>Target</em> section, you can update the existing settings. For example, you might have two APIs that have the same <em>Target</em> information, but different <em>Proxy</em> information. Alternatively, you might have a SOAP API implementation but want to offer developers a REST API implementation, in this case, the <em>Target</em> would be SOAP, and the <em>Proxy</em> would be REST. <br />
    <br />
    If the path in the proxy is different from that in the target, it is shown as &quot;Path not synced with target.&quot; If the Proxy configuration is different by design (as noted in the explanation above), do not resync. If you intend for the Proxy information to match the Target, go to the Target definition and click <strong>Sync to Proxy.</strong><br />
    <br />
    <strong><em>Note:</em></strong><em> If you need to add new operations, add them on the Target page first, then continue your configuration on the Proxy page.</em><br />
</li>
</ol>
<strong><em>Select Default Profile:</em></strong><br />
<br />
<ol>
  <li>Select a Default Profile from the drop-down list box. See <a href="#what_is_an_api_type_profile">What is an API Type Profile?</a> for more information.</li>
</ol>
<strong><em>Configure Method, Path, and Content Type for Operations:</em></strong><br />
<ol>
  <li>Select a Method from the dropdown menu, specify a URL in the text box, and configure a Content Type for the Request and Response message of each operation.</li>
  <li>See <a href="#what_are_the_supported_methods_and_content_types_for_requests">What are the supported Methods and Content Types for Requests?</a> for more information.</li>
</ol>
<strong><em>Select Policies:</em></strong>
<ol>
<li>In the <em>Policies</em> section, select the policies that you would like the system to enforce on the proxy.
  Note: <em>You MUST select one security policy (e.g., Category: Simple Header Security) and you should select a monitoring policy if you want to see charts and logs. If no policies display, consult your API Provider or Site Administrator. </em>See <a href="#what_security_and_monitoring_policies_are_supported">What security and monitoring policies are supported?</a></li>
 <li>Also note that if you select a monitoring policy<em>, </em>app data is not supported in <em>My APIs &gt; Monitoring</em> if Anonymous API Access is enabled. See <a href="#what_is_anonymous_api_access">What is Anonymous API Access?</a> for more information.</li>
 <li>If your API will be supporting OAuth, its best practice to use the <strong>Edit</strong> function on the <em>API Details</em> page to select the OAuthSecurity policy after you have configured the API to support OAuth (i.e., adding an OAuth Provider in the <em>Site Admin &gt; Domains</em> section), and configuring the API using the <strong>OAuth Details</strong> function on the <em>API Details</em> page.</li>
 <li>After making your changes click <strong>Save</strong>. Your API is now registered.</li>
 <li>If you will be configuring your API with OAuth, review the information in the <em>OAuth Support </em>section to determine next steps.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="what_is_scope_mapping_and_how_do_i_set_it_up"></a><h3>What is scope mapping and how do I set it up?</h3>
<p>If your API is using the Licenses feature, scope mapping is the key to defining which portions of your API will be available for which licenses. The scopes and licenses themselves are defined by the Business Admin, but at the API level you determine which operations are assigned to which scopes. This in turn determines which licenses will be available to app developers requesting access to your API.</p>
<p>For example, let's say your API includes a set of operations relating to calendar functionality and another set of operations relating to email access and management. App A might only need access to the calendar functionality, and App B might include an email client and might require access to the operations relating to email. The scope mapping feature enables you to group individual operations into logical groups that can be separately packaged into a license for App A and another for App B.</p>
<p>As another example, let's say you want to offer access to your GET operations, and a higher level of access, for a fee, to all operations including add, modify, and delete. The Business Admin defines READ and MODIFY scopes, and then assigns each to a separate license. The API Admin assigns GET operations to the READ scope and assigns all operations to the MODIFY scope. Users who choose the paid license get access to all scopes; users who choose the free license can only access the GET operations.</p>
<p>At runtime, when a request is received to an API proxy from a particular app, the Network Director only allows access to the specific operations covered by the license governing the app/API contract.</p>
<!--<p><em>Note: If your API is configured with OAuth, the scopes were defined as part of the initial OAuth Provider configuration in the Site Administration section. The Edit OAuth Details function on the API Details page includes a <strong>Scope Mapping</strong> function for this scenario.</em></p>-->
<a name="to_perform_scope_mapping"></a><h5>To perform scope mapping:</h5>
<ol>
  <li>First, make sure the Licenses feature is enabled in the API. From the <em>API Details</em> page, click<strong> Edit</strong>, and make sure the <strong>Use Licenses</strong> checkbox is checked.</li>
  <li>From the <em>API Details</em> page, click <strong>Scope Mapping</strong>. The <em>Edit API Scope</em> page displays.</li>
  <li>Choose a scope mapping approach:
    <ul>
      <li><strong>API-wide Mapping</strong>: choose this if you're not subdividing your operations for licensing purposes.</li>
      <li><strong>Operation-specific Mapping</strong>: choose this If you'll want to grant access to some portions of your API separately.</li>
    </ul>
   </li>
  
  <li>Operation-specific mapping only: For each operation, in the <em>Scope</em> column, click <strong>Select</strong>. The <em>Select Scope</em> popup displays. Choose one or more scopes for the operation and click <strong>Confirm</strong>.</li>
  <li>Repeat for each operation.</li>
  <li>Click <strong>Save</strong>.</li>
</ol>
<!--<p>To configure Scope Mapping (via <em>Edit OAuth Details &gt; Scope Mapping</em>):</p>
<ol>
  <li>Refer to the Configure Scope Mapping section in <a href="publish_api_oauth_support.htm#how_do_i_configure_my_api_with_an_oauth_provider">How do I configure my API with an OAuth Provider?</a>.</li>
</ol>-->

<p><a href="#top">Back to top</a></p>



<a name="how_do_i_inform_app_developers_about_available_licenses_and_app_access"></a><h3>How do I inform app developers about available licenses and API access?</h3>
<p>As a standard practice, a list of available Licenses and the level of App Access provided by each License should be included in the documentation for your API.</p>

<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_a_rest_service"></a><h3>How do I add a REST service?</h3>
<p>The following example illustrates how to add a REST service from the BingVirtualEarth API.</p>
<p><strong><u>Pre-conditions</u></strong></p>
<ol>
  <li>A working REST service.
    <ul class="usingUnorderedList">
      <li><a href="http://msdn.microsoft.com/en-us/library/ff701715.aspx" target="_blank">Bing Maps Locations API</a> is used in the following instructions.</li>
      <li>You can run this URL to see the results:<br />
        <br />
        <a href="http://dev.virtualearth.net/REST/v1/Locations?postalCode=90020&amp;o=xml&amp;key=AoCDRhKKY0Gy6hlx1Ncl1PwiV7GqoGU_MebxLQvmhxy_bsAtzVfmVtzFsjOYSCTZ" target="_blank">http://dev.virtualearth.net/REST/v1/Locations?postalCode=90020&amp;o=xml&amp;key=AoCDRhKKY0Gy6hlx1Ncl1PwiV7GqoGU_MebxLQvmhxy_bsAtzVfmVtzFsjOYSCTZ</a><br />
    </li>
    </ul>
    <ul class="usingUnorderedList">
      <li>A test client to send REST requests such as <a href="http://code.google.com/p/rest-client/" target="_blank">Google rest-client</a>, <a href="https://addons.mozilla.org/en-US/firefox/addon/restclient/" target="_blank">RESTClient Firefox Add-on</a>, or <a href="http://www.soapui.org/" target="_blank">soapUI</a>.</li>
  </ul>
</li>
</ol>
<p><strong><u>A. Add REST Service </u></strong></p>
<ol>
  <li>From the <em>Plus</em> menu, select <strong>Add a New API</strong>. The <em>Add API Wizard</em> displays.</li>
  <li>Review the tooltips for each option to gather additional details and recommendations.</li>
  <li>On the <em>API</em> page, specify the information as illustrated below, and click <strong>Next</strong> to continue. <br />
    <br />
    <img src="images/add_rest_api.jpg" width="433" height="389" alt="" /></li>

  <li>Configure the following information:
    <ul class="usingUnorderedList">
      <li>On the <em>Target</em> page, add the &quot;Target URL&quot; for the REST service.</li>
      <li>Expand <em>Advanced Options</em> and select the <strong>REST</strong> radio button.</li>
      <li>Add an Operation with the GET method, click <strong>SYNC TO PROXY</strong>, and click <strong>Next</strong> to continue.<br />
        <br />
        <img src="images/add_rest_api2.jpg" width="800" height="339" alt="" /></li>
    </ul>
  </li>
  <li>Configure the following information:

  <ul class="usingUnorderedList">
    <li>On the <em>Proxy</em> page, enter the URL and CNAME of the Production Endpoint.</li>
    <li>For <em>Allow Anonymous Access</em>, click the <strong>No</strong> radio button. See <a href="#what_is_anonymous_api_access">What is Anonymous API Access?</a> for more information.</li>
    <li>For <strong>This API requires Approval</strong>, indicate whether you would like to approve API access requests made with the<em> API Access Wizard</em>. All API Access Requests can be monitored by API Providers and designated administrators in the <em>API Name &gt; Apps</em> section.</li>
    <li>Expand <em>Advanced Options</em> and verify the settings are correct (i.e., they match the  Target section in the previous step).</li>
    <li>In the <em>Policies</em> section, select the policies that you would like the system to enforce on the proxy.
    Note: <em>You MUST select one security policy (e.g., Category: Simple Header Security) and you should select a monitoring policy if you want to see charts  and logs. If no policies display, consult your API Provider or Site Administrator. </em>See <a href="#what_security_and_monitoring_policies_are_supported">What security and monitoring policies are supported?</a></li>
    <li>Click <strong>Save</strong>.<br />
      <br />
      <img src="images/Add_rest_api3.jpg" width="902" height="416" alt="" />
    </li>
  </ul>
</li>
</ol>
<p><strong><u>B. Set up Contract </u></strong></p>
<ol>
  <li>Add a new app. See <a href="create_app_creation.htm#how_do_i_create_a_new_app">How do I create a new app?</a></li>
  <li>Request API access for the newly added REST API. See <a href="access_apis_api_access.htm#how_do_i_get_api_access_for_my_app">How do I add APIs to my app?</a></li>
  <li>The API Administrator will then approve and activate your API Access Request. After approval, you are ready to test the API with your app.</li>
</ol>



<p><strong><u>C. Test API </u></strong></p>
<p>You can test the API with the <em>Dev Console</em> or with the REST clients mentioned in the <em>Pre-conditions</em> section above.</p>
<p>The request URL should be the added API URL with the same parameters for the physical service. For example:</p>
<pre>
http://&lt;API_URL&gt;/&lt;API_path&gt;?postalCode=90020&amp;o=xml&amp;key=AoCDRhKKY0Gy6hlx1Ncl1PwiV7GqoGU_MebxLQvmhxy_bsAtzVfmVtzFsjOYSCTZ</pre>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_manage_api_visibility"></a><h3>How do I manage API visibility?</h3>
<p>When you create an API using the <strong>Create a New API</strong> function you can control whether visibility of the API is <em>Public</em> or <em>Private</em> via the &quot;Visibility&quot; option. You can change API visibility based on your requirements by using the <strong>Edit</strong> function on the <em>API Details</em> page.</p>
<ul class="usingOrderedList">
  <li>A public API is visible to all individuals that use the platform, it is searchable, and displays in the <em>All APIs</em> search filter.</li>
  <li>A private app is visible to the creator, in the <em>My APIs</em> search filter, and to individuals that are members of a Private API Group. The API name displays on the <em>API Details</em> page with a lock icon indicating that it is private.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_proxy_api"></a><h3>What is a proxy API?</h3>
<p>The <strong>Add a New API</strong> function includes a proxy API option that allows you to configure an endpoint in a particular environment (e.g., internal or external network) that is accessible by your target applications.</p>
<p>A proxy API endpoint exists in the Cloud and is similar to a virtual service. As a security measure, users will be able to access a proxy that will run in the Cloud, and will not be accessing the API implementation directly.</p>
<p>Based on the development cycle of your API, you can chose to expose selected functionality in your API by defining a Proxy API for each endpoint and selecting which functionality (e.g., operations) you would like to expose. This approach allows you to manage the API lifecycle and expose functionality based on your requirements (e.g., development phase, testing, production, etc.).</p>
<p><strong>Advantages:</strong></p>
<p><em>Internal / External Networks</em>&#8212;If you would like to access to your real API on an internal network, but would like to expose specific functionality on an external network, you can add the API Target URL using the <strong>Add a New API </strong>function, and then virtualize the API by specifying a Proxy API Target URL for specific functionality you would like to make available on an external network.</p>
<p><em>Bridge Between App and Proxy API</em>&#8212;If your API is focused on the business aspects of the API or service, you can set up the proxy API to provide other tasks such as security enforcement or specifications required by the target (e.g., API specs for the app team, etc.).</p>
<p><em>Sandbox / Production Endpoint Access</em>&#8212;Adding a Proxy API allows app developers to gain access to your API sandbox endpoint (to test API functionality in their app), and production endpoint (to use API functionality in a live application).</p>
<p><em>Contract Enforcement</em>&#8212;If you configure your API with a proxy, you can take advantage of the platform's contract enforcement functionality. Here's how it works:</p>
<ul class="usingOrderedList">
  <li>When you add an API to the platform your policy administrator adds a series of security policies to the Policy Manager Tenant Organization for your platform using the &quot;Management Console. Site or Policy Administrators can refer to the Community Manager Installation Guide for more information. Email <em>Support</em> for more information.</li>
  <li>In the platform, apps that would like to have access to your API submit and <strong>API Access Request</strong>.</li>
  <li>When the request is approved, the app is &quot;connected&quot; to the API.</li>
  <li>The security policies are in force when the app is connected to the API and ensure that only authorized applications can gain access to your API at runtime.</li>
  <li><em>Note if your API is not configured with a proxy, you will need to provide your own firewall rules and security approach to restrict applications making calls to your API.</em></li>
</ul>
<p><em>Service Level Policies </em>&#8212;If you configure your API with a proxy, you can take advantage of the service level and quota management policy functionality to monitor your API to ensure it meets the defined standards of service level performance contracts.</p>
<p><strong>Example Scenarios:</strong></p>
<p><em>Scenario 1</em>&#8212;You build an API and would like to expose specific functionality for the purposes of collaborating with a selected development and/or discussion group. You do not want to the API to be visible to anyone outside the selected group. To accomplish this:</p>
<ul class="usingOrderedList">
  <li>Add a new API, configure with private visibility, and add a proxy API for operations you would like to expose. See the <a href="publish_api_tutorial.htm">quick start </a>for API Providers for more information.</li>
  <li>App developers can submit an API access request and connect to your API. See <a href="access_apis_api_access.htm#how_do_i_get_api_access_for_my_app">How do I add APIs to my app?</a></li>
  <li>Create a Private API Group and invite selected individuals you would like to be part of your collaboration group<em>.</em> See <a href="collaborate_groups.htm">Groups</a> for more information.</li>
  <li>Update the API definition and adjust the configuration based on your business requirements.</li>
</ul>
<p><em>Scenario 2</em>&#8212;You build an API and would like to expose specific functionality to the public for them to use in their applications. To accomplish this:</p>
<ul class="usingOrderedList">
  <li>Add a new API, configure with public visibility, and add a proxy API for operations you would like to expose. Your API will be visible via the <em>Search</em> function. See the <a href="publish_api_tutorial.htm">quick start </a>for API Providers for more information.</li>
  <li>App developers can submit an API access request and connect to your API. See <a href="access_apis_api_access.htm#how_do_i_get_api_access_for_my_app">How do I add APIs to my app?</a></li>
  <li>Create an Independent Group and invite individuals you would like to be part of your collaboration group<em>.</em> See <a href="collaborate_groups.htm">Groups</a> for more information.</li>
  <li>Update the API definition and adjust the configuration based on your business requirements.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_difference_between_sandbox_and_production_environments"></a><h3>What is the difference between sandbox and production environments?</h3>
<ul class="usingOrderedList">
  <li>Sandbox is a unique gateway URL (service endpoint) that provides access to an API's sandbox environment where you perform testing. The Sandbox Endpoint URL becomes available after requesting access to an API using the <strong>Request API Access Wizard</strong>.</li>
  <li>Production is a unique gateway URL (service endpoint) that provides access to the production endpoint of an API. The production endpoint URL becomes available when you a) request production access, and b) go live after production access has been approved.</li></ul>
<p><a href="#top">Back to top</a></p>



<a name="what_is_an_api_type_profile"></a><h3>What is an API Type Profile?</h3>
<p>An &quot;API Type Profile&quot; is used for proxy APIs to identify the type of content an API will accept from the consumer (IN), and will be returned by the API to the consumer (OUT). IN and OUT identifiers are combined with content types (i.e., ANY, JSON, FORM, and XML) and are packaged on the API Type Profile drop-down menu in profile sets. The following content types are supported:</p>
  <table cellspacing="0px" class="doctable" style="width: 80%;">
    <thead>
    <tr>
    <th width="20%">Content Type</th>
    <th width="80%">Description</th>
</tr>
</thead>
<tbody>
      <tr class="t2row">
        <td>ANY</td>
        <td>Indicates that the content is not part of the API definition. Refer to the API documentation for an explanation.</td>
      </tr>
      <tr class="t1row">
        <td>JSON</td>
        <td>Indicates that JSON will be expected. Refer to the JSON  specification for more information (<a href="http://www.w3.org/TR/rdf-sparql-json-res/#mediaType">http://www.w3.org/TR/rdf-sparql-json-res/#mediaType</a>).</td>
      </tr>
      <tr class="t2row">
        <td>FORM</td>
        <td>Indicates that form encoding will be expected. Refer to the form- urlencoded Media Type specification for more information (<a href="http://www.w3.org/MarkUp/html-spec/html-spec_8.htm">http://www.w3.org/MarkUp/html-spec/html-spec_8.htm</a>).</td>
      </tr>
      <tr class="t1row">
        <td>XML</td>
        <td>Indicates that XML will be expected. Refer to the XML  specification for more information (http://www.w3.org/TR/REC-xml/).</td>
      </tr>
      </tbody>
  </table>
<p><a href="#top">Back to top</a></p>



<a name="what_are_the_supported_methods_and_content_types_for_requests"></a><h3>What are the supported HTTP method types and content types for requests?</h3>
<p>If you chose to proxy your API, you can optionally configure the operations with Methods, URLs, and Content Types. After the API settings are saved, the specified information is synched with the Target URLs. The following options are supported:</p>
<table cellspacing="0px" class="doctable" style="width: 80%;">
  <thead>
  <tr>
    <th width="20%">Option Name</th>
    <th width="80%">Description</th>
  </tr>
</thead>
<tbody>
    <tr class="t2row">
      <td>Method</td>
      <td>The &quot;Method&quot; is a dropdown menu that allows you to map to the HTTP method that must be used at runtime when formulating an HTTP request message. Options include ANY, GET, PUT, POST, and DELETE.</td>
    </tr>
    <tr class="t1row">
      <td>Path</td>
      <td>The  &quot;Path&quot; is a text field that allows you to specify a location  attribute that can be used to map portions of an HTTP request URI to portions  of a WSDL input message. The specified syntax must match the inbound URI pattern. For example, if the HTTP URL looks similar to  http://endpoint/context/quotes/xyz where xyz is a variable, then the URI syntax  would be /quotes/{var}. The URI can contain multiple variables denoted by {}. This field is optional.</td>
    </tr>
    <tr class="t2row">
      <td>Content Types</td>
      <td>The  Request and  Response sections (accessible by clicking <strong>Show</strong> for each operation), includes a list of  &quot;Pre-defined&quot;  content types that support different message processing requirements for Input and   Output messages. <br />
        <br />
        <em><u>Request Content-Type</u></em>&#8212;This option is used to describe the content type of the Request Message. The platform uses input serialization to correctly set the content type of the request being issued. The &quot;Pre-defined&quot; content types include API  Default, Any, application/x-www-form-urlencoded, text/xml, application/xml, and application/json.<br />
        <br />
          1) If the request message is a GET or DELETE, the query string contains items that are appended  to the resulting XML or JSON message. <br />
          <br />
          2) If the request message is a PUT or POST, the  body contains a URL encoded string whose elements are appended to the resulting  XML or JSON message. A value of an XML-based content type assumes that the body  contains the whole XML message.<br />
          <br />
          <u><em>R</em></u><em><u>esponse Content-</u></em><u><em>Type</em></u>&#8212;This option is used to describe the content type of the response message when it is not a fault. The platform uses output serialization to correctly set the content type of the response sent back to the consumer when the response is not a fault. The &quot;Pre-defined&quot; content types include API  Default, Any, text/xml, application/xml, application/json.<br />
          <br />
        <em>NOTE: If Proxy API = Yes, the selected content types are automatically synched to the specified proxy address. If you do not want the content type selections synched to the proxy address, click <strong>delete</strong> next to the &quot;sync to proxy&quot; icon. </em></td>
    </tr>
</tbody>
</table>
<p><a href="#top">Back to top</a></p>



<a name="what_is_anonymous_api_access"></a><h3>What is anonymous API access?</h3>
<p>The Add API Wizard includes an Allow Anonymous Access option on the Proxy page that allows you to enable or disable anonymous access to Sandbox and Production endpoints of APIs that are added to the platform.</p>
<p><em>Note: Anonymous access is typically granted to API Sandbox endpoints, but it is generally not a standard practice to grant anonymous access to Production endpoints. </em></p>
<p><strong>Allow Anonymous Access = Yes</strong></p>
<p><em>Users that are not platform members:</em></p>
<p>Allowing anonymous access to an API endpoint is useful if you would like to offer a preview of an API to developers without requiring users to create an app or sign up to the platform. For example, if you have a specific feature set you would like to expose as part of promoting your API, you can expose those operations in your API configuration, and enable the Proxy API and the Allow Anonymous Access option.</p>
<p>Developers can read the documentation and access the API without signing up and requesting access to the API. If a developer decides they would like to use the API, they can sign up to the platform, create an app using the Add a New App function, and select Access on the API Details page to submit an API Access Request.</p>
<p><em>Users that are platform members:</em></p>
<p>When you enable anonymous access in the <strong>Add a New API Wizard</strong> by selecting <strong>Yes</strong> to <strong>Allow Anonymous Access</strong> on the <em>Proxy</em> page, the <strong>This API Requires Approval</strong> option is disabled. This means that you are not required to submit an API Access Request, except in the following scenarios:</p>
<ul class="usingOrderedList">
  <li>You must submit an API Access Request to view the <em>Apps Connected</em> list on the <em>API Details</em> page.</li>
  <li>The <em>My Apps &gt; Dev Console</em> will only show the API from the API drop-down when an approved API Access Request exists.</li>
 </ul>
 <p><strong>API Charts / Logs with Anonymous API Access:</strong></p>
 <ul class="usingOrderedList">
  <li>When <strong>Allow Anonymous Access</strong> is set to <strong>Yes</strong> for an API, viewing usage data for apps in the <em>Overview</em>, <em>Charts</em>, and <em>Logs</em> sections of <em>My APIs &gt; Monitor</em> is not supported. This applies whether or not an approved API Access Request exists for an app. The <em>My APIs &gt; Monitor</em> section will still show API usage data.</li>
 </ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_add_an_api_version"></a><h3>How do I add an API version?</h3>
<p>When you add a new API, the &quot;Version ID&quot; that you specify in the<strong> Add a New API Wizard</strong> represents the version number that will display on the <em>Version</em> drop-down menu. You add a new API version using the <strong>+Version</strong> function on the <em>API Details </em>page. Adding an API version follows the exact same process as adding your first API except that the information from the current API version is replicated. From here you can edit/customize the API definition based on your requirements.</p>
<h5>To add an API version: </h5>
<ol>
  <li>Click the <em>My APIs</em> quick filter in the top navigation. The <em>APIs Summary</em> page displays.</li>
  <li>Click the name of an API you would like to create a new version of. The<em> API Details</em> page displays.</li>
  <li>From the Version drop-down menu, select the API version that will serve as the base content for the new API version.</li>
  <li>Click <strong>+ Version</strong>. The <strong>Add API Version</strong> screen displays and presents a duplicate copy of the current API version.</li>
  <li>Change the Version ID, Tags, Visibility option, API Description, and Version Description. <br />
    <br />
    <em>Note that the API Name is cannot be modified for an API Version. You can only change the API Name using the Edit function on the original API. </em></li>
  <li>Update the API contents based on your requirements. See <a href="#how_do_i_add_an_api">How do I add an API?</a> or <a href="publish_api_tutorial.htm">How do I add and setup an API?</a> for details on configuring your API.</li>
  <li>After you have defined your API version, click <strong>Save</strong>. The API is saved and the Version ID specified displays in the Version drop-down menu.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_edit_an_api"></a><h3>How do I edit an API?</h3>
<p>You can modify your API definition using the <strong>Edit</strong> function on the <em>API Details</em> page.</p>
<h5>To edit an API: </h5>
<ol>
  <li>Click the <em>My APIs</em> quick filter in the top navigation. The <em>APIs Summary</em> page displays.</li>
  <li>Click the name of an API you would like to edit. The<em> API Details</em> page displays.</li>
  <li>From the Version drop-down menu, select the API version you would like to edit.</li>
  <li>Click <strong>Edit</strong>. The <strong>Edit API Info</strong> screen displays and presents the current API definition.</li>
  <li>Update the API contents based on your requirements. See <a href="#how_do_i_add_an_api">How do I add an API?</a> or <a href="publish_api_tutorial.htm">How do I add and setup an API?</a> for details on configuring your API.</li>
  <li>After you have edited your API, click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_delete_an_API"></a><h3>How do I delete an API?</h3>
<h5>To delete an API: </h5>
<ol>
  <li>Click the <em>My APIs</em> quick filter in the top navigation. The <em>APIs Summary</em> page displays.</li>
  <li>Click the name of an API you would like to delete. The<em> API Details</em> page displays.</li>
  <li>Click <strong>- Version</strong>. The confirmation message &quot;Do you really want to delete this API?&quot; displays. Click <strong>OK</strong>. Your API is deleted.</li>
  <li>If your API is the last API version available, you'll be prompted to confirm that you want to delete the last version, which deletes the API. Click <strong>OK</strong> to confirm.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_determine_what_licenses_will_be_available_for_my_api"></a><h3>How do I determine what licenses will be available for my API?</h3>
<p>There are a couple of steps you'll need to complete in your API setup to define the licenses that app developers will see when requesting access to your API:</p>
<ol>
  <li>In your API setup, make sure that the Use Licenses box is checked. Go to the <em>API Details</em> page, click <strong>Edit</strong>, and verify that the box is checked.</li>
  <li>Do scope mapping. From the <em>API Details</em> page, click <strong>Scope Mapping</strong>. For instructions, see <a href="#to_perform_scope_mapping">To perform scope mapping</a>.</li>
</ol>
<p>The scopes are the link between your API and the licenses that are offered to app developers. If you have any questions regarding which scopes to assign or which licenses will be available, consult your Business Admin.</p>
<p>For an overview of the Licenses feature and the relationship between the setup steps performed by the Business Admin and those done by the API Admin, and the relationship between scopes and licenses, see <a href="ov_licenses.htm">Licenses: Feature Overview</a>.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_edit_the_license_on_an_api_access_request_api_administrator"></a><h3>How do I edit the license on an API access request?</h3>
<p>An API Administrator can change the license for a specific API Access Request prior to approving the request.</p>
<p>If you want to review the license scope of API access requests before approving, make sure you've selected the <strong>This API requires approval</strong> option in the API setup (<em>API</em> &gt; <em>Edit</em> &gt; <em>Proxy</em> page). If the API is set to auto-approve requests, you won't have the opportunity to modify the license.</p>
<h5>To edit the license scope for a pending API access request:</h5>
<ol>
  <li>Go to <em>APIs &gt; Apps</em>.</li>
  <li>Select the API Access Request you want to modify. It must have a status of <strong>Access Pending</strong>.</li>
  <li>Click<strong> Edit.</strong> The <em>API Access Wizard</em> launches and loads the <em>Licenses</em> page.</li>
  <li>Change the license option as needed.</li>
  <li>Click through the rest of the wizard and then click <strong>Save</strong>.</li>
</ol>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>


