<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">


<title>Process Use Cases</title>
<link href="../../style/reset.css" rel="stylesheet" type="text/css" />
<link href="../../style/base.css" rel="stylesheet" type="text/css" />
<link href="../../style/document.css" rel="stylesheet" type="text/css" />

</head>
<body>
<div class="documentation supportContent">
<h2 name="top">Managing Keys</h2>

<p>Overview of key management options for Containers, Users, Service Identities, and Organization Identities. </p>



<p>
</p>


<a href="service_identities.htm" class="button secondary"> Identity Categories</a>

<a href="org_identities.htm" class="button secondary">External Keystore Function</a>








</p>



<div class = "divider1"></div>
<h3 style="color: gray;">Table of Contents</h3>


<ol class="table_of_contents">


<li><a href="#overview">Key Management Overview</a></li>

<li><a href="#functions">Key Management Functions</a></li>






</ol>
  <div class = "divider1"></div>
  <h2> Key Management Overview</h2>
<p>The Policy Manager  <em>Manage PKI Keys Wizard</em> is used to generate  and manage (import/export) PKI Keys, Certificates, and Certificate Signing Requests for Service, Organization, Container, and  User identities. </p>
<h5>Supported Key / Certificate Types:</h5>
<ul class="usingOrderedList">
  <li><strong>PKI Keys</strong> - Access keys that guarantee message  integrity by signing the message with a private key and verifying the message  with a public key. </li>
  <li><strong>X.509 Certificates</strong> - An authentication mechanism that  provides visibility to public information and verifies private information while  keeping it secure. Credential Information is embedded in the body of a SOAP  Message, or can be obtained from the HTTPS Context.</li>
  <li><strong>Certificate Signing Request (CSR)</strong> - A file that includes encoded  information generated by a web server. It is sent from an applicant to  Certificate Authority to request a digital certificate. The CSR contains  information identifying the applicant and the public key chosen by the  applicant. Before creating a CSR, the applicant first generates a key pair  keeping the private key secret. The corresponding private key is not included in  the CSR, but is used to digitally sign the entire request.</li>
</ul>


<h5>Identity Categories:</h5>
<p> The  <a href="service_identities.htm" > Identity Categories</a> section  provides a functional overview of each identity category and available key management options for the default Policy Manager keystore, or External Keystore feature. </p>

<h5>External Keystore Feature</h5>
<p>The  SOA Software External Keystore Feature  enables a Container to use an external key store for managing  all the PKI keys and certificates it needs. Without installing this feature the  default Policy Manager key store will be used.</p>
<p><em>Note: Installation of this feature MUST occur before installing the Policy Manager features (SOA Software Policy Manager Console and SOA Software Policy Manager Services) are installed. If you have already installed Policy Manager and would like to use the external keystore feature, you must first install the SOA Software External Keystore Feature, and then  reinstall both of the Policy Manager features. </em></p>
<h2>Key Management Functions</h2>
<p>The <em>Manage PKI Keys Wizard</em> supports the   key management options listed below. Supported options vary based on the identity category and whether you are using the External Keystore feature. Refer to the <a href="service_identities.htm" > Identity Categories</a> section  available key management options for the  default Policy Manager keystore, or External Keystore feature. </p>

<h3>Generate Options</h3>
<h4>Generate PKI Keys</h4>
<p>Used if you would like to generate public and private keys using the Policy Manager default keystore.  This option does not create a certificate. </p>

<h4>Generate X.509 Certificate</h4>
<p>Used to generate   an X.509 certificate. </p>

<h4>Generate PKI Keys and X.509 Certificate</h4>
<p>Used to generate  PKI  Keys and an X.509 certificate. </p>

<h4>Generate Certificate Signing Request (CSR)</h4>
<p>Used if user of the container already has a PKI Key pair and  wants to generate a Certificate Signing Request. The request can be sent to a  third party Certificate Authority to request an X.509 Certificate.</p>
<p><a href="#top">back to top</a>
</p>

<a name="xxx">
<h3>Import Options</h3>
</a>

<h4>Import X.509 Certificate</h4>
<p>Used to import an X.509 Certificate  that has been issued by a third party Certificate Authority (CA). As a  prerequisite to using this option, a PKI Key pair must already by generated. The  import function supports the certificate file format (.CER). </p>

<h4>Import PKI Keys and X.509 Certificate</h4>

<p>Used to  import public and private keys and a certificate that has been issued by a third party Certificate  Authority. Import requires that you specify a keystore path or certificate filename. Supported keystore types include <em>Java</em> (imports public keys from a certificate only) and <em>PKCS12</em> (imports keys from a PKCS12 only. The import function supports the certificate file format (.CER). </p>

<h3>Export Options</h3>
<h4>Export X.509 Certificate</h4>
<p>Exports an X.5.09 certificate to certificate file format (.CER). </p>
<h4>Export Private Key and X.509 Certificate</h4>
<p>Exports an Private Key and X.5.09 certificate to certificate file format (.CER).  </p>

<h3>Delete Options</h3>

<h4>Delete PKI Keys and X.509 Certificate</h4>
<p>Deletes key from the  current identity type.  Provides a confirmation message prior to deleting  keys. </p>

<a name="xxx"></a>


<p><a href="#top">back to top</a>
</p>


<div class = "divider1"></div>
</div>
</body>
</html>