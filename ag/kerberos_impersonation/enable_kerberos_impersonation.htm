---
layout: page
title: Enabling Kerberos Impersonation with Policy Manager 7.1
description: Learn how to enable Kerberos constrained delegation or impersonation with Policy Manager 7.1
product: ag
category: learn
weight:	6
Subcategory: Kerberos
type: page
nav-title: Enabling Kerberos Impersonation with Policy Manager 7.1

---
  <h2 name="top">Enabling Kerberos Impersonation</h2>
  <p>Learn how to enable Kerberos constrained delegation or impersonation with Policy Manager 7.1</p>


<a href="key_management.htm" class="button secondary">Managing Keys</a><br><br>




  <div class = "divider1"></div>
   <h3 style="color: gray;">Table of Contents</h3>

   <ol class="table_of_contents">

 <li><a href="#introduction">Introduction</a></li>

  <li><a href="#prereqs
">Step 1: Prerequisites</a></li>

 <li><a href="#
install_kerberos
">Step 2: Install SOA Software Kerberos Impersonation Feature</a></li>


  <li><a href="#

create_activedirectory
">Step 3: Create Active Directory Identity System</a></li>



  <li><a href="#

kerberos_identity
">Step 4: Create Kerberos Identity System</a></li>


  <li><a href="#

create_policies
">Step 5: Create Policies</a></li>

   <li><a href="#

create_physical
">Step 6: Create Physical Service</a></li>



   <li><a href="#
cred_delegation
">Step 7: Configure Credential Delegation / Impersonation</a></li>


 <li><a href="#
usage_scenario
">Step 8: Usage Scenario</a></li>

  </ol>
  <div class = "divider1"></div><p></p>






<a name="introduction">
<h3>Introduction</h3></a>

<p>Policy Manager provides an <em>SOA Software Kerberos Impersonation  Feature</em> that allows you to enable Kerberos constrained delegation or impersonation. The feature installs the Kerberos constrained delegation functionality which includes two extensions (Protocol Transition and Constrained Delegation).These features were introduced in Microsoft Server 2003 and are included in the implementation of the Kerberos V5 authentication protocol in Windows Server 2008.
</p>
<ul class="usingOrderedList">
  <li><strong>Protocol Transition</strong> - This extension allows a service that uses Kerberos to obtain a Kerberos service ticket to itself on behalf of a Kerberos security principal (a user or a computer) without requiring the principal to initially authenticate to the KDC.      Instead, a user sending a request to a service with credentials, such as an SSL client certificate, that are not acceptable for Kerberos authentication can be authenticated by any appropriate Windows authentication method. When authentication is completed, Windows creates a user token. Then, if the service has the necessary impersonation privileges in Windows, when the service uses this token to impersonate the user and request a Kerberos service ticket to another service, the service ticket issued, which is to the requesting service, is mapped to the user token. The service may use the service ticket obtained through protocol transition to obtain service tickets to other services and thereby delegate the credentials if the account under which the service is running is configured correctly to use the Kerberos constrained delegation extension </li>
  <li>
    <p><strong>Constrained delegation</strong> - This extension allows a service to obtain service tickets (under the delegated user's identity) to a restricted list of other services running on specific servers on the network after it has been presented with a service ticket, which may be a service ticket obtained through protocol transition.</p>
  </li>
</ul>
<p>Here's how it works:</p>
<ul class="usingOrderedList">
  <li>First,  install the <em>SOA Software Kerberos Impersonation Feature</em>.</li>
  <li>Generate a Kerberos ticket to talk to the target service protected by Kerberous. This requires  that you have a  username/password of a user registered in Active Directory. This will be used  generate a Kerberos ticket for the user to talk to the target service protected by Kerberos. </li>
  <li>Create both an Active Directory and Kerberos Identity System in Policy Manager. C</li>
  <li>Create a series of Identity Profiles you will map to different realms in the Kerberos Identity System. </li>
  <li>Set up a series of policies (SPNEGO, Authentication, WS-Security Transport Binding, and WS-Security Supporting Token) that will be attached the physical and virtual services you will be defining)</li>
  <li>Finally, create a physical service and virtualize it three times, attach the policies, and execute a usage scenario for contrained delegatation and impersonation. </li>
</ul>

<h3><a name="prereqs">Step 1: Prerequisites</a></h3>
<p> To perform this sample use case you will need:</p>
<ol class="usingOrderedList">
  <li>Policy Manager Container Instance.</li>
  <li>Network Director Container Instance. </li>
  <li>A service WSDL that includes SPN / UPN. An SPN is an  entity processing requests for a specific service (e.g.,  HTTP, LDAP, SSH, etc. Machine only).
A UPN retrieves a service ticket for a SPN to use that actual service. You can retrieve the SPN or UPN using the WSDL of the target service, or by using a Policy Manager Identity Profile. </li>
  <li>&lt;more&gt;</li>
</ol>
<h3><a name="install_kerberos">Step 2: Install SOA Software Kerberos Impersonation Feature</a></h3>
<p><em>Note: This feature requires Java Runtime Environment (JRE), version 8.</em></p>
<ol class="usingOrderedList">
  <li>Launch the <em>SOA Software Administration Console </em>(http://&lt;hostname:&lt;port&gt;/admin/).</li>
  <li>On the <em>Installed Features</em> screen, select <strong>Plug-in</strong> from the <em>Filter</em> menu. </li>
  <li>Select the <em>SOA Software Kerberos Impersonation Feature</em> and click <strong>Install Feature</strong>.</li>
  <li>After the installation is complete, click <strong>Close</strong>. Do not select <strong>Configure</strong>.</li>
</ol>
<a name="create_activedirectory">
<h3>Step 3: Create Active Directory Identity System</h3>
</a>

<p>In order to generate a Kerberos ticket to talk to the target service protected by Kerberous,  you will need a  username/password of a user registered in Active Directory. You must also create an Identity System in Policy Manager to  register the Active Directory domain.</p>
<ol class="usingOrderedList">
  <li>Launch the Policy Manager Management Console.</li>
  <li>Go to<em> Configure &gt; Security &gt; Identity Systems</em> and select <strong>Add Identity System</strong>. </li>
  <li>Select <strong>Directory Server</strong> for the Identity System Type, and <strong>Active Directory</strong> for the Directory Type. </li>
  <li>Configure the identity system based on your requirements, then click <strong>Finish</strong> and <strong>Close</strong>. </li>
  <li>After completing the configuration click <strong>Finish</strong>. </li>
</ol>
<h3><a name="kerberos_identity">Step 4: Create Kerberos Identity System</a></h3>
<p>In order to generate a Kerberos ticket to talk to the target service protected by Kerberous,  you will need a  username/password of a user registered in Active Directory, and you will need to register the Active Directory domain in Policy Manager. </p>
<ol class="usingOrderedList">
  <li>Launch the Policy Manager Management Console.</li>
  <li>Go to<em> Configure &gt; Security &gt; Identity Systems</em> and select <strong>Add Identity System</strong>. </li>
  <li>Select <strong>Kerberos</strong> for the Identity System Type, and <strong>Kerberos</strong> for the Directory Type. </li>
  <li>Upload your KDC Configuration File (krb5.ini). For this illustration we are using the following sample file:<br>
    <br>
    krb5.ini file sample content:<br>
    <br>
    <img src="images/krb5_sample1.jpg" width="345" height="292"><br>
    <br>
    <p>If the file contains multiple realms you must define capaths information.<br>
      For example, ANL.GOV, PNL.GOV, and NERSC.GOV all use the ES.NET realm as an intermediate realm. ANL has a sub realm of TEST.ANL.GOV which will authenticate with NERSC.GOV but not PNL.GOV. <br>
    </p>
    <p>The [capaths] section for ANL.GOV systems would look like this:<br>
      <br>
    <img src="images/krb5_sample2.jpg" width="297" height="237">    <br>
    <br>
    A value of &quot;.&quot; means that the two realms share keys directly, and no intermediate realms should be allowed to participate.  </p>
  </li>
  <li>
    <p>On the <em>Realm Name - Identity System Domain Name Mapping</em> screen, select <strong>Map Realm Name to Identity System Domain Name</strong> and enter domain  <strong>SOAMS.LOCAL</strong> and map it to the Active Directory Identity System you created in Step 3. <br>
      <br>
      <img src="images/kerberos_id_map_active_id.jpg" width="563" height="391">    </p>
  </li>
  <li>After completing the configuration click <strong>Finish</strong>. </li>
</ol>
<h3><a name="create_policies">Step 5: Create Policies</a></h3>
<p>In subsequent steps  you will be  creating a physical service and then virtualizing it three times (VS0, VS1, and VS2). As a prerequisite, you  will need to create a series of policies to attach to these services as follows:</p>
<ol class="usingOrderedList">
  <li>Go to the <strong>Organization &gt; Policies &gt; Operational</strong> folder where you would like to save the policies. Using <strong>Add Policy</strong> (to create) and Modify Policy (to configure) the follwoing policy configurations:
    <p></p>
    <table width="655" cellspacing="0px" class="doctable">
      <thead>
        <th width="192">Policy Name</th>
        <th width="429">Configuration Requirement</th>
        <td width="26"></thead>
        <tr class="t2row">
          <td height="27">SPNEGO</td>
          <td><strong>Instances:</strong> 1<br>
            <br>
            <strong>Configuration:</strong> This policy type does not require any configuration. <br>
            <br>
          <strong>Attachment:</strong> Attach to the  <em>physical</em> service so that Network Director can generate a Kerberos ticket for the user authenticated against the Active Directory domain created in Step 3. </td>
        </tr>
      <tr class="t1row">
        <td height="131">Authentication</td>
        <td> <strong> Instances:</strong> 2<br>
          <br>
          <strong>Configuration:</strong> Policy 1 (Auth_VS0_VS1) -
Select End User and  Kerberos domain, Policy 2 (Auth_VS2)  -
Select End User and  Active Directory domain.<br>
<br>
<strong>Attachment:</strong> Attach Policy 1 to virtual services (VS0 and VS1), Attach Policy 2 to virtual service (VS3). <br></td>
      </tr>
      <tr class="t2row">
        <td height="26">WS-Security Transport Binding</td>
        <td><strong>Instances:</strong> 1<br>
          <br>
          <strong>Configuration:</strong> Configure this policy based on your requirements.<br>
          <br>
          <strong>Attachment:</strong> Attach to  all three virtual services  (VS0, VS1, and VS2).</td>
      <tr class="t1row">
        <td height="26">WS-Security Supporting Token</td>
        <td><strong>Instances:</strong> 1<br>
          <br>
          <strong>Configuration: </strong><em>Token Type</em><strong> &gt; </strong> Kerberos,
          <em>Version</em><strong> &gt; </strong> Kerberos Version 5 AP-REQ,
          <em>Subject Category</em><strong> &gt;</strong>End-User.<br>
          <br>
          Attachment: </td>
      </tr>

    </table>
  </li>
</ol>


<h3><a name="create_physical">Step 6: Create Physical </a>Service</h3>
<p>Create a physical service and attach the SNEGO policy. </p>
<ol class="usingOrderedList">
  <li>Select the<em> Organization &gt; Services</em> folder, and click <strong>Create Phyiscal Service</strong><em>. </em>Configure the service configuration based on your requirements. </li>
  <li>Go to  <em>Service Details &gt; Policy Attachments &gt; Operational</em> and attach the following policies:
    <ul class="usingUnorderedList">
      <li><strong>SNEGO</strong> policy. This enables the ability for Network Director to generate a Kerberos tick for the user authenicated against the Active Directory domain created in Step X.</li>
      <li><strong>Authentication </strong> policy. Used for authenticating the user on virtual service (inbound). The policy can be any authentication policy that requires username and password.</li>
  </ul>
  </li>
</ol>

<h3><a name="cred_delegation">Step 7: Configure Credential Delegation</a> / Impersonation</h3>
<p>The next step is to configure Credential Delegation. This enables the ability for a user to send a Kerberos ticket to authenticate to Network Director. Network Director can then  generate the ticket to talk to the target service on the end user's behalf. For this scenario the user must authenticate to Network Director using a Certificate, or using any other authentication mechanism where Network Director can't retrieve the users password.</p>
<p>The <em>SOA Software Kerberos Impersonation Feature</em> supports credential delegation through the use of an Identity Profile. You can modify the Kerberos Identity System and add (ND1/hostname@REALM), and then associate Identity Profile with the Kerberos Identity System. The <em>SOA Software Kerberos Impersonation Feature</em>, adds a  <em>Specify Optional Identity Profile</em> option to the <em>Realm Name - Identity System Domain Name Mapping</em> screen of the Identity System definition. This option is available using <strong>Modify Identity System</strong>.</p>
<ol class="usingOrderedList">
  <li>Go to <em>Configure &gt; Security &gt; Identity Profile </em> and select <strong>Add Identity Profile</strong>. </li>
  <li>Specify the Profile Details, select the Kerberos Identity System, configure the password options, and <strong>Finish</strong>.  </li>
  <li>Go to <em>Configure &gt; Security &gt; Identity System</em>, select the Kerberos Identity System and click <strong>Modify Identity System</strong>. </li>
  <li>Click <strong>Next</strong> until you are on the <em>Realm Name - Identity System Domain Name Mapping</em> screen. </li>
  <li>Select <strong>Add New Mapping</strong> and enter your Network Director realm name (e.g., ND1/hostname@REALM), and select Kerberos as the Identity System Domain Name.</li>
  <li>From the Specify Optional Identity Profile drop-down, select Kerberos, then <strong>Finish</strong>. <br>
    <br>
    <img src="images/map_nd_identity_profile.jpg" width="568" height="414"><br>
  </li>
</ol>
<h3><a name="usage_scenario">Step 8: Usage Scenario</a></h3>
<p>Finally, we are going to test the credential delegation functionality by virtualizing the physical service we created three times, and then attaching the policies and identity profiles we've created in previous steps. </p>
<ol class="usingOrderedList">
  <li>Select the  <em>Services</em> folder, and the physical service you created in Step X, the select Virtualize Service. Virtualize this phyiscal service three times. In this example we will name the services VSO, VS1, and VS2. </li>
  <li>For VS0, attach Auth_VS0_VS1(End User/Kerberos),  WS-Transport Binding, WS-Supporting Token policies</li>
  <li>For VS1, attach Auth_VS0_VS1 (End User/Kerberos), WS-Transport Binding, and WS-Supporting Token policies.</li>
  <li>For VS2, attach the Auth_VS2 (End User/Active Directory), WS-Transport Binding, and WS-Supporting Token policies.</li>
  <li>&lt;NEED CLARIFICATION ON THE IDENTITY PROFILE CONFIGURATION&gt;</li>
  <li>To implement constrained delegation, on the Delegation tab of the Active Directory properties screen sekect <em>Trust this user for delegation to specified services only</em>. To implement impersonation select <em>Use any authentication protocol</em>.<br>
    <br>
    <img src="images/impersonate_options.jpg" width="415" height="549">  </li>
</ol>
<p><a href="#top">back to top</a>
</p>
<div class = "divider1"></div>