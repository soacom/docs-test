{"entries":[{"title":"Page List","url":"/pagelist.html","date":null,"type":"document","description":"A sorted list of all the pages in the site","categories":[],"body":"content needed, anyway"},{"title":"What's New in Lifecycle Manager 6.5.1","url":"/lm/new_in_lm_v6.5.1.html","date":null,"type":"pdf","description":"The new features for Lifecycle Manager 6.5.1.","categories":[],"body":""},{"title":"AnySource Asset Adapter User Guide","url":"/lm/asaa_user_guide.html","date":null,"type":"pdf","description":"The AnySourceTM Asset Adapter toolkit is a framework for automatically assembling and loading assets into Repository Manager.This document will show you how to get started using the Asset Adapter from installation, to running a sample, to creating your own rules file for auto-loading assets.","categories":[],"body":""},{"title":"SOA Software Lifecycle Manager","url":"/lm/index.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"online document repository Lifecycle Manager products including Portfolio Manager. constantly adding site, please check back frequently updates."},{"title":"Policy Manager Integration Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-pm-int-guide-v6.5.1.html","date":null,"type":"pdf","description":"Policy Manager Integration Guide for Lifecycle Manager 6.5.1.","categories":[],"body":""},{"title":"Learning about Lifecycle Manager","url":"/lm/learning.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"Lifecycle Manager Reference","url":"/lm/reference.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"documents pages refernce section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"System Administrator Guide","url":"/lm/SysAdmin-J2EE.html","date":null,"type":"document","description":"This System Admin Guide is written and intended for the person filling the role of Installation Administrator, and is most useful after the initial installation is completed.","categories":[],"body":"System Admin Guide written intended person filling role Installation Administrator, most useful after initial installation completed. Refer Portfolio Manager Lifecycle Manager Install Guide overview hardware software installation requirements detailed instructions installing base servers product. following topics covered system admin guide: General Configuring application Start/Stop Service Packs Log Files Logging Creating Libraries Import/Export Assets Contact SOA Software Support help any issue topic not covered Install documents, any applications' on-line help systems. Throughout System Admin guide references configuration parameters Configuration File). System Admin Guide configuration settings bracketed identify make easier search replace values. example, app.server.host lib.conf variable, while instructions below referred {app.server.host} three different distinct administrator roles assigned user accounts application. three roles described order provide context Installation Administrator responsibilities required skills described document. Responsibilities Installation Administrator generally include types activities: Coordinate installation base product service packs underlying server sysadmins Creating initial Asset Library additional libraries required Obtaining reviewing system logs Responsibilities generally include types activities: Managing Library parameters configurable (post-Library creation) Managing Global Definition Template used library's Asset definition Managing Library's UDDI publishing Each Library more users assigned role Usage controller. responsibilities generally include types activities: Create manage library group project hierarchy Manage asset capture (constraint) templates Assign manage user roles authorization Create manage additional items used library configuration, such group profiles, asset views classification criteria sets. Project Manager perform user management tasks library, users assigned Usage Controller role described above. However, Project Manager role assigned project, capabilities Project Manager scoped own project Each project library more users assigned role Project Manager. responsibilities generally include types activities: Create new library users assign project. capability withheld. Manage group role assignments project users. Approve asset reuse requests instigated project users. capability optional. Portfolio Manager Lifecycle Manager provide access number administrative functions via System Admin Console. application accessed web browser top navigation bar item called Administration available users installation administrators) directly URL follows. Replace examples context root, appropriate. context root \"logiclibrary\" systems upgraded Logidex. system admin console, Installation Administrator perform number administrative tasks. items provided Main Menu: Execute Command Selecting item displays page enter command applicable command parameters. administration commands documented document commands may provided SOA support as-needed basis. Create New Library Click link display Create Library page. Manage Visible Asset Sources Selecting item designating library drop down list produces listing Visible Asset Sources available library. Visible Asset Source configuration causes assets published individual library's asset source simultaneously published library use Visible Asset Sources create \"federated\" library configuration libraries both Portfolio/Lifecycle Manager installation remote Portfolio/Lifecycle Manager installation. Manage Remote Asset Sources Selecting item produces listing Remote Asset Sources currently available installation. Remote Asset Source connection established library exists installation separate own. Creating Remote Asset Source results availability remote library creation visible asset source library local installation. \"Manage Visible Asset Sources\" previous bullet. Remote Asset Source entry establishes connection information remote library, polling interval update published asset information between systems. Browse Logs Click link display Application Logs page. page list logs produced means email SOA Software support any recipient, corresponding links access logs directly. Download Upgrades link provides access Service Center, downloads available upgrade installation. System Admin Additional Documentation link provides access Service Center, documentation (including System Administration Guide) provided. Each library consists two components: library itself, contains published assets, its associated asset source, assets created edited prior being published. assets published asset source its associated library, designate simultaneous publish take place libraries configuration necessary cause take place occurs target library consists establishment Visible Asset Source each source library desired. Libraries share content fashion said \"federated\". Note content shared manner include reference models assets. Published assets refreshed applicable libraries each publish originating asset source. cases Visible Asset Source entry uses remote library, update takes place according polling interval established Remote Asset Source entry used Visible Asset Source. Manage Visible Asset Sources page, selecting library Library drop down list causes page refresh display list libraries existing installation. pull assets models visible library library, click corresponding Selected box. two important things consider choices make: help system available online application more information Classification Criteria Sets, Publish Templates association groups asset types, asset publish information, Reporting Groups, Reference Models. configuration parameters installation ApplicationRoot/conf/lib.conf configuration file created install time updated after install enable new features, change settings, etc. Most configuration parameters changed via admin command SetInstallationProperty. Update Installation-wide Properties section document details. configuration points cannot set via command, lib.conf file edited directly using any text editor (such Emacs, etc.) UNIX command line application server Wordpad Windows Servers: Login app server {logidex.user} Edit lib.conf file Apply changes (Note: deployed Portfolio Manager Lifecycle Manager EAR file without using SOA-supplied install scripts, following commands may not update running application. Contact support any questions. Eclipse-based Configuration Designer plug-in provides library administrators rich client interface manage configuration libraries. included Repository Client--a standalone, Eclipse-based IDE--or plug-in may installed existing Eclipse IDE. Download Center library installation details. Once installed, administrators create more projects each contains configuration library. following table outlines common administrative functions project file(s) associated function. documentation available Help menu IDE. configuration parameters needed setup Portfolio Manager Lifecycle Manager against preexisting LDAP server new server configuration file. two distinct modes Portfolio Manager Lifecycle Manager operate respect LDAP server: native guest mode. first step setting application use LDAP server determine modes use. following parameters describe configure installation properties. most cases defaults acceptable. However: plan use 'guest' mode, need know few details existing LDAP server. Each property described differently depending mode configured. Installation Properties section. any following characters appears part name value RDN must escaped backslash: due fact lib.conf interprets backslashes, must double escape any backslashes. example: ldap.binddn=cn=John Doe\\\\, Jr.,ou=users,dc=example,dc=com ldap.url LDAP server notes examples: best make sure installation works without SSL first, turn SSL after verified configuration parameters set correctly. steps setup LDAP SSL follows depend type LDAP application server installed. step-by-step example Novell eDirectory WebLogic: Admin Note: Automatic startup/shutdown system reboot configured /etc/init.d/ servers optional step install instructions. NOTE: warning messages ignored startup. warning message similar following: [warn] Loaded DSO libexec/solaris/mod_wl.so uses plain Apache API, module might crash under EAPI! (please recompile -DEAPI) LDAP guest mode configured: Service packs distributed via SOA Sofware Support website. Each service pack corresponding README file instructions installing service pack. Portfolio Manager Lifecycle Manager support use SSL (Secure Sockets Layer) encryption. However, default, installation not configured use SSL. use SSL installation, need modify default configuration. Changes required both Web Server App Server. updates Apache web server. NOTE SSL certificate host name must match {web.server.host} property lib.conf file. need reset passwords, list passwords may need update: Below brief description most important log files (not log files listed default log files directory ApplicationRoot/logs, subdirectories (listed below) each major component. Sample Logging file: Possible logging levels follows most verbose logging): default level new installations FINER, changed FINEST more detailed debugging information. NOTE: Setting logging level more \"verbose\" levels tend slow down performance application turn logging needed debugging. Database administration not covered Generally DBA responsibilities separate specialized responsibility. additional DBA requirements Portfolio Manager Lifecycle Manager. cases full backup installation, including data, code, configuration information. Prior installing service packs installation backup. Most service packs simple code updates, however may times data update service pack required support new function. list items backed NOTE does not backup pre-requisite installed products, such app server (WebLogic, WebSphere, etc), database products (Oracle, UDB, etc), web server products. backup those products according procedures outlined those vendors. data stored database, database tables spaces need backed backing data. default tablespaces named DBUSERDATA, DBUSERLONG, DBUSERINDX, DBUSERTEMP, unless overrode tablespace names lib.conf file. ever need full restore Portfolio Manager Lifecycle Manager corresponding data, follow steps: ever need restore just data, follow steps: {ldap.ownership.mode}=guest, user information obtained external LDAP server. Therefore, concept creating users application. Valid LDAP users simply login library either request access usage controller allowed depending controlled access turned not. {ldap.ownership.mode}=native, users request accounts \"Request Account\" link login page. entry dependent whether controlled access library turned not. user reset password using \"Forgot Password\" link login page. NOTE: {ldap.ownership.mode}=guest, password resets must done through external LDAP server. Portfolio Manager Lifecycle Manager provide capability accessing libraries System Admin console logging special \"user\" account does not require authentication LDAP system. account, termed \"Super User\" account used via web browser application access library System Admin console. Logging Super User provides unlimited access libraries installation facilities provided System Admin console. Note super user access enabled disabled lib.conf file assigning password leaving password blank. Super User access provided enable recover lack active Library Administrator account. logging library super user, activate inactive account create new user account assign Library Administrator role. Another purpose Super User account provide user account portrayed being associated application opposed being associated individual, human user. Portfolio Manager Lifecycle Manager provides use super user account \"application user\" called Portfolio Manager Application User Lifecycle Manager Application User. user available such things being recorded \"submitter\" assets submitted automation being identified \"responsible user\" establishing library federation through creation Visible Asset Source Remote Asset Source configuration. Super User account assigned library roles Library Administrator, Usage Controller Asset User. addition, account assigned group roles Asset Capture Engineer (ACE), Publisher Asset Owner Enterprise Group level. web browser application's online help more information roles scope application. installation needs create multiple Asset Libraries, create needed. Additional libraries created using via Admin Console Installation Administrator. ability automate asset operations provided Automation Extensions two samples provided allow user import group assets library export group assets library. SampleLoader SampleDownloader installable accompanying documentation available support link top navigation bar library. install command used both initial install Portfolio Manager Lifecycle Manager, installing upgrades, such service packs new releases. Below description command options: several special administrative library maintenance commands available Installation Administrator. Admin Console overview access Admin Console select \"Execute Command\". Types admin commands: list format example Asset Deletion List XML file below UTF-8 Note single asset UTF-8 Note First, items need imported before others. example, assets published prior asset views use (asset-view-assets). import items steps, done order listed ExportLibrary command. Secondly, actions asynchronous, requiring time before visible library. Therefore, items including assets models done prior importing items follow. Ensure any assets models published before proceeding next items. UTF-8 Note Parameters script may specified form \"variablename=value\" (without quotes). parameters available script variables. library dropdown set library containing user remove following text example asset deletion list file. Note \"repository-delete\" parameter shown each entry indicates whether asset deleted underlying \"assets progress\" \"repository-delete\" parameter set false, asset placed back \"submitted\" state catalog. user properties appear create display user contact pages obtained configured through attribute definitions. Attribute definitions determine not names fields available displayed users, corresponding services use looking user information. accomplished configuring XML document uploading through Admin Console using Attribute Definition commands: GetAttributeDefinitionSchema, GetCurrentAttributeDefinitions, GetDefaultAttributeDefinitions, SetAttributeDefinitions. following example document. Each AttributeDefinition element defines user attribute may displayed (through attribute-name XML attribute). \"Full Name\" \"Email\" attributes ones required. include-in-filter XML attribute set true, attribute searchable user create list pages, otherwise not. include-in-list XML attribute currently ignored, attributes show user detail pages. ExternalSourceMapping element determines user attributes come external sources through source-id XML attribute. Currently \"LDAP\" supported, signifies LDAP queried, LDAP element used (name-in-source attribute), user information related particular user attribute. associated ExternalSourceMapping element configured, Usage Controller set particular user attribute library. user set any such attributes own account. sample Attribute Definition document configures possible attributes user (Full Name, Email, First Name, Last Name, Phone, Fax, Cell). sample document states user attribute values come LDAP. case, \"Full Name\" user comes LDAP attribute, \"Email\" user comes LDAP \"mail\" attribute, \"Full Name\" \"Email\" attributes searchable attributes. attribute may helpful include account name user. may configured adding following entry XML file editing name-in-source attribute correspond attribute using authenticate users through LDAP attribute configured ldap.url parameter lib.conf file): Full-text searching enabled default SQL Server. However SQL Server \"knows\" index certain types artifacts depending filters installed. Details filters found determine filters installed SQL Server, execute following SQL: EXEC sp_help_fulltext_system_components 'filter'; Most configuration values set through lib.conf (logidex.conf) during initial installation updated through via Installation Administration command SetInstallationProperty. command works manipulating override values stored database table. value set via SetInstallationProperty, blank value set, system uses values deployment descriptor--built 'conf' file properties--as case previous releases. Use \"GetInstallationProperty\" view property value set configuration file value persisted database, exists. Take care not misconfigure properties lock system LDAP parameters). following table describes properties cannot set method. Single Sign-on (SSO) login mechanism allows authorization external web server plug-in. enables integrate own \"single sign solution. capability enabled configuring following property lib.conf. value entry specify header name contains authenticated user's user (account name). example lib.conf specifies \"XYZ_USERID\", logon logic look Header name. Effectively, enable external authorization specifying non-null values entry. incoming request contains specified header, login logic assumes user authenticated externally does not present login challenge page. Instead, attempts find existing User object account name specified configured user header. uses found User object establish session user. properly configured integrated external authentication mechanism, users never login challenge. Instead challenge presented external authentication mechanism. mode not necessary Usage Controllers define new users. external authorization configured, \"Logout\" link appears top navigation bar. following resources not protected SSO authorization: customize banner top web pages own branding information. configuration global means effect libraries installation. Note: styles document may override global defaults. example, style sheet entry \"A:hover COLOR: #FFFFFF; TEXT-DECORATION: underline; override hover link color whole page. many references .css files internet. web site information general .css topics http://www.htmlhelp.com/reference/css/ page color references http://www.htmlhelp.com/reference/css/color-background/background-color.html Basic Options Values:#brand sections apply background image file (.gif, .jpeg, etc) top banner (header) Example custom.css file example shows configuration library banner. footer each web page customized needed installation. may add additional information terms use, privacy, help desk contact information, etc. customize footer pages, create following html files ApplicationRoot/customer/logidex.war/custom. application redeployed after changes made. file customized using standard html syntax. Note: styles document may override global defaults. example, style sheet entry \"A:hover COLOR: #FFFFFF; TEXT-DECORATION: underline; override hover link color whole page. customize content presented home page web browser application. area available custom content falls below web page Top Banner above Active Project designation home page. configuration global installation, means effect libraries installation. may customize content presented Support Center page web browser application. area available custom content Support Information section. configuration global installation, means effect libraries installation. Library Administrators Usage Controllers continue default information. may change target top navigation bar \"Discussion\" \"Help\" links. configuration library-specific different each library. Portfolio Manager Lifecycle Manager configured user select language display its contents. Contact support information languages available configure default, database schema owner used create modify database entities (tables, views, sequences, etc). configure different user, actions not work modify underlying schema. actions need performed schema owner therefore configured alternate database user, certain permission issues running Portfolio Manager Lifecycle Manager must reconfigured use schema owner case. potentially problematic actions configure alternate database user, follow instructions. setup notes: certain instances, such creating custom listeners, deploying custom class files required. accomplished adding class files ApplicationRoot/customer/custom.jar file. You'll need ensure package information preserved class file's path. instance, suppose class named com.example.CustomListener. need added custom.jar file com/example/CustomListener.class. example required steps: WebLogic uses /tmp/_wl_proxy write file while being uploaded. Typical problems tend permissions/mode disk full problem. Verify enough space /tmp file least size trying upload. verify /tmp/_wl_proxy directory owned web server user (User Group httpd.conf file). delete /tmp/_wl_proxy directory recreated correct permissions. configuration element plugin-cfg.xml web server plug-in configuration file limits uploads default. increase limit example) change following line WebSphere plugin-cfg.xml file. use Long Table spaces columns store binary data. Previously regular table spaces used store binary data inefficient. recommended upgrade use Long table spaces. Note: used advanced tablespace tab library creation, please contact SOA Software support. needs concerned saving files non-ASCII characters. several different encodings use safely preserve extended characters (UTF-16, UTF-8, etc). Portfolio Manager Lifecycle Manager use UTF-8 encoding various places throughout application. Most issues transparent end-user, noted. Whereever input takes form XML file, XML file declaration specifying encoding. not specified, default encoding UTF-8 document interpreted being encoded such. recommended leave set UTF-8 ensure file saved UTF-8. Most XML files displayed user preserved UTF-8 saved using browser’s File Save option. not copy paste text browser text editor unless know text preserved UTF-8 encoded without BOM (byte-order mark). overviews uploaded using Automation Extensions, encoded using UTF-8 very easy mess file saving incorrect encoding. Therefore instructions used anytime save file containing non-ASCII characters. User License Report included may link appropriate group choice. report provides list users installation libraries each user access. Create report link follows: Customers may use BIRT Eclipse tool create custom reports deploy those reports application server available application users. Beginning PortM BIRT reports managed using Configuration Designer plug-in. report design files appear configuration project under Document-Source reports. Custom reports may saved folder uploaded library via context menu. Once report uploaded library, follow steps below create report link. version installations, follow steps once report ready deploy: Create report link follows: Integrating WebLayers requires application server find appropriate WebLayers' configuration file executables. Install WebLayers Governor client same application server Portfolio/Lifecycle Manager installed prompted make sure check \"Java option. Continue application server specific instructions complete integration."},{"title":"J2EE Install Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-install-guide-J2EE-v6.5.1.html","date":null,"type":"pdf","description":"J2EE Install Guide for Lifecycle Manager 6.5.1.","categories":[],"body":""},{"title":"Getting Started with Lifecycle Manager","url":"/lm/getting-started.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"Refer our Concept Guide quickly. need Install product, refer J2EE Install Guide System Administrator Guide section."},{"title":"Concept Guide for Lifecycle Manager 6.5","url":"/lm/lm-concept-guide-v6.5.html","date":null,"type":"pdf","description":"The goal of this document is to introduce the basic concepts of Lifecycle Manager and provide enough background information to use Lifecycle Manager effectively.","categories":[],"body":""},{"title":"SOLA Integration Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-sola-int-guide-v6.5.1.html","date":null,"type":"pdf","description":"SOLA Integration Guide for Lifecycle Manager 6.5.1.","categories":[],"body":""},{"title":"SOA Software Product Documents","url":"/page.html","date":null,"type":"document","description":"The docs.soa.com landing page","categories":[],"body":"content needed, anyway"},{"title":"SOA Software Product Documents","url":"/index.html","date":null,"type":"document","description":"The docs.soa.com landing page","categories":[],"body":"SOA Software Documentation Repository provides centralized storage solution SOA Software's Community Manager, API Gateway (Policy Manager, Network Director, Agents), LifeCycle Manager product offerings. repository designed provide quick access installation, configuration, concept, usage documentation through use search facility. Documentation accessible either PDF format (downloadable), HTML (view print). Community Manager sophisticated product help enterprises develop API portal attract, manage, support developers build Apps using APIs. View Community Manager Document Index. API Gateway allows organizations quickly cost-effectively develop, secure, manage monitor APIs increasingly connected world securely rapidly connecting applications across platforms, devices channels. View API Gateway Document Index. Lifecycle Manager industry-leading API lifecycle management platform automates machine- role-based validations signoffs across software development lifecycle. View Lifecycle Manager Document Index."},{"title":"Building Successful APIs","url":"/cm/res-building-successful-apis.html","date":null,"type":"pdf","description":"The eBook shares proven best practices that enable businesses to realize success from APIs and ensure appropriate security and system management or running up unsustainable costs. Taking a holistic, integrated approach, it blends technology and business-level issues that affect API development.","categories":[],"body":""},{"title":"Community Manager Installation Guide","url":"/cm/res-cm-install-guide.html","date":null,"type":"pdf","description":"The installation instructions for on-premise Community Manager deployments.","categories":[],"body":""},{"title":"SOA Software Community Manager","url":"/cm/index.html","date":null,"type":"document","description":"The Community Manager landing page","categories":[],"body":"online document repository Community Manager products including OAuth Server. constantly adding site, please check back frequently updates."},{"title":"Learning about Community Manager","url":"/cm/learning.html","date":null,"type":"document","description":"The Community Manager Learning Landing Page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"Community Manager Reference","url":"/cm/reference.html","date":null,"type":"document","description":"The Community Manager Reference Documents","categories":[],"body":"documents pages refernce section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"Getting Started with Community Manager","url":"/cm/getting-started.html","date":null,"type":"document","description":"The Getting Started Guide For CM","categories":[],"body":"Refer our Quick Start procedures App Developer API Provider running quickly. need become member, refer Basics section."},{"title":"Community Manager Getting Started for App Developers","url":"/cm/learnmore/getting_started_for_app_developers.htm","date":null,"type":"document","description":"A guide for App Developers to get started building Apps using Community Manager.","categories":[],"body":"Learn add App connect SOA Software’s API Management Platform brings API providers App developers together. provides easy access powerful API Management capabilities combined social community allowing developers collaborate build innovative Apps scalable APIs. Let’s Sign account don’t already register locally, use favorite social networking account. Before create probably explain App isn’t). App metadata construct describes application manages its identity credentials. not software application running device, just describes more software applications. Developers use App construct request manage access Apps APIs consume, any software application using credentials defined App construct access APIs negotiated. Adding App simple process. Use Plus Menu add new App provide information system requests. system show information users indexed system’s search engine, try use names, tags descriptions match types things think users might search looking App yours. first page ask choose privacy settings App, first add App it’s good idea set private make sure works. always make public later. That’s you’ve added App. point it’s worth taking look App, check details App credentials, Board check Team features. APIs, DevConsole, Monitoring later App defined system need connect APIs you’re ready start finish case may actual App. search browse system find API use, use button start workflow process getting access. It’s pretty simple process. choose Apps connect API, choose endpoint (sandbox production) connect choose QoS policy specified API Admin), review accept any legal agreements, submit request. Depending approval settings endpoint, request may automatically approved, may require administrator approval. check status access request using APIs section App’s navigation: Once app approved access API use App’s DevConsole feature browse API send test messages. allows easily code needs interact API debug any issues may run click in-depth explanation use DevConsole, fairly self-explanatory. you’ve created tested App. platform lot more offer check monitoring, team management, App versioning. Back top"},{"title":"Tutorial (OAuth Setup)","url":"/cm/learnmore/tutorial_oauth_walkthrough.htm","date":null,"type":"document","description":"A tutorial for OAuth setup.","categories":[],"body":"OAuth setup process involves series configuration tasks performed different roles Site Administrator, API Provider, App Developer) achieve end result being able authorize app using OAuth Provider. quick start provides end-to-end walkthrough illustrate overall process roles performing each task. walkthrough includes links more detailed topics help. Site Administrator API Provider task performed Site Administration Domains section using Add Domain function. Resource Owner domain identity store defines OAuth Providers establish access permissions Selecting Resource Owner typically based most common method users accessing API application Google, Yahoo, Facebook, etc.). Note: Configuring more Resource Owner domains prerequisite configuring OAuth Provider domain. Configured Resource Owner domains automatically populate OAuth Provider domain user interface required input configure OAuth Provider domain. SiteMinder LDAP Skip step using Policy Manager SiteMinder LDAP Identity System integrated configured support Single Sign-On Identity System already display \"Resource Owner Authentication Domain\" drop-down menu Admin Add Domain OAuth Provider Wizard. task performed API API Details section using OAuth Details function. Resource Owner OAuth Provider domains must pre-defined Site Administrator available selection API OAuth Wizard. task performed App App Details Security Credentials section using Show OAuth Details Edit function. Note: type security credentials required based grant types supported OAuth Provider API app connected using. Configuring OAuth app required API OAuth configuration using Authorization Code grant. Performed Site Administrator Before configure authorization domains, must install Resource Owner OAuth Provider domains via SOA Software Administration Console. Site Administrators refer Community Manager Installation Guide [available SOA Software Support Site] complete installation instructions. domain types supported? list features descriptions. Note: task performed part initial platform setup process. Performed Site Administrator API Provider first step OAuth Provider configuration process identity target user base require authorization logging application. example, users typicall use Google method performing external login, require OpenID identity store. users typically use SiteMinder method performing external login, require LDAP identity store, etc. SiteMinder LDAP Skip step using Policy Manager SiteMinder LDAP Identity System integrated configured support Single Sign-On Identity System already display \"Resource Owner Authentication Domain\" drop-down menu Admin Add Domain OAuth Provider Wizard. configure OpenID Resource Owner Domain: configure LDAP Resource Owner Domain: Performed Site Administrator API Provider After configuring Resource Owner Domain, second step configure OAuth Provider domain. configure OAuth Provider: Performed API Provider After Site Administrator API Provider configures Resource Owner OAuth Provider domains, available API Details page via OAuth Details function. configure OAuth API: Performed App Developer configure app OAuth: Performed App Developer test authorizing app OAuth send request: Back top"},{"title":"Policy List","url":"/cm/learnmore/policy_list.htm","date":null,"type":"document","description":"A list of operational and service-level policies.","categories":[],"body":"Includes information following types policies: Used identify (authenticate) application attempting consume API determine authorized not. This policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth Category: Security default security policy Atmosphere services controls perform administrative actions Atmosphere portal. Category: Security Provides basic auditing messages. Message metrics recorded Policy Manager Usage Logs Monitoring tab. messages themselves not audited. achieved using DetailedAuditing policy. Category: Auditing Provides detailed auditing messages. Message metrics recorded Policy Manager Usage Logs Monitoring tab entire messages each exchange. Category: Auditing Used audit service operations binding operations. Category: Auditing Used audit SOAP binding operations. Category: Auditing Used audit Services, Bindings, Operations, Access Points. Category: Auditing Supports Transaction Tracking functionality correlates related web service events single activity transaction. example, service Container uses SOA Software Delegate call another service different container managed SOA Software Agent, automatically insert correlation information message collected used Policy Manager collect tracking log information. Category: Auditing Back top Defines conditions measuring reporting performance specific Contract. Each policy composed \"Rule\" \"Access Interval.\" Rules represent conditions define measure report performance service contract. defined system condition matches defined rule, alert raised. Category: QoS (Quality Service Policy) Allows configure bandwidth cap quota) consumer upload download any given time. bandwidth cap specified kilobytes megabytes per second. quota exceeded, runtime throttle traffic conform quota policy. quota assigned either request (upload) response (download). alerts generated policy since bandwidth consumed function network speed capabilities service provider, not consumer. Category: QoS (Quality Service Policy) Allows update policy defined using BeanShell Jython script languages. series predefined functions variables provided allow build custom policy expression evaluated runtime. Several sample scripts provided illustrate common quota management activities. Category: QoS (Quality Service Policy) Service Level Enforcement Policy Quality Service (QoS) policy allows enable configure error message returned consumer SLA violated. policy works conjunction Service Level Policy applies following Service Level rules: \"Usage Count,\" \"Total Request Message Size,\" \"Total Response Message Size.\" define Service Level Policy specify each service level condition alert code, define Service Level Enforcement Policy specify error message displayed specified service level condition violated. Category: QoS (Quality Service Policy) Allows monitor web service throughput performance specifying throughput limit quota), queue size, configuring fault alert notifications. quota exceeded, consumer fault message returned service consumer alert logged. Category: QoS (Quality Service Policy) Allows allows configure timeout each request specify custom fault error message returned client. Category: QoS (Quality Service Policy) Allows monitor web service concurrency performance specifying concurrency limit quota) represents maximum number concurrency connections, configuring fault alert notifications. specified concurrency limit exceeded, Policy Manager return fault send alert. Category: QoS (Quality Service Policy) Back top"},{"title":"Scopes","url":"/cm/learnmore/business_administration_scopes.htm","date":null,"type":"document","description":"Configure and manage scopes as part of setting up licenses for API access.","categories":[],"body":"Configure manage scopes part setting licenses API access. scope entity define represent any subdivision API might separate control platform, Business Admin define set scopes define licenses include scopes building blocks. license made more license terms plus legal agreements; license term made more scopes plus Quality Service policies. API admin map scopes actual operations, completing license definition specific API. Visibility: manage API visibility using scopes. example, define scope private. Whether API public private, operations part private scope seen individual member group specifically invited visibility license includes scope. Granularity: define scope operations use multiple scopes. example, scope Read-Only operations second scope operations. define public scope operations except two three beta, create new private scope, Beta, new ones. invite select users access beta operations, while main body users unaware beta testing simply not beta operations. Scopes tool enhance manageability API allowing break API smaller units shared monetized different ways. Hierarchy: Scopes configured hierarchy, include sub-scopes multiple levels: Management: points note regard managing scopes: Configuration: define scopes Administration Scopes section reference those scopes defining License. Back top following visibility rules apply scope: Back top configure scope Administration Scopes section platform. points note: Note: Scopes configured Business Administrators Specify Scope Name. Note Scope Name display use Select Scope function using +Add License Administration License section. Select visibility option. following rules apply: Select Sandbox Access Option: Select Production Access Option: Back top After you've saved scope, add child scope. create multiple levels scope hierarchy. Back top move scope anywhere scope hierarchy selecting scope dragging new position list. move scope higher lower level hierarchy. Back top license logical grouping license terms plus optional end-user legal agreements. Each license term include more scopes more Quality Service (QoS) policies. Licenses defined Business Admin. API level, Licenses feature used, API operations assigned scopes. Scopes link between API license. app developer requests access API part API Access Request process (via Access API Details page), developer sees choice more licenses. scopes not seen developer, part license definition. Note: License scope referenced License updated, any pending approved API Access Requests automatically updated. more information, API Access section. Back top modify parent child scope long isn't use API access contract. Back top modify parent child scope long isn't use API access contract. delete scope children, child scopes deleted. Back top"},{"title":"Business Admins","url":"/cm/learnmore/business_administration_business_adm.htm","date":null,"type":"document","description":"Manage business administrators for the platform.","categories":[],"body":"Manage Business Administrators platform. Business entity owns publishes APIs. business generally includes multiple APIs, Developers, Apps. platform represents Business. Business Visibility Business defined having public private search visibility. visibility setting determine whether business appears search results whether users summary information Business, described below. Feed Detail View Business Connections Any above Connections configured Back top Business Administrator Full Control manage following platform objects: Privileges platform objects managed Policy Manager instance Tenant installed. Full Control privilege supports following actions: Note: Site Administrators same privileges Business Administrator. example, Site Administrator invite another user Business Administrator. However, Site Administrators not rights Business Administrator, such privileges add, edit, delete apps APIs business. Back top Site Administration quick filter launches Site Administration section. Site Administration Business Adm. section, authorized Business Administrators invite others join Business Administrator team. Invite Business Administrators Invite More function allows send invitations individuals grant Business Administration privileges View Business Administrators Business Administrator invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Business Admins Summary. Manage Administrators Business Administrator remove Business Administrator listing. Back top Site Administration Business Adm. page includes business administrator invitation function allows Site Administrators send invitations individuals grant business administration privileges current platform deployment. Back top already received Business Administrator invitation not currently platform member, must sign platform using email address invitation issued order accept invitation. Currently platform members invited Business Administrators. Basics more information. Back top receive invitation via email Business Administrator platform deployment accept reject invitation. Back top Once invitation sent individual Business Administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove Business Administrator Business Adm page clicking Remove. remove Business Administrator assigned platform deployment? Back top Any Business Administrator remove another Business Administrator platform deployment. Back top"},{"title":"App Security","url":"/cm/learnmore/app_security.htm","date":null,"type":"document","description":"Learn about how to set up and manage app security.","categories":[],"body":"default authentication SOA Software Open custom authentication mechanism, Shared Secret authentication. It's important set authentication messages app sends API you’re using. Authentication protects sender, receiver, message itself. It’s important security strong enough third party couldn’t pose sender, pose receiver, and/or view change message content. Authentication security particularly important money sensitive personally identifiable information involved. Once app registered, it's important set authentication app use API process messages securely. SOA Software Open, part setting app, you’ll need choose security mechanism you’ll use authentication messages. two choices: Note: topic provides information setting authentication any API hosted SOA Software Open. implementation information examples specific API you're using, refer documentation API. Both approaches very secure. Both use secret key combined hashing encoding, both sent via HTTPS. Shared Secret approach, default, easier implement since don't generate public private keys. PKI approach little more secure, although both approaches very secure. PKI approach more complex implement. Back top register app, AppID Shared Secret automatically generated. Shared Secret binary hashed value, generated secure environment SOA Software Open known SOA Software Open. Security Credentials section App Details screen you'll Shared Secret option default security mechanism. Shared Secret approach follows WS-Security digest authentication mechanism. Shared Secret, generated SOA Software Open, 40-character alphanumeric value acts key. example shown below. combine Shared Secret two values, hash result using SHA-1 secure hashing algorithm, encode hashed value using Base64 encoding scheme. URL-encode result, isn't required. result sent Authorization message header value atmosphere_secret_digest parameter. API verifies each incoming request using Shared Secret. choose Shared Secret security mechanism, Authorization header must include values shown below. More information shared secret approach given sections: process flow diagram below shows overview API request authentication shared secret security mechanism. Below example Authorization header app authentication parameters, use shared secret approach. sequence parameters isn't significant, parameters must present valid values. Note: value realm determined www-Authenticate header. Make sure value set Authorization: SOA Software Open header matches value received attribute server. nonce random string uniquely generated each request. nonce allows API providers verify request never made before. nonce sent message header both Shared Secret PKI security mechanisms. Shared Secret mechanism, same nonce value sent message header used creating Secret Digest. way create nonce depend development environment. Most programming languages include method creating nonce. Below example generating nonce value Java: timestamp request sent message header, both Shared Secret PKI security mechanisms. Shared Secret mechanism used creating Secret Digest. timestamp must Unix epoch time, expressed number milliseconds since January GMT. timestamp must positive integer must greater equal timestamp used previous requests. most implementations, timestamp taken host server. It's important timestamp message accurate; timestamp message might rejected. more information Unix epoch time, examples implementation timestamp different programming languages, http://www.epochconverter.com (scroll down). SHA-1 cryptographic hash function, broadly used trusted. hash value SHA-1, hash function returns 160-bit string. message digest. value hashed sent message; receipt point, value hashed again, two hash values compared. two hash values match, secure, reliable indication message hasn't changed; message receipt point accurate duplication message send point. you're using Shared Secret security mechanism, concatenate nonce, timestamp, Shared Secret, hash combined value using SHA-1. encode result, send message header value atmosphere_secret_digest parameter. formula computing hash Below example hashed base string: concatenate nonce, timestamp, app secret base string hashed, you'll need make sure concatenated value byte value before hashing. hashing algorithm requires input parameter bytes. Depending app, might need use encoding byte value. use UTF-8 encoding. Below example using Java. Note: example above part larger Java sample specific API. more information, refer implementation examples API you're using. Base64 encoding scheme converts binary data ASCII string. you're using Shared Secret security mechanism, must encode binary hash value created using SHA-1 secure hash algorithm. Encoding turns ASCII string format. It's common practice encode data make sure remains intact without modification during transport HTTPS. Once hash encoded, next step send encoded value message header value atmosphere_secret_digest parameter. there's problem HTTPS header, might error messages shown below. any reason know suspect app's Shared Secret might compromised, must generate new Shared Secret replace old generate new Shared Secret Community Platform Note: might take five minutes new key take effect. During time, messages sent using new key fail. It's best wait five minutes before sending messages new key. Below example create atmosphere_secret_digest value Java. Back top register app SOA Software Open, Security Credentials section App Details you'll Shared Secret option default. use Public Key Infrastructure (PKI) secure message signing, click button choose Public Key Integration. You'll need public/private key pair upload public key SOA Software Open, explained later document. custom app code sign API requests using private key. API verifies each incoming request using public key. More information authenticating PKI given sections: process flow diagram below shows overview API request authentication PKI. use OpenSSL open source product produce public/private key pair. more information OpenSSL, refer www.openssl.org. developing application using Microsoft Windows adaptation OpenSSL Windows platform following location: http://code.google.com/p/openssl-for-windows/downloads/list. Note: Anything empty bracket set not required. Below example might command-line window. process creates public/private key pair c:\\openssl folder. key pair includes files shown below. Make sure save copy private key safe place. lose key need generate new key pair. sign request using private key. more information, Composing Signature. Important: Upload file csr.csr SOA Software Open portal. Java developer worked cryptography Java, might familiar concept keystore. keystore file used store deploy certificates private keys single package. create keystore using OpenSSL explained above. However, Java developer, probably far more convenient use keytool, key certificate management utility that's distributed part Java Development Kit (JDK). use keytool create both keystore CSR associated private key keystore. Once you've created CSR, upload SOA Software Open just any CSR. Java code reads private key, used signing base string used API request headers, keystore file create. Since keytool utility part JDK, don't download anything create Java keystore. Just follow steps below. Note: procedure below assumes JDK bin directory Windows system path. keytool -genkey -alias <keystorealias> -keyalg RSA -keystore <keystore_filename>.p12 -storetype PKCS12 -keypass <password> -keysize keytool -certreq -alias <keystorealias> -keystore <keystore_filename>.p12 -file <csr_filename>.csr -storetype PKCS12 illustration below shows steps create keystore called keystore.p12 alias mykeystore password changeme. illustration below shows create CSR called csr.csr keystore.p12. Note: implementation examples, check authentication documentation specific API you're using. IMPORTANT Upload file CSR.csr SOA Software Open portal. signature process follows similar approach OAuth standard. platform uses Extension header support its app authentication scheme. Extension header named Atmosphere (not case-sensitive). uses standard Authorization header WWW-Authenticate response header pass app-related authentication parameters. query string used pass authentication data cases app cannot directly manipulate headers. API providers indicate support extension returning SOA Software Open WWW-Authenticate header response app requests protected resources. Below example: Apps send credentials Authorization header. choose Public Key Integration approach app security, Authorization header must include values shown below. Important: sequence header attributes critical must exactly match order below. Below example Authorization header app authentication parameters. Make sure list parameters sequence shown below. Note: value realm determined www-Authenticate header. Make sure value set Authorization: SOA Software Open header matches value received attribute server. Below example Authorization header API doesn't require authentication: Note: case client, such Ajax client browser Android app, cannot set Authorization header, set required SOA Software Open authorization header parameters query string. several steps composing signature: first step composing digital signature create content. Once that's done, data signed using signature algorithm. Note: atmosphere_signature parameter must excluded Signature Base String. Below example Signature Base String. Once Signature Base String constructed, next step signing: Back top example below shows same message header created each approach. parameters common both approaches: example below, message header uses Shared Secret approach, Shared Secret value 1008877afabf32efb31f9c974dbeaa688bed0769. atmosphere_secret_digest value hashed value nonce timestamp shared secret. example below, message header uses PKI approach. atmosphere-signature value signed value signature base string signature base string). Back top"},{"title":"Config","url":"/cm/learnmore/site_administration_config.htm","date":null,"type":"document","description":"Site configuration tasks&#8212;Configure custom color schemes, define a platform login, and upload documentation files and style sheets.","categories":[],"body":"Configure custom color schemes, define platform login, upload documentation files style sheets. change platform color scheme css styles pertain site background color, left top navigation, text content area, pop-up dialog elements, horizontal rules, text color input fields, default link colors, etc. Color scheme updates performed updating custom.less parameter.css style sheets. Click view sample custom.less template Back top platform includes custom.less style sheet template download update based requirements. Back top custom.less style sheet implemented LESS dynamic stylesheet language extends static CSS adding dynamic behavior CSS. Back top Administration Config Custom Styles section includes Download button allows download custom.less template. download custom.less template: Back top platform includes series standard icons accommodate quick filters, help, menu navigation names, window titles, etc. standard icons cannot changed, customization performed color icon changed. Figure. Upload sprite files \\images folder via Administration Config Resources (Resources File Manager) Back top During design phase platform deployment brand standards colors selected. site includes series icons. icon design fixed part site design, icon color contrast changed. general process modifying icon colors involves following steps: Back top Administration Config Custom Styles section includes Download button allows download custom.less template. upload custom.less template: Back top After update custom.less file, apply changes platform deployment uploading style sheet. After style sheet uploaded, site automatically rebuilds site style sheets changes reflected site. upload custom.less file after updated more information. style sheet sprite file changes not visible immediately after style sheet rebuild process complete, refresh browser cache. Note: recommended make backup default custom.less file before overwriting updated version. Back top Administration Config Custom Styles section includes Rebuild Styles option allows Initiate rebuild platform style sheets. option primarily used platform update installed includes style sheet changes. option primarily used site update performed style sheet changes made. example, update applied site update included new additions required style sheet changes; mean style sheets not active immediately after update completed. case, Rebuild Styles option complete update process regenerating style sheets. rebuild site style sheets: Back top most cases, after regenerate styles upload sprite files must clear browser cache refresh screen view changes. Back top footer customization process includes following steps: Back top process adding custom logo platform includes configuring logo comply logo file requirements (listed below), uploading platform. logo must comply following requirements: customize logo filename: upload logo file: Back top part initial platform setup, Site Administrator installs series domains represent enterprises login requirements platform: After login domains installed, must enabled customized Target Host (virtual host name) Logo/Avatar (Login Button), external login screen display Mode Popup/Main). Site Administration Config Logins section includes login management interface Site Administrators perform tasks. screen organized follows: read-only field displays domain name defined domain configured using Add Domain Wizard. domain name cannot modified. read-only field displays description domain defined domain configured using Add Domain Wizard. change description Site Administration Domains section using Modify function. checkbox allows enable disable use domain. Mode allows select login page associated domain integrated. Two options supported: Popup—Displays external login page popup Main—Displays external login page platform home page instead popup. Note: Mode options not configurable default login page. Back top platform installed, default login domain automatically created viewed managed Site Administrator Site Administration Config Logins section. Back top Site Administrators specify different URLs logging platform based roles (Administrator, Developer, User, etc.), Backdoor Login domain configurations down. accomplished specifying virtual host address each login domain referred Target Host <role>.<company>.com). recommended approach develop login plan each role covers different types login scenarios. Back top platform allows select login page associated domain integrated. integration method selected via Mode option Site Administration Config Logins page specific domain. Two options supported: Note: Mode options not configurable default login page. Back top Back top Back top context Site Administration Config Resources section, Resource any type publishing artifact used construction platform presentation. includes css style sheets, images, sprite files, site copy, API documentation, online help documentation. Back top upload new custom.less file Custom Styles section /resources/theme/default/style directory automatically created includes site default style sheets base.css, parameters.css, style.css, supplement.css). Back top you've updated more Sprite files, create /images folder /resources/theme/default/style directory upload Sprite files must uploaded AFTER uploaded custom.less file rebuilt site styles (either automatically part custom.less upload process manually executing Rebuild function). Back top Content uploaded platform includes API documentation, Online Help, Landing Page, Signup, Support. Content typically consist HTML files, images referenced content, any custom styles sheets support content, reference material PDF's, diagrams, etc.) linked content. Back top document.css style sheet contains custom styles both API Online Help documentation. located /content/style directory. make changes document.css file, upload directly /content/style directory. Note: style sheet not affected custom.less style sheet regeneration process not changed overwritten new custom.less file uploaded. upload document.css style sheet platform: Back top"},{"title":"Documentation Maintenance","url":"/cm/learnmore/publish_api_documentation_maintenance.htm","date":null,"type":"document","description":"Add / maintain API documentation and restrict visibility of documentation files.","categories":[],"body":"Add maintain API documentation restrict visibility documentation files. API documentation must developed maintained outside platform own HTML editor. Once HTML content ready upload site. add new version, update existing documentation create entirely different set documents. default, documentation files reside same folder. couple approaches take maintain files different versions same folder structure: more detailed information working API documentation files, Content Development Guidelines. Back top API documentation updated Back top add documentation API API Documents section two ways: details, Content Development Guidelines. Back top Yes. already website established API and/or documentation, upload file introductory text link website. Remember use \"target=\"_blank\" attribute link documentation site opens new window rather replacing platform user interface. details, Content Development Guidelines. Back top platform provides detailed set content development guidelines API documentation, including publishing, editing, styles, content organization, file upload, testing, updating. details, Content Development Guidelines. Back top following visibility rules apply API documentation: Back top API uses licenses, visibility API documentation files restricted users authorized, based access licenses, scopes, operations way documentation tagged. platform offers series visibility filters used display applicable API documentation files, portions content individual files, authorized users. API uses licenses, API documentation tagging must used. API documentation tagged appropriately, platform displays documentation users authorized, based membership more groups visibility API. users not documentation. elect use licenses, must tag documentation let platform know portions documentation set visible users, according user’s visibility permissions API. user full partial visibility API selects Documents menu link APIs section view documentation, user sees designated portion API documentation based permissions, determined group membership group's visibility API. Content licenses hidden. using feature, make sure links associated documentation sections being filtered tagged accordingly. visible links hidden content, user's perspective links appear broken. two approaches tagging documentation: settings metadata.xml file determine not visibility authorization. file restrictions set metadata.xml, user cannot access those files user URL file. File-based tagging recommended approach most content. instructions set metadata.xml file, File-based tagging: Using metadata.xml file below. recommend use approach judiciously. permissions vary user, documentation projects often include links between files, simple tagging approach most efficient. Refer example use case below ideas. Content-based tagging controlled referencing jquery-1.8.0.min.js dynamic_docs.js files <head> tag HTML files. below example. Note: Unlike file-based authorization, content-based visibility filters implemented browser side feature considered \"personalization\" feature rather authorization. Activities relating documentation tagging visibility include: control visibility API documentation downloadable files API Documents folder creating metadata.xml file includes more regular expressions specify files seen, via tagging, more following: not specify metadata.xml file permissions content, users not documentation. always true API uses licenses, API public. apply filters, apply desired filters complete documentation set. add additional filters per-version basis Filter API Version below). metadata.xml file, include each filter apply <metadata> </metadata> tags. Examples each given sections below. filters executed sequential order. file, organize filters order: example below shows simple metadata.xml file API version, apiversion12345.open; operation, addPayment; scope, fullscope-public; license, Gold. file each tag. scenario, users link specific file permission applicable API version, scope, operation, license. Users not applicable visibility permissions not links not able access files URLs). Note: setting metadata.xml, make sure represent names referenced objects, such license, scope, file names, exactly. Make sure case matches. <licenses> filter metadata.xml file allows specify more target documents more license names. Users must visibility specified licenses order visibility specified documents. <scopes> filter metadata.xml file allows specify more target documents more scope names. Users must visibility specified scopes (via licenses visibility order visibility specified documents. Scopes mapped API operations using Scope Mapping function API Details page. <operations> filter metadata.xml file allows specify more target documents more operation names. Users must visibility specified operations (via licenses visibility include scopes operations mapped order visibility specified documents. Scopes mapped API operations using Scope Mapping function API Details page. filter documents based specific file specifying regular expression, shown examples above. example, might define filtering rule applies specific PDF file, sample.pdf. Using example specify following <target> node: metadata.xml file, specify filtering rule applies files specific file type specifying regular expression <target> node. example, define specific rule apply .htm files /Documents folder define <target> node follows: example below defines rule .htm files documents folder API visible invited users: might filter rule applies Microsoft Word .docx files /documents folder: specify multiple <target> filters. specify rule applies .htm .jpg files /Documents folder include two <target> nodes: expression placed after <metadata> tag XML file does not include API Version filter. does include API Version filter, expression placed before filter. Refer sample metadata.xml file above. addition applying filters API documentation, further filter API version using <api:APIVersionID> filter. configure filter extracting API Version plus tenant name example, apiversion400.open) API Documents URL platform. Example URL: metadata.xml file resulting entry might look similar following, limits access .htm files specified version visible users visibility Gold license: example illustrates filtering API Version plus specific document: example illustrates filtering API Version plus specific document type: selected set files display Table Contents displays left navigation API Documents section platform, content dynamically displays based filters specified API documentation specified API version. It's best organize content entire files viewed hidden based user's visibility settings. However, cases you'll need show hide different sections content file. minimum, you'll probably organize documentation index page include links different files tagged metadata.xml file make links visible users access applicable licenses, scopes, operations. use content-based tagging feature show hide sections specific document based visibility access rights viewing user. use feature you'll need two things: Note: Tags mutually exclusive cannot nested. use content-based documentation tagging feature control visibility specific pieces content file displayed viewing user based user's visibility access rights, you'll need set lines code <head> tag HTML file, shown below. Note: important note below regard {Version} variable last line above. Important: use dynamic content files must reference above two JavaScript files. second link above, use whatever value use /{Version}/ part path. example, use API version, API doc version, platform version. importance value controlling version dynamic_docs.js file served users. file cached browser, efficiency. However, new version increased capabilities, use those new capabilities new version documentation, you'll users new version dynamic_docs.js file, not earlier, cached version. scenario, need update value {Version} variable file path. Changing value ensures user accesses documentation, browser reference latest version file. restrict documentation visibility license, specify license names showforlicense tag, adding more license names separated commas. App developer visibility Gold license, based license's privacy settings developer's visibility access, developer view API documentation. restrict documentation visibility scope, select API-wide Mapping option Operation-specific Mapping option API Details Scope Mapping >Edit Scope Details. API documentation HTML file, configure tags follows, adding more operation names separated commas. restrict documentation visibility operation, select Operation-specific Mapping option API Details Scope Mapping Edit Scope Details. API documentation HTML file, configure tags follows, adding more operation names separated commas. content documentation share broadly viewers, whether logged not, apply showforanonymoususer tag, shown below. content documentation share platform users logged apply showforloggedinuser tag, shown below. specify multiple entries same type (licenses, scopes, operations) separate comma. example scopes shown below. After finished tagging, test documentation performing following checks: Back top upload HTML files associated images, PDF files, content API Documents section platform using File Manager. two upload options: use ZIP file, make sure files ZIP don't include extra folders don't path. upload, file unzipped automatically using paths, any, specified ZIP file. minimum, file entry point documentation /documents folder. Back top"},{"title":"Legal Agreement Maintenance","url":"/cm/learnmore/publish_api_legal_agreement_maintenance.htm","date":null,"type":"document","description":"Add and maintain legal agreements for your API.","categories":[],"body":"Add maintain legal agreements API. legal agreement maintenance process includes following steps. Back top API legal agreements updated owner API (API Administrator). API Administrator assign team members accepted invitations administrators API legal agreement update privileges. Back top add legal agreement uploading content using File Explorer. Content Development Guidelines details. Back top platform provides set content development guidelines types content including legal agreements. Content Development Guidelines details. Back top After legal agreements uploaded name description assigned, agreements must activated. activated legal agreement displays platform API Access Wizard reviewed accepted part API access request process. activate legal agreement: Back top any reason becomes necessary discontinue use particular legal agreement, deactivate remove displaying platform API Access Wizard. deactivate legal agreement: Back top After activated legal agreement update name description using Edit function. information displays Agreements Summary listing legal agreement. \"Name\" assignment used hyperlinked display name legal agreement Legal page. Edit function Status column used update legal agreement display information. edit legal agreement: Back top Legal agreements deleted Draft state. After legal agreement activated, registered part API's contract cannot deleted. delete legal agreement: Back top view statistics legal agreement activation deactivation activity, download CSV file includes legal agreement name username/date/time stamp legal agreement activated deactivated. download legal agreement report: Back top"},{"title":"App Versioning","url":"/cm/learnmore/create_app_versioning.htm","date":null,"type":"document","description":"Create, edit, and manage app versions.","categories":[],"body":"Create, edit, manage app versions. During app development process, need may arise require different app versions. example: facilitate Apps section includes app versioning functionality allows create new instance version) existing app. App Version Composition create first app Version Create New App Version After creating Version app, create app version using Version function accessible via App Details page. Note: app version created, platform auto-generates internal App App use API calls. Refer API documentation API Documents section more information. Viewing App Versions navigate app version selecting Current Version menu. Team Management Apps, Team Member assignments apply apps versions. unique set Team Members cannot assigned specific app version. App Management App versions managed using variety different tools available App Details page. Back top create new app version: Back top \"Version name) app version changed using Edit function App Details page. edit app version information? instructions. Back top Deleting app version standard app management task. delete app? details. Back top App version information changed using Edit function App Details page. Back top"},{"title":"API Publishing","url":"/cm/learnmore/publish_api_publishing.htm","date":null,"type":"document","description":"Learn how to set up and manage your API on the platform.","categories":[],"body":"Publish API, configure license scope determine licenses offered API, perform maintenance activities. APIs business capabilities exposed internet applications use. Simply put, API programming interface organization exposes internet allows applications communicate backend systems. Typically, build APIs expose specific aspects business functionality. things differentiate market place make money company. essentially doing through creation APIs creating new channel business exposing set capabilities product services people build mobile applications sell customers), thereby creating channel products services online. Back top platform supports public private APIs. Public APIs visible visitors members. Private APIs visible members invited join Private API Group. Once member accepted invitation Private API Group, Private API displayed unique icon throughout member’s platform experience. Back top Developing API includes key phases: Plan, Build, Run, Promote. Planning: planning phase involves determining APIs publish. Key considerations selecting APIs include: Build: After API planned, approved appropriately scoped, next step build Jet considerations building API: Building API simple, easy understand, documented encourage developers use Run: After API built, next step run Key considerations running API include: API must robust managed. achieve must provide developers feedback API perform reliably terms functionality, performance, its ability security customer data. Promote: Once API running must promote Key considerations promoting API include: Collaborate—To market API set consumers developers writing applications) must create community around API. Creating community partners provides value add services APIs allows developers collaborate each accomplished platform using API Group API Board functions. Search—Users need able effectively find APIs, need access documentation collaborate around developing applications. accomplished platform using Search function users perform free text search use pre-defined search filter. Support—You must support API effectively. write APIs may run problems gain expertise advice community members. accomplished platform using API Board, trouble ticket management system, submitting support request email address listed Support page accessible clicking top navigation. Back top minimum requirement add API platform must endpoint. example: Back top platform allows secure monitor APIs following pre-configured policies. policies selected default assigned newly created APIs. Three policy categories supported: Policy Category: Simple Header SecurityPolicy Type: API Consumer Application Security Configuration: Signature checked. Policy Category: Simple Header SecurityPolicy Type: API Consumer Application SecurityConfiguration: Shared Secret checked Policy Category: MonitoringPolicy Type: WS-Auditing Service PolicyConfiguration: Audit Messages, Audit Message Size, Audit Identities (Consumer End User), Reporting Options (Log) Policy Category: Monitoring Policy Type: WS-Auditing Service Policy Configuration: Audit Messages, Audit Input Message, Audit Output Message, Audit Fault Message, Audit Message Size, Audit Binding, Audit Transport, Audit Contract, Audit Identities (Consumer End User), Reporting Options (Log) Note: Selection policy typically assigned API after performing Edit OAuth Details configuration API Details page Community Manager portal. Use Edit API Details page, Proxy page, Advanced Options select OAuthSecurity Policy section. Policy Category: OAuth Policy Type: XML Policy Configuration: not configure. subscribe API Enterprise Management Platform decide install on-premises ability create manage own Policies. require policy not default list, submit support request email address listed Support page accessible clicking top navigation. Back top add API using Add New API Wizard, Policies section Proxy page, MUST select security policy Category: Simple Header Security) select monitoring policy charts logs. policies display, consult API Provider Site Administrator. Back top platform provides Add New API function allows add SOAP REST-based API. APIs added both Sandbox Production environments. Add APIs Wizard includes following sections: API API page perform initial step specifying API Name, Version Tags, Visibility (Public/Private), API Description, Version Description, API Icon. information displays public API page displays API search results. platform user performs search finds public API page, sees API description rate write review API. Individuals participate Yes/No survey indicating whether review useful not. Based high visibility it's important API description highly informative includes necessary marketing, functional, use case information engage customers request access API. Target Target page, configure SOAP-based APIs specifying SOAP version WSDL. REST-based APIs configured specifying more operations. Policy selection not required Target URL. Proxy Proxy API page allows configure API's proxy settings. proxy API, select Yes radio button Proxy API section. many benefits proxying API including utilizing platform security service level policies, monitoring performance, allowing App Developers gain access API sandbox endpoint test API functionality app), production endpoint use API functionality live application). Allow Anonymous Access option allows enable anonymous access API endpoint offer preview API developers without requiring users create app sign platform. add API: Launch Add New API Wizard first step process launch wizard. Specify API Information Specify Target URL Environment Configure Advanced Options default, REST protocol selected API, Default Profile (Any Default Operation specified. After specifying Target URL Environment, optionally update existing protocol (REST), change protocol SOAP Advanced Options section. Configure Protocol: Configure Proxy Enable Disable Proxy API Configure Production Endpoint Configure Advanced Options Back top API using Licenses feature, scope mapping key defining portions API available licenses. scopes licenses themselves defined Business Admin, API level determine operations assigned scopes. turn determines licenses available app developers requesting access API. example, let's say API includes set operations relating calendar functionality another set operations relating email access management. App might need access calendar functionality, App might include email client might require access operations relating email. scope mapping feature enables group individual operations logical groups separately packaged license App another App another example, let's say offer access operations, higher level access, fee, operations including add, modify, delete. Business Admin defines READ MODIFY scopes, assigns each separate license. API Admin assigns operations READ scope assigns operations MODIFY scope. Users choose paid license access scopes; users choose free license access operations. runtime, request received API proxy particular app, Network Director allows access specific operations covered license governing app/API contract. Back top standard practice, list available Licenses level App Access provided each License included documentation API. Back top following example illustrates add REST service BingVirtualEarth API. Pre-conditions Add REST Service Set Contract Test API test API Dev Console REST clients mentioned Pre-conditions section above. request URL added API URL same parameters physical service. example: Back top create API using Create New API function control whether visibility API Public Private via \"Visibility\" option. change API visibility based requirements using Edit function API Details page. Back top Add New API function includes proxy API option allows configure endpoint particular environment internal external network) accessible target applications. proxy API endpoint exists Cloud similar virtual service. security measure, users able access proxy run Cloud, not accessing API implementation directly. Based development cycle API, chose expose selected functionality API defining Proxy API each endpoint selecting functionality operations) expose. approach allows manage API lifecycle expose functionality based requirements development phase, testing, production, etc.). Advantages: Internal External Networks—If access real API internal network, expose specific functionality external network, add API Target URL using Add New API function, virtualize API specifying Proxy API Target URL specific functionality make available external network. Bridge Between App Proxy API—If API focused business aspects API service, set proxy API provide tasks such security enforcement specifications required target API specs app team, etc.). Sandbox Production Endpoint Access—Adding Proxy API allows app developers gain access API sandbox endpoint test API functionality app), production endpoint use API functionality live application). Contract Enforcement—If configure API proxy, take advantage platform's contract enforcement functionality. Here's works: Service Level Policies configure API proxy, take advantage service level quota management policy functionality monitor API ensure meets defined standards service level performance contracts. Example Scenarios: Scenario build API expose specific functionality purposes collaborating selected development and/or discussion group. not API visible anyone outside selected group. accomplish Scenario build API expose specific functionality public use applications. accomplish Back top Back top \"API Type Profile\" used proxy APIs identify type content API accept consumer returned API consumer identifiers combined content types ANY, JSON, FORM, XML) packaged API Type Profile drop-down menu profile sets. following content types supported: Back top chose proxy API, optionally configure operations Methods, URLs, Content Types. After API settings saved, specified information synched Target URLs. following options supported: Back top Add API Wizard includes Allow Anonymous Access option Proxy page allows enable disable anonymous access Sandbox Production endpoints APIs added platform. Note: Anonymous access typically granted API Sandbox endpoints, generally not standard practice grant anonymous access Production endpoints. Allow Anonymous Access Yes Users not platform members: Allowing anonymous access API endpoint useful offer preview API developers without requiring users create app sign platform. example, specific feature set expose part promoting API, expose those operations API configuration, enable Proxy API Allow Anonymous Access option. Developers read documentation access API without signing requesting access API. developer decides use API, sign platform, create app using Add New App function, select Access API Details page submit API Access Request. Users platform members: enable anonymous access Add New API Wizard selecting Yes Allow Anonymous Access Proxy page, API Requires Approval option disabled. means not required submit API Access Request, except following scenarios: API Charts Logs Anonymous API Access: Back top add new API, \"Version specify Add New API Wizard represents version number display Version drop-down menu. add new API version using +Version function API Details page. Adding API version follows exact same process adding first API except information current API version replicated. edit/customize API definition based requirements. Back top modify API definition using Edit function API Details page. Back top Back top couple steps you'll need complete API setup define licenses app developers requesting access API: scopes link between API licenses offered app developers. any questions regarding scopes assign licenses available, consult Business Admin. overview Licenses feature relationship between setup steps performed Business Admin those done API Admin, relationship between scopes licenses, Licenses: Feature Overview. Back top API Administrator change license specific API Access Request prior approving request. review license scope API access requests before approving, make sure you've selected API requires approval option API setup (API Edit Proxy page). API set auto-approve requests, won't opportunity modify license. Back top"},{"title":"Navigation","url":"/cm/learnmore/basics_navigation.htm","date":null,"type":"document","description":"Information about navigation elements used in the platform, App and API component overview, and platform search option.","categories":[],"body":"Navigation elements used platform, App API component overview, platform search option. following table provides brief summary navigation elements. Pre-configured search options include APIs, Highest Rated, Most Followers, Recently Added, Last Updated, Most Connections, Most Volume. back top Apps interface provides functionality allows define manage apps, APIs use, app development team whom collaborate. monitor app performance data during testing production monitor app performance?). Apps section organized following functional areas: Apps Page Apps page displays summary listing apps defined currently following. After logged page accessible clicking Apps Navigation Icon. Summary information presented includes App Name, Description, link Details page, incremental counters Followers APIs Connected, Average Rating (based Peer Reviews). App Details Details page provides following summary information functionality: App Board Board page provides collaboration tool includes both discussion board ticket management system. Developers Team Members access privileges APIs Apps collaborate posting discussion topics, raise issues specific API App creating ticket. Comments posted board items tickets. Dev Console Dev Console page provides test tool sending sample requests. Monitor Monitor page provides API performance health monitoring traffic, events, alerts comments, tickets, etc.) relating consumers API. Chart presentations include Chart Usage Log views. monitor app performance? Team Team page includes Invite function allows send invitations individuals join development team current app. Existing team members displayed summary listing. Each summary listing includes bio Team Member Contact email address. APIs APIs page displays listing APIs current App requested access Sandbox Production columns display status Sandbox Production access requests. Followers Followers page allows users subscribe apps interested clicking Follow button. Subscribing app allows users receive news updates relating app personal Dashboard. back top APIs interface provides functionality allows developers view available APIs configuration details, view download API documentation. New potential members review existing APIs read documentation determine APIs include functionality included app. APIs section organized following functional areas: API Details API Name selected, Details page displays presents feature overview documentation selected API. select different API versions using Version menu. endpoints available API presented Sandbox, Production). Each API includes Peer Reviews view, Similar APIs section provides listing APIs include similar functionality. API Board API Board collaboration tool includes both discussion board ticket management system. API Administrators Developers Team Members access privileges APIs Apps collaborate posting discussion topics, raise issues specific API App creating ticket, post alerts API news, maintenance announcements, etc.). manage display API activity posted Dashboard newsfeed using Follow Unfollow functions. Documents Documentation page displays reference documentation current API. Each API includes API Overview topics each API Method. typical organization might include Uses Cases, URI, Syntax, Sample Request, Request Parameters, Response Parameters, Sample Response, Error Codes, Related Topics sections. API Providers utilize File Manager upload manage documentation. Content Development Guidelines details. Legals Legal page provides listing legal agreements associated current API. agreements typically pertain API usage requirements, limitations, liability, service level expectations. API Provider responsible providing enforcing legal agreements. users visibility rights API view legal agreements. API Providers upload manage legal agreements using File Manager. Groups Groups page provides method creating common interest groups around APIs defined private visibility. Group accounts created, member invitations sent managed API Provider assigned API Administrator. API Administrators create Private API Groups. Admins Admins page provides functionality allows API Providers send invitations individuals grant administration privileges API. API administrators viewed managed summary listing. Apps Apps page allows API Providers designated API Administrators manage approval access requests API. Followers Followers page provides list members currently following activity selected API. back top full-text search capability allows members visitors target information APIs, Board Discussions, Alerts. following entities searchable: perform search: Search Filter: APIs, APIs, Apps Function: APIs, APIs, Apps Function: APIs, APIs back top"},{"title":"Go Live With Your App","url":"/cm/learnmore/go_live.htm","date":null,"type":"document","description":"Request production access to an API, go live, and monitor your app's use of an API.","categories":[],"body":"Request production access API, live, monitor app's use API. Request manage production access API. Monitor app performance adherence defined API access contract."},{"title":"Basics","url":"/cm/learnmore/basics.htm","date":null,"type":"document","description":"Learn about platform basics such as signup, account management, navigating, and getting support.","categories":[],"body":"Become member platform, manage user account, obtain support, learn key terminology navigate site. Account signup available options. Manage platform user account, configure notifications, password support. Navigation elements used platform, App API component overview, platform search option. Platform browser support support contact information. Key terminology used platform."},{"title":"API Monitoring","url":"/cm/learnmore/publish_api_monitoring.htm","date":null,"type":"document","description":"Configure email notification settings and monitor API performance.","categories":[],"body":"Configure email notification settings monitor API performance. Dashboard Admin Team may issue alerts time time notify platform members issues, such scheduled downtime sessions, may impact application development. monitor alerts Dashboard. Alert notifications posted Dashboard page identified API Name, Title, Environment Sandbox, Production), Status, Priority, Creator Created Date/Timestamp. comment alert directly Dashboard double-click alert entry view manage associated API Board. API Board Alerts viewed API Board. filter posts view alerts, sort Most Popular, Most Marked, Most Recent, comment alert. Performance Charts Usage Logs API performance including service response time, adherence defined API Access Contracts, transaction faults monitored viewed performance charts. Usage logs include request response message data API, App, Contract activity queried viewed. monitor API performance? Back top respond notifications directly Dashboard using sort filters target entry Dashboard, clicking notification display its Board entry. respond notification. Post Ticket Management list response options. Back top configure account receive email notifications certain platform activities occur. Notifications updated User Settings page. default state notifications enabled. Back top Admin Team may send alert notifications time time API maintenance announcements, API related news, etc. Alert notices posted API Board API alert pertains. Back top API Monitor Overview section includes barometer style Dashboard controls allows view API throughput, latency, errors messages real-time Sandbox Production environments. Statistics calculated apps consuming API, operations included API. obtain statistics per-second per-minute basis. Dashboard displays statistics last hours. Dashboard controls scale based number messages received time interval selected (sec min). example, messages transmitted API last seconds; scale change Dashboard provides following control types: Usage data further categorized Usage App, Usage Operation, API Standings groupings exported. export usage data apps consuming API?, export usage data operations API?, export usage data most popular APIs? Back top Performance charts included APIs Monitor page. provide mechanism platform members view performance apps APIs apps consuming. Chart data used monitor API usage span time troubleshoot errors API operation. Performance Chart functionality allows view performance sandbox production modes, provides monitoring tracking service response time transaction faults. Charts populated usage \"roll-up\" data gathered during processing web service request response messages. Historic usage performance data queried viewed Usage Logs section. monitor API usage logs? Performance Charts automatically scale axis show appropriate range data shown. choose scale average default) based selected interval set own scaling. Note: Updating chart performance statistics using Refresh based selected Duration Interval represents total time range displayed. Chart Types following performance charts types supported. chart data presented milliseconds Minimum, Maximum, Average Response Times transactions depicted candlestick bar chart axis. hover each time interval view Datapoint Pop-up displays Date, Time, Average, Max, Min Response time transaction selected time interval. Successful transactions faults depicted single chart two Y axes. Successful transactions depicted column chart. vertical bar displays number transactions successfully processed selected response time range. Faults depicted scatter chart. red dot represents number Faults associated specific time interval. Time Range Performance Chart includes navigation control (located bottom chart) allows navigate Timeline based selected Duration Time Interval. Throughput data monitored timeline presented spline chart. After targeted timeline, several ways view additional chart detail. Zoom feature allows view chart data clicking pre-defined interval hour, hour, hour, hour, Data Point Popup allows hover specific datapoint view response data detail including Date, Time, Average, Max, Min. Graph Controls Graph Controls section Performance Chart provides options configuring chart content specific API, APIs), data capture display intervals Duration Interval), navigating zooming chart Timeline. Each chart displays data based currently approved environment Sandbox Production). Back top APIs includes Monitor Logs section provides options filtering viewing usage logs associated API activity occurred either platform production sandbox environments. generate usage log report API: view usage log details API: Usage Log Details (Transport Header) Usage Log Details (Transport Headers Request Message) Usage Log Details (Transport Headers Response Message) Back top monitoring process captures usage data pertaining apps consuming current API. Usage App section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data apps consuming API: Back top monitoring process captures usage data pertaining operations current API. Usage Operation section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data operations API: Back top monitoring process captures usage data based API popularity. API Standings section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data most popular APIs: Back top"},{"title":"Stay Informed","url":"/cm/learnmore/stay_informed.htm","date":null,"type":"document","description":"View notifications relating to your app project and choose apps or APIs to follow.","categories":[],"body":"View notifications relating app project choose apps APIs follow. Dashboard configurable information system used view manage event notifications relating activity occurs platform account. more information notifications newsfeed functionality, enable disable email notifications, notifications work?, information displayed Dashboard? Back top Notifications displayed top Dashboard. information displayed Dashboard? Back top Dashboard supports discussions, ticket, alert, API Access Request App Team Membership Request newsfeed types. following table illustrates relationship each newsfeed type each platform Board, shows newsfeed types display Dashboard. Back top newsfeed user's Dashboard filtered using sort controls following sort controls: Newsfeed Sort Controls Back top platform allows monitor activity API view API’s Board items own Dashboard along Board items apps’ Board any API’s monitoring. enables customize Dashboard give single view news most interested several options use platform keep up-to-date discussions tickets API. monitor API activity Back top API Details API Board include Follow function allows add API newsfeed selected API Dashboard. add API newsfeed Dashboard: Back top previously used Follow function remove API newsfeed selected API Dashboard, use Unfollow function API Details API Board page. remove API newsfeed Dashboard: Back top App Details App Board include Follow function allows add app newsfeed selected app Dashboard. add app newsfeed Dashboard: Back top previously used Follow function remove app newsfeed selected app Dashboard, use Unfollow function App Details App Board page. remove app newsfeed Dashboard: Back top"},{"title":"API Admin Management","url":"/cm/learnmore/publish_api_admin_management.htm","date":null,"type":"document","description":"Invite others to be API Admins for your API and manage the API Admin group.","categories":[],"body":"Invite others API Admins API manage API Admin group. APIs section includes Admins page allows invite others administrators API. API administrators viewed managed summary listing. Invite Administrators Invite More function allows invite additional users administrators API. View Administrators administrator invitation submitted, username, email address, invitation status invitee (Email Sent, Approved, Rejected) added Admins Summary. Manage Administrators API Administrators remove Administrator listing. Back top API Admins page includes administrator invitation function allows invite people administrators API. Note: create API, administrator. administrator privilege automatically approved posted Admins Summary page. invite additional administrators using Invite More function. Invitees not platform members must sign before accepting team invitation. Back top invite non-members administrator API, order invitee accept invitation, must platform members. Basics sign information. Back top receive invitation via email administrator API accept reject invitation. Back top Once invitation sent individual API administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove API administrator API clicking Remove. remove API administrator API? Back top Any API administrator remove administrators API. Back top"},{"title":"Create App","url":"/cm/learnmore/create_app.htm","date":null,"type":"document","description":"Create an app project, apply security, version your app, and manage connections.","categories":[],"body":"Create app project, apply security, version app, manage connections. Add set app—a tutorial. Create app manage visibility. Learn configure app credentials. View, explore, search apps. Create, edit, manage app versions."},{"title":"View Apps","url":"/cm/learnmore/create_app_view_apps.htm","date":null,"type":"document","description":"Find and view information about apps.","categories":[],"body":"Find view information apps. Apps page displays summary listing apps defined currently following. After logged page accessible clicking Apps Quick Filter Icon includes following functions: Back top"},{"title":"Legal Agreements","url":"/cm/learnmore/access_apis_legal_agreements.htm","date":null,"type":"document","description":"Learn about API legal agreements and how to access them.","categories":[],"body":"Learn access API Legal Agreement. request access API, might required accept legal agreement such end-user license agreement, developer agreement, service legal agreement. Legal agreements typically pertain API usage requirements, limitations, liability, service level expectations. API provider responsible providing enforcing legal agreement. Back top access API legal agreement: Back top"},{"title":"Visibility","url":"/cm/learnmore/publish_api_visibility.htm","date":null,"type":"document","description":"Configure and manage API visibility options.","categories":[],"body":"Configure manage API visibility options. API Visibility menu option allows API Administrators manage visibility API Resources granted invitation submitted API Version API Group. following group visibility scenarios supported: Back top APIs Visibility Groups screen displays list API Groups members current API. Note API Administrator update license scope configuration Group Visibility any time prior API Access Request being approved API Administrator. Once API Access Request approved Edit Scope function disabled. following license scope levels supported. configure license visibility API Group: Back top API Administrator change API license visibility specific Group. edit license scope Groups: option gives API Group set licenses part visibility scope. Click checkbox select Licenses make visible current Group. Back top Groups: you've added Private API visibility Private), platform provides Private API Group collaboration function via API Groups page. Groups section Collaborate more information. Back top receive invitation Private API Group, accept invitation: Back top"},{"title":"Site Administration","url":"/cm/learnmore/site_administration.htm","date":null,"type":"document","description":"Learn about site administration functions such as managing user accounts, uploading color schemes and css, and configuring domains.","categories":[],"body":"Site Administrators: learn manage platform user accounts, invite individuals site administrators business administrators platform, upload site color schemes update css style sheets, configure authentication domains. Administer platform user accounts. Manage Site Administrators platform. Configure Authentication Domains APIs defined platform. Manage Business Administrators platform. Configure custom color schemes, define platform login, upload documentation files style sheets."},{"title":"Community Manager Licenses Feature Overview","url":"/cm/learnmore/ov_licenses.htm","date":null,"type":"document","description":"A detailed overview of the Licenses feature.","categories":[],"body":"document provides overview Licenses feature implemented manage API access, define different levels access along appropriate service level agreements, monetize API. includes information feature design, practical implementation tips, implementation scenarios showing feature used benefit both API owners app developers. topic includes following sections: platform’s Licenses feature gives complete control level access offer API. feature designed exactly customize access offerings, including: defining offer, whom, level, use feature design API offering suits customers exactly. Back top great flexibility feature gives very fine control API offering. Below hypothetical implementation scenarios showing use feature package API: new operations assigned scope, specifically large customer, visibility setting Private. operations assigned second scope visibility Public. Two licenses defined. large customer, offers access both scopes; second, customers, offers access public scope. Both licenses offer same quality service. API Admin creates Private API Group invites large customer. customers, not being invited private group, unaware new operations. documentation tagged visibility tags each license, portion API documentation that’s visible specific app developer matches developer’s visibility API defined Business Admin defines single scope, since access granted operations. defines three licenses—Bronze, Silver, Gold; each License Term includes scope applicable QoS policy tier. API uses licenses. Privacy not factor; fact, customers need able offerings choose, therefore scopes licenses visibility setting Public. Business Admin defines two scopes, Credit credit card transactions Debit debit cards. two QoS policies, smaller customers larger customers, resulting four separate license offerings; debit card processing Silver Gold QoS levels credit card processing Silver Gold QoS levels. scenario, Business Admin sets four licenses visible customers. API Admin assigns Credit scope operations relating credit cards, Debit scope operations debit card transactions. Since licenses offered marked publicly visible, developer requesting API access sees four options. developer chooses license most applicable type transactions app processes level service required. offer two categories API access; unlimited read-only access operations), unlimited write access operations part Business Admin first defines applicable scopes, maps scopes licenses. Later, scopes mapped applicable operations below). Business Admin: API Admin assigns operations Read scope assigns remaining operations Update scope. Back top license feature encompasses decisions actions part several key players. Core components (scopes licenses) defined user interface Business Admin, API Admin completes picture assigning operations scopes. Note Business Admins automatically API Admins APIs, same individual complete both sets tasks. flexible nature hierarchy, very easy customize APIs privacy monetization. example, monetize API operations serve data based service profiles, monetize operations execute transactions based transaction volume response time. define completely new set licenses leave older ones place support existing customers. section provides overview feature action, including: three key roles platform affected Licenses feature. activities each, whether regard configuration usage, follows: Determining exactly parts APIs expose customers, levels service offer, terms agreement (monetization) key business decisions. reason, platform key components Licenses feature defined Business Admin. Typically, Business Admin might responsible multiple APIs. platform, Business Admin same rights API Admin each API business, additional rights. Business Admin defines key components Licenses feature including Scopes, License Terms, Licenses. Once defined, available use any API business. each API, API Admin implements feature assigning operations scopes, manages visibility assigning licenses groups. more information Scopes, License Terms, Licenses, Components below. API Admin responsible API definition platform. API setup, chooses use Licenses feature assigns scopes operations. API Admin determines visibility API. API visibility set Private, invites more groups (Private API Groups independent groups) visibility API. API Admins responsible tagging API documentation visibility tags, uploading API documentation, approving access requests developers apps. Note: Depending platform set individual users might not permission create modify API unless user Business Admin. main platform user, app developer, reaps benefits feature smooth user experience. making API access request, app developer chooses selection more licenses applicable API. app developer, it’s simply matter choosing, licenses offered API, most closely offers capabilities quality service looking Licenses feature uses following components: Scopes, Terms, QoS Policies, Legal Agreements make hierarchy License definition. Visibility, API access requests, API documentation tags not specifically part hierarchy key components. scope entity define represent any subdivision API might separate control separate control specific operation, define scope includes operation. separate control READ operations, create scope those. guiding principle defining scopes level granularity that’s needed defining API offered app developers. scope bridge between top level hierarchy, license, bottom level, API operation (method). Business Admin defines basic scope definition. API level, API Admin assigns specific operations more scopes API. operations included any license scope assigned specific API. example, Business Admin might define scopes based roles groups identity management system, since scopes way define authorization policies become linked user’s token after authentication. API Admin links scopes specific functionality API assigning scopes operations. operation assigned multiple scopes, app developer sees operation developer visibility applicable scopes. Similarly, app that’s accessing API must applicable scopes its license not able access operation. Scopes arranged hierarchy; top-level scope child scope, child itself child scope. scope hierarchy used, user visibility parent scope automatically visibility descendent scopes. Similarly, app parent Scope1 part access scope API, scopes descendants Scope1 automatically considered part App’s access scope. Looking permissions another perspective, app, user, group access descendent scope, assumed app, user, group access parent scope, top scope level. example scope implementation—the Business Admin might create two scopes, Read Update. defining logical groupings, Business Admin enables API Admin assign applicable operations those two scopes, thus package API license offerings. scope definition includes scope name, short long descriptions, visibility setting. supports additional settings any operations assigned scope: whether anonymous access allowed production and/or sandbox environments, whether anonymous access allowed production and/or sandbox environments, whether scope offered default OAuth grant. not using OAuth just ignore settings relating OAuth. Note: future, scope definitions apply OAuth Licenses. Currently, OAuth scopes License scopes maintained separately. license term custom grouping scopes QoS policies. essentially same thing term business contract. case, term defines access being offered (scope) level access (QoS policy). any impact, license term must include least scope. license include more license term. It’s important understand QoS policies apply license term, not individual scopes term. Let’s say example term includes: scenario, either scope process transactions per second long combined total number transactions operations both scopes does not exceed per second. QoS policies core part API definition, add another dimension Licenses feature beyond restricting visibility/access, allowing apply use-based policies licenses. QoS policies defined SOA Software Policy Manager System Admin. specific choice QoS policy, additional policy configuration steps, include such options steps take access exceeds SLA agreement. Once defined Policy Manager, available platform selection defining license term. Once defined Policy Manager, available platform selection defining license term. allows different QoS policies offered app developers. making API access request, app developer choose license includes QoS SLA needs app, request access level. QoS SLA enforced based each app-to-API service contract. license constructed follows: Business Admin define more legal agreements upload platform. Once available platform, more legal agreements incorporated license definition. Once legal agreement defined part license, API Access wizard displays agreement any developer requesting API access license. developer must accept legal agreement part API access request. license top-level item customization dovetails clear specific offering app developer. license model defined Business Admin. API Admin completes picture, relating license API, assigning scopes specific operations. app developer requests API access, licensing choices presented part API Access wizard app developer simply selects license most suitable unique scenario app. points licenses: two core visibility states objects platform—Public, means object visible anyone accesses platform, Private, means visible invited users (members invited group). API, Scope, License, App, Group Public Private visibility options. Public Private visibility states work Licenses feature allow very fine control visibility offer API. API private, control visibility inviting groups users API. private licenses, determine licenses offered groups. Portions API mapped private scopes not visible developers members group invited API unless specifically invite licenses include private scopes. Since design licenses any way allow whatever level access allow specific individual group. Let’s say API private, invite members Group read-only access members Group full access. easily achieve Just invite both groups access API, tailor access Group include license you’ve defined read-only access. Done. using Licenses feature, invite Group visibility API, control level visibility group Note: must first make sure API using Licenses feature. API’s Board, click Edit make sure Use Licenses checkbox checked. platform, Board API. left, click Visibility click Groups. groups visibility API listed. page limit visibility parts API, users don’t those operations, naturally don’t those users able view corresponding API documentation. platform allows limit visibility API documentation applying set tags HTML. applying tags around document content, specify licenses part documentation visible. viewing user applicable license, user sees documentation. not, content not displayed. control visibility file level, more granular level tagging specific content file. example shown below. implementation example, let’s say offer Gold level license specific customers. includes three additional operations higher QoS policy. documentation includes: use documentation feature hide three files Gold operation, Gold overview file, users. main index page, tag links four files containing Gold license content links visible Gold customers. content tagged Silver license offered customers, tagged Gold license. Gold customers Silver customers not Gold content. point app developer requests access API both app developer customers reap benefits Licenses feature. Instead black white all-or-none access, app developer choose licenses defined API designated visible him/her, choose license most applicable app’s exact scenario—the operations app needs access appropriate level access (quality service). API includes subsets (scopes, packaged licenses) select audience, developers never those options associated documentation. Each developer available him/her, those choices request API access most appropriate license. final step process, licenses set API access requests require manual approval API admin, evaluating API access request API admin further modify API access level granted app. Briefly, high-level steps implement feature. Back top examples API owner use Licenses feature administer, strategize, monetize API. Let’s say offer three levels access/service users: Note: variation above, configuration offer Metered License—for example, $0.10/transaction. use detailed auditing API usage logs custom reports Community Manager Policy Manager compute monthly bills. Here’s set bronze, silver, gold level licensing example. Define scopes: offer two categories API access; read-only access operations, Bronze) full access operations, Silver Gold). part Business Admin defines two scopes, Read Update. Read scope defined child Update scope. Define licenses: Business Admin defines three licenses: Bronze, Silver, Gold. available app developer choose requesting API access. Enable licenses: API Admin enables Licenses API sets API Private. Map scopes: API Admin maps operations read-only scope maps operations Update scope. scenario use Licenses feature make parts API visible select group users. Let’s say three types users: accommodate customer groups, first define following Scopes: define following Licenses: Maps scope: Read-Only Maps scope: Full Publish Maps scope: Full Publish (different QoS policy) Maps scope: Beta create Private API Group beta testing, invite technology partner group, make Beta license visible group. tag API documentation new operations visible those license includes Beta scope. technology partner choose API access Beta license try new operations. customers continue enjoy normal level service completely unaware beta testing occurring. Perhaps offer access operation, rate transactions per second, charge, operations. define five licenses, each including scope, each including same QoS policy Let’s say instead offer transactions per second charge, don’t mind operations used long overall usage doesn’t exceed scenario define license five scopes QoS policy. QoS policy applies scopes, combined. apply same approach monetization higher consumption levels. might define exactly charge traffic specifically high-volume endpoint. operations lower volume, exact numbers might not significant long overall package fair. flexibility allows package exactly works best app developer customers. Back top app developer requests API access, API Access wizard steps him/her through process. app developer: Back top"},{"title":"Post/Ticket Management","url":"/cm/learnmore/collaborate_post_ticket_management.htm","date":null,"type":"document","description":"Respond to and manage posts or tickets.","categories":[],"body":"Respond manage posts tickets. add comments posts tickets Dashboard, API Board, App Board. view listing most marked comments: Back top identify discussion topics associated comments positive feedback using Mark function. Back top Each ticket includes Update Priority function allows update ticket priority through different phases problem troubleshooting process. creator ticket update priority. update priority ticket Back top Each ticket includes Resolve function allows specify resolution close ticket. creator ticket, app team member, Business Admin resolve ticket. Back top reason becomes necessary open resolved ticket, clicking Reopen button. Back top close ticket, clicking Close button. creator ticket, app team member, Business Admin close ticket. Back top"},{"title":"Tutorial (App Developer)","url":"/cm/learnmore/create_app_tutorial.htm","date":null,"type":"document","description":"Follow an example scenario for app setup.","categories":[],"body":"first step process add app. Next, must provision app authentication key. Security section App Details page includes Shared Secret Public Key Integration options generating credentials required authenticate app. shared secret automatically generated part Add New App creation process. prefer use PKI keys, generate Certificate Signing Request upload App Security determine option best suits requirements, configure credentials, continue Step Request API Access. information configure app credentials platform, click process allows select App connect API, environment (Sandbox Production based API supports). addition: option allows App developer select license scope different time. option might used App developer does not visibility licenses needed App developer does not know licenses selected. Notes: next step build application integrate Sandbox Endpoint, App Shared Secret PKI Key. enables ability send requests application using App assigned during app creation process. App Security topic provides information configure App access topic App Security next step set accounts data sandbox testing environment test app. performed completed testing sandbox endpoint, need upgrade access use production endpoint, submit another API Access Request select Production environment. Step Request API Access instructions. After you've approved production access status app status \"Activated,\" must update app production endpoint URL. Refer App Security documentation API Documents section API more information. After add production endpoint URL application, app ready live production environment. Back top"},{"title":"Account Management","url":"/cm/learnmore/basics_account_management.htm","date":null,"type":"document","description":"Manage your platform user account, configure notifications, and get password support.","categories":[],"body":"Manage platform user account, configure notifications, password support. After create new account, profile created. top navigation includes Profile link view edit account User Details User Settings pages left navigation. back top password used along email address sign change user account password User Settings page. back top User Name displays posts, tickets, notifications. initially sign specify User Name Personal Info page. update User Name, change User Details page. back top Notifications sent contact email address. send notifications different email address, change contact email address User Settings page. back top user profile pic displays user name Logged User area, App Board, API Board, Dashboard posts. upload profile pic image site via Profile Details page. Profile pic upload options include performing direct file upload uploading file Gravatar. supported file requirements follows: back top configure account receive email notifications certain activities occur. Notifications updated User Settings page. default state notifications enabled. back top optionally upload icon uniquely identify objects APIs, Apps, Teams, Groups, APIs, Apps). action performed Icon section adding editing objects. back top forget password, submit password reset request. back top log using Logout link top navigation. back top"},{"title":"API Versioning","url":"/cm/learnmore/access_apis_versioning.htm","date":null,"type":"document","description":"Learn about API versioning and how to access the right version for you.","categories":[],"body":"Learn access API version. API composed more versions accessible Version menu API Resource Title Bar. Note: API Administrators designated team members authorized create API version. Back top Details page each API includes Version drop-down menu, top right, allows view API versions. After selecting API version, view API documentation configuration details version. components APIs section? Back top you've chosen API version use, API version page, explained view API version? above. click Access top right page start API Access Wizard. full instructions initiating API access request, using API Access Wizard, refer API access app? Back top"},{"title":"OAuth Support","url":"/cm/learnmore/publish_api_oauth_support.htm","date":null,"type":"document","description":"Configure an API with OAuth.","categories":[],"body":"Configure API OAuth. OAuth open standard security protocol authorization allows share private resources stored site another site without having share credentials. advantage OAuth supports both authentication authorization such way application does not need give access users credentials. example, platform sign using Facebook credentials, API Details page share API Facebook, Twitter, Linked elements platform configured private resources. addition, OAuth potentially extend userbase APIs applications providing flexible, familiar way access example, multiple APIs added platform repository, each API granted access multiple apps, broadened developer community, addition substantial number users using applications. Access permissions initially established supplying Resource dictated application username/password, email address.). example, supply username password tokens, each token grants access specific site specific resource defined duration. allows grant third party site access information stored another service provider, without sharing access permissions full extent data. OAuth defines following roles users applications: OAuth context API platform includes following actors: Back top platform supports both versions OAuth. Back top Site API Administrator set OAuth Provider definitions Site Administration Domains section. create domain each OAuth Provider scenario configurations available selection using API OAuth function APIs part platform deployment. Back top API currently supports OAuth must associated OAuth Provider configuration represents OAuth use case most appropriate intended usage API, resource mapping must configured selected operations establish authorization permissions. accomplished using OAuth Details function API Details page. Process: API Administrator Installs OAuth Provider Features After API Administrator adds API, define more OAuth Provider configurations: Launch OAuth Details Wizard Select OAuth Provider first step select OAuth Provider both Production Sandbox endpoints API. Specify Authorization Details Based OAuth version supported provider selected, specify details OAuth Versions. select OAuth OAuth Options section displays configure Authorization Grant Types. Note: specifying Authorization Server URL platform, it's important verify client application authorized use grant type OAuth Provider configured support. Configure Scope Mapping selected predefined OAuth Provider, resources operations) current API already defined authorized use. Scope Mapping page, identify operations applications need authorization scope. example, Application1 includes calendar may need access API's calendar operation, Application2 includes email client may require access API's address operation. Back top Identity Provider central OAuth enabled provider provides both user authentication user authorization. Using API OAuth function, select pre-defined OAuth Provider Party Provider: Reference: API API Details OAuth Details OAuth Provider Back top Access permission use resource OAuth Provider facilitated using grants. Note: platform supports four grant types OAuth Authentication Code OAuth OAuth defines following grant types reflect different authorization mechanisms: 2-Legged following grant types used 2-Legged OAuth scenario. 3-Legged following grant types used 3-Legged OAuth scenario. access token returned client through browser redirect response resource owner authorization request. grant type suitable clients not support keeping client credentials confidential use authenticating OAuth Authentication Server) such client applications implemented browser using scripting language JavaScript. Reference: Site Administrator Domains Configure OAuth Provider Grant Types 3-Legged 2-Legged Grant Types Back top number legs used describe OAuth request typically refers number parties involved. Legs generally mean access shared client clients. section provides brief description 3-Legged versus 2-Legged OAuth: 3-Legged: 3-Legged OAuth resource owner wants give client access server without sharing credentials username/password). example, user (resource owner) wants give third-party application (client) access Twitter account (server). scenario works follows: 2-Legged: 2-Legged OAuth describes typical client-server scenario without any user involvement. example, local Twitter client application accessing Twitter account. 2-legged OAuth scenario consists first last steps 3-legged OAuth: Reference: Site Administrator Domains Configure OAuth Provider Grant Types 3-Legged 2-Legged Grant Types Back top OAuth tokens generated platform. Site Administrator API Provider defines OAuth Provider, select supported OAuth grant types, whether authorization server supports Refresh Tokens, type Access Token supported. type token issued based configuration OAuth Provider assigned API. Access Token? details Access Token support OAuth OAuth Back top Refresh Tokens credentials used obtain access token: Reference: Site Administrator Domains Configure OAuth Provider Grant Types Issue Refresh Tokens Back top access token issued string represents access authorization issued client. used client access protected resources hosted resource server. Access tokens issued clients authorization server approval resource owner. Each access token includes expiration attribute indicates long token valid. Note: access token timeout typically days seconds). OAuth two types access tokens: part OAuth Provider Domain configuration process, Add Domain Wizard requires select kind token issued (Bearer Mac). OAuth token shared secret issued one-time Reference: Site Administrator Domains Configure OAuth Provider Grant Types Access Token Type Back top grant property custom property resource owner define client application to provide additional information per API whether apply restrictions/constraints grant add additional services scope grant. allows configure app use permissions giving banking app provide transaction details current balance, not allow withdrawal). Grant properties initially defined client application assigned \"tag.\" Site Administrator API Provider reference grant properties OAuth Provider domain specifying Property represents Tag property definition) Property Label description label internal platform). After successfully logged application via login screen associated OAuth Provider API, app authorization screen displays typically includes type authorize option optionally include fields entering any custom grant properties data. enter values grant properties, click Authorize equivalent option). token given application authorization successful message returned. application use token start sending requests. grant properties sent back client application validation. Example (Using Grant Property Apply Restriction): Reference: Site Administrator Domains Configure OAuth Provider Properties Back top user logs application using OAuth Provider configuration, must Resource Owner Authentication page (login screen) custom branded organization. Branding page OAuth Provider domain used configure page. Two branding options offered: Reference: Site Administrator Domains Configure OAuth Provider Branding Back top authentication server application facilitates authentication entity attempts access network. Such entity may human user another server. authentication server reside dedicated computer, Ethernet switch, access point network access server. Authentication Servers set variety ways, depending upon security scheme network serving. basic process authenticating user includes following steps: Back top OAuth defines Authorization, Token, Redirection endpoints. typically URI web server. API Administrators defining OAuth Providers using Add OAuth Wizard (via Site Administration Domains) configuring OAuth specific API using API OAuth Wizard (via API Details) specify Authorization URL, Token Endpoint URL, Redirection URL using OAuth section provides brief overview Authorization Server works respect each endpoint: OAuth Endpoints: Authorization Server Workflow: Back top OAuth supports following endpoints: more information endpoint types, refer OAuth Core Revision specification (http://oauth.net/core/1.0a/) Back top using Policy Manager Network Director Authentication Server specified OAuth configuration, platform provides series client authentication policies used authenticate client's credentials: Back top Operations API act data objects called scopes. Scopes permissions OAuth read access specified operations site another. platform uses grant resources authorization API. authorization fine-grained object level), additional services. Although approach organizing API Scopes varies API API, scopes typically organized follows: Scopes defined hierarchy permissions represent list actions performed. example, credit card service API, may scopes Charge Account, Deposit, Cash Advance, Statement, addition account management services Add Card, Report Fraud Transaction, etc. Scopes generally added hierarchy based logical sequence. example, credit card service API ability deposit, might make Deposit sub-scope under Withdraw. base set scopes initially defined OAuth Provider domain API provider perform additional filtering scope list configuring API OAuth Wizard. scopes map operations defined more APIs OAuth Provider domain serving. API OAuth Wizard accessible via API Details page, includes Scope Mapping section allows specify Scope selected operations, enable API-wide Mapping. Operation-specific Mapping specify Scope URL symbol API-wide Mapping specify Scope URL Root Node. Example (Using Grant Scope Provide Additional Service): following example illustrates walkthrough configuring scopes starting API definition, continuing OAuth Provider, finally attaching OAuth Provider API performing scope mapping: Back top"},{"title":"Open ID Support","url":"/cm/learnmore/publish_api_openid_support.htm","date":null,"type":"document","description":"Configure an API with OpenID.","categories":[],"body":"Configure API OpenID. OpenID open decentralized standard authenticating users. used access control allows users log different services same digital identity services trust authentication body. OpenID simplifies authentication process username password remember. OpenID defines following roles users applications: Back top platform supports version OpenID using OAuth OAuth Back top Site API Administrator set OAuth Provider definitions Site Administration Domains section. create domain each OpenID Provider scenario configurations available selection using API OAuth function APIs part deployment. Back top Relying Party service provider website, application) verify end-user's identifier. OpenID Provider service specializes registering OpenID URLs XRIs. OpenID enables end-user communicate relying party. communication done through exchange identifier URL XRI chosen end-user name end-user's identity). OpenID Provider provides OpenID authentication. relying party discovers OpenID provider URL requesting XRDS document Yadis document), content type application/xrds+xml. document may available target URL always available target XRI. exchange enabled User-agent, program (such browser) used end-user communicate relying party OpenID provider. Back top difference between using OpenID versus OAuth authentication follows: user grants access, application retrieves identifier establishing identity using APIs. both cases access Identity Provider involves authentication Identity Provider. Summary: Back top two ways configure API OpenID Provider. Using OAuth Details function API Details page, configure OAuth API Back top OpenID discovery URL represents location relying party's OpenID endpoints published using Yadis protocol. OpenID providers advertise location endpoints, versions extensions support using Yadis. example, Google discovery URL (https://www.google.com/accounts/o8/id). OpenID provider verifies relying party's realm endpoints making Yadis request openid.realm discover realm's OpenID endpoints. OpenID Provider unable verify realm endpoints, user warned user signing unverified site. Back top \"realm\" pattern represents part URL-space OpenID Authentication request valid. realm designed give end user indication scope authentication request. OpenID providers must present realm requesting end user's approval authentication request. realm must used OpenID providers uniquely identify Relying Parties. example, OpenID providers may use realm allow end user automate approval authentication requests. Back top"},{"title":"API Board","url":"/cm/learnmore/collaborate_api_board.htm","date":null,"type":"document","description":"Discuss APIs and report development cycle issues.","categories":[],"body":"Discuss APIs report development cycle issues. use API Board create discussion specific API. Common discussion topics include questions, suggestions, feature requests, announcements, update information current API. discussion pertains API version selected Current Version drop-down menu Resource Title Bar. create discussion: Back top use API Board submit trouble tickets associated more APIs. Back top following tables illustrate sort controls default, Post, Ticket, Alert views API Board. API Sort Controls View) API Sort Controls (Discussion View) API Sort Controls (Ticket View) API Sort Controls (Alert View) Back top API Board allows delete discussion, ticket, alert post types. delete post comments entered site users deleted. delete posts personally added. Back top"},{"title":"Collaboration","url":"/cm/learnmore/collaborate_collaboration.htm","date":null,"type":"document","description":"Discuss APIs and apps, write reviews, and manage development cycle issues.","categories":[],"body":"Discuss APIs Apps, write reviews, manage development cycle issues. platform includes API Board App Board used promote APIs Apps, manage issues associated development cycle, enhance visibility topics relating specific APIs Apps. API App Board API App resources include Board includes both topic board ticket management system. Back top app level Apps App Board), collaboration made possible inviting individuals join application development team. Team members create private discussions team members pertaining Apps APIs App consuming, create tickets pertaining issues associated application development. API level Apps Board), API developers App Team members post discussions pertaining specific API, create tickets pertaining issues associated API operation. Back top following table illustrates relationship each newsfeed type each Board, shows newsfeed types display Dashboard. Back top Each API includes rating review information submitted platform community members. information available API Details page follows: Back top rate write review API API Details page follows: rate API: write review API: Back top"},{"title":"Tutorial (API Provider)","url":"/cm/learnmore/publish_api_tutorial.htm","date":null,"type":"document","description":"Follow an example scenario for API setup.","categories":[],"body":"API setup process involves adding API platform, uploading API documentation, uploading activating legal agreements, assigning API administrators. After completed API setup process, test API assuming role App Developer creating app requesting access API using API Access Wizard. following quick start provides complete walkthrough API setup process provides jump points more detailed documentation each steps. register API must complete following activities: Launch Add New API Wizard first step process add API. Specify API Information Specify Target URL Environment Configure Advanced Options default, REST protocol selected API, Default Profile (Any Default Operation specified. After specifying Target URL Environment, optionally update existing protocol (REST), change protocol SOAP Advanced Options section. Configure Protocol: configure SOAP: configure REST: Configure Proxy Enable Disable Proxy API Configure Production Endpoint Configure Advanced Options Note: MUST select security policy Simple Header Security) select monitoring policy charts logs. policies display, consult API Provider Site Administrator. security monitoring policies supported? note select monitoring policy, app data not supported APIs Monitoring Anonymous API Access enabled. Anonymous API Access? more information. API supporting OAuth, its best practice use Edit function API Details page select OAuthSecurity policy after configured API support OAuth adding OAuth Provider Site Admin Domains section), configuring API using OAuth Details function API Details page. require users API accept any type end user license agreement developer agreement, must create upload legal agreement content. adding legal agreements step performed after add API using Add New API Wizard legal agreements available review acceptance App Developer requests access API using API Access Wizard. legal agreements must written maintained outside platform using own HTML editor. Review following key topics Content Development Guidelines section started. ready publish legal agreements site, proceed Step Upload Legal Agreements. upload completed legal agreements via File Explorer. points consider: legal agreements initially uploaded, Draft mode not visible site. make visible site available API Access Wizard, must activate click Activate button; assign name description legal agreement, save configuration. activated legal agreement displays API Access Wizard API user review accept part API access approval process. Each API offer API documentation. API documentation must written maintained outside platform using own HTML editor. Review following topics Content Guidelines section. ready upload API documentation site, proceed Step Upload API Documentation. upload API documentation using File Explorer. Review following guidelines: Maintenance API performed API Developer initially added API platform, individuals accept invitations administrators. send invitation individual API administrator privileges: Note: create API, administrator. administrator privilege automatically approved posted Admins Summary page. invite additional administrators using Invite More function. Invitees not members must sign before accepting team invitation. API configured Visibility Private, use Private API Group Access functionality provides method creating common interest groups around specific APIs. Group accounts created API Administrators, member invitations sent managed API Administrator. API Administrators create Private API Groups. Refer Private API Groups section complete instructions creating Private API Group, sending invitations, assigning group leaders. test API creating app, requesting API access API, configuring app consume API. create new app configure consume APIs? complete instructions. Back top"},{"title":"Access APIs","url":"/cm/learnmore/access_apis.htm","date":null,"type":"document","description":"Request API access for your app and manage API access requests.","categories":[],"body":"App Developer, connect App API Sandbox Production environment, test use Request API access app manage API access requests. Connect App API manage Connections. Access API documentation. Learn API versions access specific API version. Learn access API legal agreement."},{"title":"Connections","url":"/cm/learnmore/access_apis_connections.htm","date":null,"type":"document","description":"Connect your app to an API and manage connections.","categories":[],"body":"Connect app API manage connections. Connection relationship subscription between Resources (API, App, Group, Contract, User) system. Connection Resource established, Connection appear appropriate collection point both Resources. Connections established sending Connection Request. Each Connection Request follows specific workflow process series management tools provided control lifecycle Connection. user creates Connection Resource, Resource administrators notified pending request, Connection Connections Collection Resource. Users Connection personal Connections Collection. example, API Access requested more Apps, entry API App appear API Details Apps App Details APIs pages. activities relate specific Users considered Resources), feed entries associated activities added Board Dashboard both API App owner. several types connections: Functions: Access link API Details Approvals: Approved API Admin via APIs Apps page. Functions: Follow App Details Follow API Details App Followers API Followers page displays list users currently following. Use Cancel remove follower. Back top APIs Apps page provides high level summary workflow status apps requested access current API using API Access function. Each listing includes: following table shows App Status App Management Tasks apps requested access current API using API Access function: Back top API Access Request submitted: Back top Existing API Access Requests cannot modified. following rules apply: Back top"},{"title":"Community Manager License Administration","url":"/cm/learnmore/business_administration_licenses.htm","date":null,"type":"document","description":"Business sdministrator license configuration in Community Manager.","categories":[],"body":"Information setting components Licenses feature, adding managing licenses, license terms, scopes, assigning licenses APIs. Note: overview Licenses feature, implementation scenarios examples, Licenses: Feature Overview. license tailored API access package designed Business Admin/API Admin offered app developer. license includes: API visibility controlled license level Scope level. means license feature used not package API purposes monetization, development, any reason, control visibility members designated user groups portions API associated documentation). API access granted license level. Defining License: Business Administrators define license Administration Licenses section using +Add License function. prerequisite defining license must scopes pre-defined (via Administration Scopes section) scopes component license definition. points note defining license: Back top license term building block license. license made more license terms plus, optionally, more legal agreements. defining license, define more license terms. Each license term unique license part license terms not exist separately licenses. license term includes two components: Each license term includes more scopes plus, optionally, quality service limits/policies applied scopes license term. Scopes apply both visibility access; policies apply access. any impact, license term must include least scope. Back top following visibility rules apply license: Back top scope bridge between top level hierarchy, license, bottom level, operation. business level, Business Admin defines scope name basic attributes. API level, API Admin assigns specific operations more scopes API. operations included any license scope assigned app developer never sees scopes; developer offered more licenses offerings defined API. However, scopes building block licenses. Operations assigned scopes; scopes QoS policies assigned license terms; license terms legal agreements assigned licenses. Back top configure scope using Add Scope function Administration Scopes section platform. things note scopes: Note: Scopes configured Business Administrators. Back top modify scope using Edit function Administration Scopes section platform. Note: scope active cannot modify Back top configure license using Add License function Administration Licenses section platform: Note: Licenses configured Business Administrators. Specify license name. license name display API Access Wizard app requesting access API. Specify short description license. app developer sees runtime, shown below. Select Visibility option. following rules apply: documentation downloadable content public API's licenses, scopes, operations designated visibility public, those resources visible users. API itself private scope public, resources visible users invited API. app developer’s visibility scope API version includes private license, developer option choose license requesting API access. license private, users license visibility scope access API documentation/downloadable files mapped license. Note: API admin must make sure documentation appropriately tagged. not, not visible authorized individuals. information tagging API documentation, control visibility API documentation files? Once license defined, API Admin Business Admin apply license API. steps Once those steps complete, license available app developers making API access request. Back top modify license, deactivated, using Edit function Administration License section platform. Note: license active cannot modify Back top deactivate license definition License Definitions screen using Deactivate function. Note following points: Back top delete license License Definitions screen using Delete function: Back top Licenses feature uses policies component building license definition; policies optional component license terms. However, licenses defined outside platform, Policy Manager. soon policy defined Policy Manager, available selection click Add License Administration Licenses) add license term license. create licenses policies not set yet, ahead set licenses without policies, back add policies they're available. Back top modify policy changing policy definition Policy Manager. Back top delete policy, must done Policy Manager, policies set Note delete policy not use. cannot delete policy Back top API Admin Business Admin links license definitions API completing following steps: Once those steps complete, any licenses include those scopes license definition presented app developer selection app developer initiates API access request. Back top"},{"title":"App Monitoring","url":"/cm/learnmore/go_live_app_monitoring.htm","date":null,"type":"document","description":"Monitor app performance and adherence to a defined API access contract.","categories":[],"body":"Monitor app performance adherence defined API access contract. Dashboard Admin Team may issue alerts time time notify platform members issues, such scheduled downtime sessions, may impact application development. monitor alerts Dashboard. Alert notifications posted Dashboard page identified API Name, Title, Environment Sandbox, Production), Status, Priority, Creator Created Date/Timestamp. comment alert directly Dashboard double-click alert entry view manage associated API Board. API Board Alerts viewed API Board. filter posts view alerts, sort Most Popular, Most Marked, Most Recent, comment alert. Performance Charts Usage Logs App performance including service response time, adherence defined API Access Contracts, transaction faults monitored viewed performance charts. Usage logs include request response message data API, App, Contract activity queried viewed. monitor app performance? Back top respond notifications directly Dashboard using sort filters target entry Dashboard, clicking notification display its Board entry. respond notification. list response options posts tickets, Post/Ticket Management. Back top configure account receive email notifications certain platform activities occur. Notifications updated User Settings page. default state notifications enabled. Back top Admin Team may send alert notifications time time API maintenance announcements, API related news, etc. Alert notices posted API Board API alert pertains. Back top Apps Monitor Overview section includes barometer style Dashboard controls allows view throughput, latency, errors messages real-time Sandbox Production environments APIs app connected Statistics calculated APIs app connected operations included APIs. obtain statistics per-second per-minute basis. Dashboard displays statistics last hours. Dashboard controls scale based number messages received time interval selected (sec min). example, messages transmitted API last seconds; scale change Dashboard provides following control types: Usage data further categorized API Usage exported. export API usage data APIs App connected Back top Performance charts included Apps Monitor page. provide mechanism platform members view performance apps APIs apps consuming. Chart data used monitor API usage span time troubleshoot errors API operation. Performance Chart functionality allows view performance sandbox production modes, provides monitoring tracking service response time transaction faults. Charts populated usage \"roll-up\" data gathered during processing web service request response messages. Historic usage performance data queried viewed Usage Logs section. monitor app usage logs? Performance Charts automatically scale axis show appropriate range data shown. choose scale average default) based selected interval set own scaling. Note: Updating chart performance statistics using Refresh based selected Duration Interval represents total time range displayed. Chart Types following performance charts types supported. chart data presented milliseconds Minimum, Maximum, Average Response Times transactions depicted candlestick bar chart axis. hover each time interval view Datapoint Pop-up displays Date, Time, Average, Max, Min Response time transaction selected time interval. Successful transactions faults depicted single chart two Y axes. Successful transactions depicted column chart. vertical bar displays number transactions successfully processed selected response time range. Faults depicted scatter chart. red dot represents number Faults associated specific time interval. Time Range Performance Chart includes navigation control (located bottom chart) allows navigate Timeline based selected Duration Time Interval. Throughput data monitored timeline presented spline chart. After targeted timeline, several ways view additional chart detail. Zoom feature allows view chart data clicking pre-defined interval hour, hour, hour, hour, Data Point Popup allows hover specific datapoint view response data detail including Date, Time, Average, Max, Min. Graph Controls Graph Controls section Performance Chart provides options configuring chart content specific API, APIs), data capture display intervals Duration Interval), navigating zooming chart Timeline. Each chart displays data based currently approved environment Sandbox Production). Back top Apps includes Monitor Logs section provides options filtering viewing usage logs associated API activity occurred either platform production sandbox environments. generate usage log report app: view usage log details App: Usage Log Details (Transport Header) Usage Log Details (Transport Headers Request Message) Usage Log Details (Transport Headers Response Message) Back top monitoring process captures app's usage data APIs connected API Usage section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered last hours. export usage data APIs app connected Back top"},{"title":"Community Manager Getting Started for API Developers","url":"/cm/learnmore/getting_started_for_api_developers.htm","date":null,"type":"document","description":"Start using Community Manager to publish and manage APIs in a matter of minutes.","categories":[],"body":"Learn add API test SOA Software’s Enterprise API Platform API Management Platform brings API providers App developers together.  provides easy access powerful API Management capabilities combined social community allowing developers collaborate build innovative Apps scalable APIs. Let’s Sign account don’t already register locally, use favorite social networking account. Use Plus Menu add new API. first page you’ll provide information system show users view API. information indexed, try use names, tags descriptions match types things think users might search looking API yours. first page ask choose privacy settings API, first add API it’s good idea set private make sure works. always make public later. You’ll describe target API second page. target actual service API built manage, often through proxy use proxy, target API information hidden developers). Defining target simple specifying URL target hosted. may specify both sandbox production URLs, don’t simply use URL(s) describe target, recommend use advanced settings provide bit more information structure API interface give better experience later monitoring documentation, giving more options access control. Describing API interface pretty easy; describe API operations combination verb resource location (uri), optionally choosing additional settings media types. interface definition our sample customer API looks describe SOAP services set additional transport details need page wizard you’ll define API proxy API proxy allow add security, monitoring QoS management amongst things, help most API our platform. API proxy endpoint system present App developers use Apps. control own DNS server, use own CNAME API, not define API domain subordinate brokers. choose add context prefix expect multiple APIs same CNAME, just add more descriptive path. Once you’ve defined sandbox production API proxy endpoints you’re done. choose adjust access approval settings, use advanced tab change proxy interface override default security monitoring policies. you’ve added API. point probably make sure works before further. test API you’ll need create App, connect API send test messages. App Developer getting started guide help. you’ve created tested API. You’re good few more things help developers make most consider things documentation, legal agreements, OAuth, API privacy group management, monitoring, versioning. Back top"},{"title":"Test","url":"/cm/learnmore/test.htm","date":null,"type":"document","description":"Test your app and monitor its performance.","categories":[],"body":"Test app monitor its performance. platform provides following app testing tools: Dev Console Developer Console (Dev Console) web-based REST client allows test different APIs context application. accessible Apps Dev Console page apps add platform. Performance Monitoring Apps Monitor section includes reporting tools monitoring performance app. Based real-time data reported through monitoring tools, troubleshoot potential problems app and/or API. Back top submit API Access Request receive approval Admin Team, given access Sandbox endpoint use testing environment. Common areas test include testing behavior apps API calls verify app behaving expected, testing app simulated transactions data, checking flow information app predictable expected information expected format), check app processing API results correctly, test error handling usability. using testing environment, experiment different scenarios make adjustments needed make sure app works expected API. Back top Examples test clients use send REST requests include: Google rest-client, RESTClient Firefox Add-on, soapUI. Back top Developer Console (Dev Console) web-based REST client allows test different APIs context application. accessible Apps Dev Console page apps add platform. API added platform assigned \"API Consumer Application Security Policy\" used identify (authenticate) application attempting consume API determine authorized not. policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth default policy assigned APIs. policy administrator add additional custom security policies based requirements. application connected API (through API Access Request process), application security credentials you've assigned app (via App Details Security Credentials) work conjunction API security policies. request message sent API must obey security policies assigned API request rejected. Note: App contracted API (API Access Request) includes more licenses, Dev Console display operations App allowed access API based API License configuration. Dev Console allows test different APIs context application verify use API app. example, may Before using Dev Console, must: Dev Console includes API drop-down displays list APIs app currently connected select API drop-down, platform analyzes API configuration security policies assigned API populates fields appropriate information. After Dev Console populated, configure each test case click Run following illustration shows Dev Console Bing VirtualEarth API loaded. Continue test app Dev Console? example walkthrough illustrates test app Dev Console. Back top following procedure provides typical example use Dev Console test app. more examples test app using Dev Console, experiment many popular APIs currently available site. Many APIs include \"Getting Started\" documentation API Documentation section includes custom Dev Console testing procedures illustrating variety different test scenarios. following example illustrates establish request verify response header content. example uses Facebook API. Pre-conditions Procedure following example illustrates establish request Params verify response header content. example uses Facebook API. Pre-conditions Procedure Back top following procedure provides simple example use Dev Console test authorizing app OAuth subsequently sending request. Pre-conditions Procedure Back top"},{"title":"Sample EULA","url":"/cm/learnmore/sample_eula.htm","date":null,"type":"document","description":"View a general example of an end-user license agreement.","categories":[],"body":"API EULA CLICKING \"ACCEPT\" BUTTON, CONSENTING BOUND BECOMING PARTY LICENSE AGREEMENT (\"AGREEMENT\"). NOT UNCONDITIONALLY AGREE TERMS AGREEMENT, CLICK \"CANCEL\" BUTTON DOWNLOAD INSTALLATION PROCESS NOT CONTINUE. TERMS CONSIDERED OFFER, ACCEPTANCE EXPRESSLY LIMITED TERMS. GRANT. Subject terms Agreement, ACME Corp. (\"ACME Corp hereby grants non-sublicensable, non-transferable, royalty-free, nonexclusive license use ACME Corp protocols APIs made available through ACME Corp secure interface ACME Corp API Platform defined below)(collectively, such protocols APIs \"API\") during term Agreement solely purpose accessing data, materials content made available ACME Corp through API \"API Content\") connection use ACME Corp ACME Corp API Platform solution (\"ACME Corp API Platform\"). use API API Content subject compliance any additional terms conditions may set forth ACME Corp connection use ACME Corp API Platform, including, without limitation, ACME Corp applicable Terms Use. RESTRICTIONS. not not authorize, enable permit any third party modify, make derivative works copy use API API Content, except expressly specified Agreement; reverse engineer, disassemble, decompile, otherwise attempt discover any source code underlying ideas algorithms API any portion thereof (except extent applicable law prohibits reverse engineering restrictions); (iii) provide, lend, sublicense, rent, loan, lease, sell, resell, transfer, assign, disclose, otherwise distribute (except expressly permitted herein) API API Content, use API Content any third-party training, commercial time-sharing, service bureau arrangement, otherwise benefit any third party; use API any API Content violation any applicable law; use access API purposes monitoring availability, performance functionality any ACME Corp's products services, any benchmarking competitive purposes. extent API consists software, shall use such software object code form between ACME Corp title, ownership rights, intellectual property rights API API Content, any copies portions thereof, shall remain ACME Corp its suppliers licensors, Agreement does not give any rights except those expressly granted herein. clarity, except expressly set forth herein, Agreement does not include any right use any trademark, service mark, trade name designation ACME Corp any party licensor. understand ACME Corp may modify discontinue offering API and/or any API Content any time. RULES CONDUCT. shall comply following limitations rules respect use API API Content: may limits access, calls, use, may provided ACME Corp. ACME Corp may, its sole discretion, increase limitations case-by-case basis; contact ACME Corp atmosphere@soa.com request such change. ACME Corp believes attempted exceed circumvent limitations, ability use ACME Corp API and/or API Content may temporarily permanently blocked. may not modify, edit revise any API Content delivered through API, except necessary due technical limitations comply requirements any networks, devices, services, media, must otherwise maintain integrity API Content. application, website service displays third party content commingled API Content, must ensure ACME Corp API Platform identified source API Content. may not remove, obscure, alter any copyright, trademark proprietary notice API any API Content, any portion thereof. End users website service (\"Users\") must presented option log ACME Corp API Platform directly, using ACME Corp currently supported login providers. Once User authenticated, application, website service must clearly display User's ACME Corp API Platform identity regardless authentication provider used. may not use any API Content any manner advertising promotional purposes. agree ACME Corp may monitor use ACME Corp API improve ACME Corp API Platform, ensure compliance Agreement. SUPPORT FEEDBACK. Agreement does not entitle any support, upgrades, patches, enhancements, fixes API (collectively, \"Support\"). ACME Corp may, its sole discretion, provide Support services, any such services shall become part API subject Agreement. agree report ACME Corp any errors difficulties discovered characteristic conditions symptoms such errors difficulties, including without limitation, those related interoperability. agree ACME Corp shall free freely use, disclose, reproduce, license, distribute otherwise exploit any such reports any suggestions, improvements modifications) provide ACME Corp relating API and/or API Content, without obligation restriction any kind account intellectual property rights otherwise. INDEMNITY. agree ACME Corp shall liability whatsoever any use any third party make API any API Content. hereby agree indemnify hold harmless ACME Corp any damages, losses, liability, costs, expenses (including reasonable attorney's fees) arising any manner use API and/or API Content. WARRANTY DISCLAIMER. ACME Corp PROVIDES API API CONTENT WITHOUT WARRANTY ANY KIND, EXCEPT BODILY INJURY, ACME Corp HEREBY DISCLAIMS EXPRESS IMPLIED WARRANTIES, INCLUDING WITHOUT LIMITATION WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, PERFORMANCE, ACCURACY, RELIABILITY, NON-INFRINGEMENT. DISCLAIMER WARRANTY CONSTITUTES ESSENTIAL PART AGREEMENT. LIMITATION LIABILITY. UNDER CIRCUMSTANCES UNDER LEGAL THEORY, INCLUDING, WITHOUT LIMITATION, TORT, CONTRACT, STRICT LIABILITY, OTHERWISE, SHALL ACME Corp ITS LICENSORS, SUPPLIERS RESELLERS LIABLE ANY PERSON ANY INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL DAMAGES ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES LOST PROFITS, LOSS GOODWILL, WORK STOPPAGE, ACCURACY RESULTS, COMPUTER FAILURE MALFUNCTION, DAMAGES; LOSS INACCURACY DATA COST PROCUREMENT SUBSTITUTE GOODS, TECHNOLOGY SERVICES; (III) ANY MATTERS BEYOND ITS REASONABLE CONTROL. ACME Corp SHALL NOT LIABLE UNDER AGREEMENT ANY DIRECT DAMAGES EXCESS HUNDRED DOLLARS TERMINATION. may terminate Agreement license granted herein any time destroying removing computers, networks, storage media copies API API Content. ACME Corp may terminate Agreement license granted herein immediately breach any provision Agreement, otherwise engage any activity ACME Corp reasonable determines likely cause liability ACME Corp. ACME Corp may otherwise terminate Agreement upon thirty days advance notice may provided e-mail general notice posted ACME Corp's website). Upon receiving notice termination ACME Corp destroy remove computers, networks, storage media copies API API Content. Sections (last sentence through shall survive termination Agreement. EXPORT CONTROLS. shall comply export laws restrictions regulations Department Commerce, United States Department Treasury Office Foreign Assets Control (\"OFAC\"), United States foreign agency authority, shall not export, allow export re-export API any API Content violation any such restrictions, laws regulations. accessing using API any API Content, agreeing foregoing representing warranting not located under control national resident any restricted country any such list. CONFIDENTIALITY. may given access certain non-public information, software, specifications relating ACME Corp API (\"Confidential Information\"), confidential proprietary ACME Corp. may use Confidential Information necessary exercising rights granted Agreement. may not disclose any Confidential Information any third party without ACME Corp prior written consent. agree protect Confidential Information unauthorized use, access, disclosure same manner use protect own confidential proprietary information similar nature any event less reasonable degree care. GOVERNMENT USE. part agency, department, entity United States Government (\"Government\"), use, duplication, reproduction, release, modification, disclosure transfer API restricted accordance Federal Acquisition Regulations applied civilian agencies Defense Federal Acquisition Regulation Supplement applied military agencies. API \"commercial item,\" \"commercial computer software\" \"commercial computer software documentation.\" accordance such provisions, any use API Government shall governed solely terms Agreement. MISCELLANEOUS. Agreement personal shall not assign transfer Agreement API any third party under any circumstances. Agreement represents complete agreement concerning license between parties supersedes prior agreements representations between may amended writing executed both parties. any provision Agreement held unenforceable any reason, such provision shall reformed extent necessary make enforceable. Agreement shall governed construed under California law such law applies agreements between California residents entered performed California."},{"title":"Business Administration","url":"/cm/learnmore/business_administration.htm","date":null,"type":"document","description":"Information for business administrators.","categories":[],"body":"Business Administrators: learn invite others Business Admins define licenses scopes comprise API Contracts used restrict visibility monitor service levels API operations apps connected API. Manage Business Administrators platform. Configure manage scopes licenses used define API access contracts. Add/manage license definitions assign API."},{"title":"Community Manager API Access","url":"/cm/learnmore/access_apis_api_access.htm","date":null,"type":"document","description":"Learn how to use Community Manager to access APIs","categories":[],"body":"Set API access contracts app manage API access requests. After defined app platform chosen more APIs include functionality use app, next step connect app API requesting API access. Note: Before make call API must add credentials app. app credentials work? details. general points relating API access: homepage API connect click Access link top right corner, API Access Wizard launched. Depending options set specific API you're connecting API Access Wizard include three more following tabs: Depending API set access requested, status API access request following: API Access Request processed, \"API Access Request\" ticket posted App Board related app \"Pending\" status. ticket identified contract request icon. API visible APIs Used section Apps page. pending requests, Access Request posted APIs Apps Connections App APIs Connection pages status Pending Request. Upon approval API Provider, API Access Request status changes Activated. Access API granted API visible APIs Used section Apps Details page. manage API connections? live production environment? Contract Generation Approval: After API access request completed, contract post created request submitted Admin Team approval. points note: Notes: Back top requesting access API offers different licenses, you'll able choose license most suits needs part API Access Wizard. specific licenses offered each API determined API owner. Once you've selected license completed API access request, still modify request while it's pending approval. Once it's approved, can't modify request; you'd cancel contract request new Note: API offers licenses, need specify license before API access. license defines terms API access contract. API Access Wizard allows proceed without specifying license time, request not approved until you've chosen license. occurs, you'll able back modify pending request later. more information modifying pending request, edit license API access request? Back top make API access request, Licenses tab API Access Wizard includes summary licenses available. generally includes brief description each license. more detailed information, check documentation API. documentation include details different licenses available API terms each license. can't locate information need, contact API Administrator. Back top license updated, any pending approved API access requests automatically updated. Back top cancel API access request, follow instructions below. cancel API access request after it's submitted, post comment API Access Request Board item requesting API Administrator cancel request. more information, ask answer questions relating post ticket? Back top app developer change license specific API access request prior request being approved API Administrator. variety different scenarios require changing license. example, API offers different license better suits needs, modify request. Note: update license configuration any time prior API Access Request being approved API Administrator. Once API Access Request approved, Edit Scope function disabled. Back top disconnect app API consuming either Sandbox Production environment using Cancel Suspend functions. Apps, choose app, left pane click APIs. more information, update approved API access requests? Back top delete app version App Details page. Note: delete old version add new version, add new version first. delete version, app deleted. add new version, delete older version. Back top version app, delete entire app deleted. more version, delete app, must delete each version separately. Back top"},{"title":"Glossary of Terms","url":"/cm/learnmore/basics_glossary.htm","date":null,"type":"document","description":"Definitions for some of the terms used on the platform.","categories":[],"body":"Key terminology used platform. back top"},{"title":"Manage User Accounts","url":"/cm/learnmore/site_administration_users.htm","date":null,"type":"document","description":"Administer platform user accounts.","categories":[],"body":"Administer platform user accounts. Site Administration Users page provides user management interface allows Site Administrator manage user accounts platform. Overview: List Users Page Site Administration Users section includes List Users page provides summary listing user account details, statistics platform activity, actions Site Administrator apply user account. account information presented column format. Each column sorted ascending descending order. following table provides description each page element. Back top Site Administrators access Site Administration Users page perform user administration. Back top Site Administrator activates user account, following rules apply: activate user account: Back top Site Administrator disables user account, following rules apply: disable user account: Back top user account deleted, account removed platform along associated apps, APIs, posts artifacts. delete user account: Back top Existing users received invitations become platform administrators assigned status invited. After user accepted invitation, status changes registered. Back top Search Users text box allows perform full-text search target user accounts platform. Searchable entities include any data displays List Users page columns. perform search: Back top"},{"title":"Publish API","url":"/cm/learnmore/publish_api.htm","date":null,"type":"document","description":"Information about publishing your API.","categories":[],"body":"Publish API, integrate OAuth OpenID support, add legal agreements API documentation, test API, manage API admin team, perform administrative tasks. Add set API—a tutorial. Publish API, configure license scope determine licenses offered API, perform maintenance activities. Configure API OAuth. Configure API OpenID. Add maintain API documentation restrict visibility documentation files. Add maintain API legal agreements. Configure manage API visibility options. Invite others API Admins API manage API Admin group. Configure email notifications monitor API performance. Back top"},{"title":"Manage Site Admin Team","url":"/cm/learnmore/site_administration_site_admins.htm","date":null,"type":"document","description":"Manage the team of site administrators for the platform.","categories":[],"body":"Manage team site administrators platform. Site Administration quick filter launches Site Administration section. Authorized site administrators send invitations others whom invite site admins. site admins same administration privileges platform deployment configure authentication domains customized assigned APIs part platform deployment. Invite Administrators Invite More function allows send invitations individuals grant administration privileges API. View Administrators administrator invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Site Admins Summary. Manage Administrators Site Administrators remove Administrator listing. Back top Back top Site Administration Site Admins page includes administrator invitation function allows send invitations individuals grant administration privileges current platform deployment. Back top already received Site Administrator invitation not currently platform member, must sign platform using email address invitation issued order accept invitation. Currently platform members invited Site Administrators. Basics more information. Back top receive invitation via email Site Administrator platform deployment accept reject invitation. Back top Once invitation sent individual Site Administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove Site Administrator Site Admins page clicking Remove. remove Site Administrator assigned platform deployment? Back top Any Site Administrator remove administrators platform deployment. Back top"},{"title":"Support","url":"/cm/learnmore/basics_support.htm","date":null,"type":"document","description":"Platform browser support and support contact information.","categories":[],"body":"Platform browser support support contact information. platform supports following web browsers: Note: currently using unsupported browser, recommended upgrade browser supported versions ensure optimum performance platform. back top following approaches used resolve technical questions: back top"},{"title":"Sign Up","url":"/cm/learnmore/basics_signup.htm","date":null,"type":"document","description":"Sign up for a platform account and learn about account privileges.","categories":[],"body":"Sign platform account learn account privileges. need sign account view our API documentation discussion boards. view trouble tickets posted members our community. However, must sign account access our APIs development production purposes. account, establish project, invite others collaborate test application using our Dev Console, receive permission commercially publish app integrated our APIs. back top Sign process new account involves specifying standard user profile account information. sign using login favorite social media providers Facebook, Google). sign using social media provider back top sign using favorite social media provider login perform initial sign performing future logins. Supported social media providers include Facebook Google. back top signed account privileges create application utilize full spectrum development, application management, collaboration features. back top top navigation includes Login Sign-up section used log site. back top platform Terms Conditions reviewed agreed initially signed platform change between logins, required review agree new copy log Back top"},{"title":"Domains","url":"/cm/learnmore/site_administration_domains.htm","date":null,"type":"document","description":"Site configuration tasks&#8212;Configure authentication domains for APIs defined in the platform.","categories":[],"body":"Configure authentication domains APIs defined platform. platform provides series add-on features provide authentication support APIs. platform currently supports OAuth OpenID Provider types. Here's provider type configuration process works: Back top platform domain types used log platform, configured OAuth Provider. After each domain installed entries show platform follows: following table provides list supported domain types, brief description, installation method: login domain type allows users log using default platform login page using Email Address Password credentials. Note: Platform Login (Default) system generated, cannot deleted, not display Resource Owner Authentication Domain drop-down menu OAuth Provider domain. Installation Method: default platform login automatically added enabled part platform default installation. option disabled another login approach used deselecting \"Enable\" checkbox login line item Site Administrator Config Logins section. Documentation: Site Admin Config Logins sections Community Manager online help more information. Facebook Connector domain allows log platform using Facebook credentials. Installation Method: Facebook Connector domain option installed default) Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select Facebook Connector domain type. launches Add Connector Domain Wizard assign App App Secret, enable domain Site Administrator Config Logins section. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. SOA Software Community Manager OAuth Provider feature SOA Software Community Manager add-on OAuth Provider. domain type allows select Resource Owner Authentication Domain login process), configure grant types, access tokens, grant properties, branding. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs OAuth Provider domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select OAuth Provider domain type configure domain. domain available Edit OAuth Details page API Details page customize OAuth configuration API. Note: domain type adds OAuth Provider domain option \"Select Domain Type\" menu not posted Login option Site Administration Config Logins section. Documentation: Site Admin Domains section platform online help more information. SOA Software Community Manager OpenID Provider feature SOA Software Community Manager add-on OpenID Provider. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs OpenID Relying Party domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select OpenID Relying Party domain type configure domain, enable domain login option Site Administrator Config Logins section, select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. LDAP domain allows log platform using LDAP domain defined Policy Manager \"Management Console.\" Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Refer Add Identity System (Active Directory) topic Policy Manager Online Help instructions add LDAP domain. SiteMinder domain allows log platform using SiteMinder domain defined Policy Manager \"Management Console.\" Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Add SiteMinder Domain—See Integrating SiteMinder Policy Manager Guide available via SOA Software Support Site (support.soa.com Downloads PolicyManager PM61_CASiteMinder_Integration.pdf) instructions setup SiteMinder install identity system (domain) Policy Manager. Configure SiteMinder Domain Site Admin Domains Site Admin Config Logins sections Community Manager online help instructions use SiteMinder domain OAuth Provider domain definition, enable SiteMinder login. Back top Access permissions OpenID established configuring domain represents login resource. OpenID, use OpenID Relying Party domain. domain installed part SOA Software Community Manager OpenID Provider feature SOA Software Administration Console available via Add Domain feature via Site Administration Domains. After configure OpenID login resource, entries show platform follows: configure OpenID login resource: Back top After defining access permissions domain, next step configure more OAuth Provider domains represent OAuth authentication use case types APIs platform deployment support. configure OAuth Provider domain: Select domain \"Resource Owner Authentication Domain\" drop-down menu. not previously defined, configure return complete OAuth Provider domain definition. Note: select Client Credentials grant type Resource Owner Authentication Domain not required. Client Credentials grant type does not require Resource Owner. Back top OAuth Details function API Details page includes pre-defined \"Third Party Provider\" domain allows configure grant OAuth versions resource mapping. configure API OAuth Provider? more information. Back top modify domain: Back top delete domain: Back top platform provides support logging platform using connector domain Facebook). configure connector domain: Back top platform provides support logging platform using Facebook using Facebook Connector domain. configure Facebook login: Back top platform provides support logging platform using Google using Open Relying Party domain. configure Google login: Back top platform provides support logging platform using SiteMinder domain. configure SiteMinder login: Back top platform provides support logging platform using LDAP domain. configure LDAP login: Back top"},{"title":"App Creation","url":"/cm/learnmore/create_app_creation.htm","date":null,"type":"document","description":"Create an app and manage visibility.","categories":[],"body":"Create app manage visibility. After create app, several tasks must performed app consume API. After targeting APIs add, next step submit API Access Request license API gain access app sandbox production environment. task performed using API Access Wizard accessible clicking Access link APIs Details page selected API. select APIs license. APIs require license agreement acceptance, must review agree terms more license agreements before access granted. Policies section allows select more SLA policies used monitoring API performance quota management. Access sandbox production environments most cases, automatically approved. Sandbox Production endpoints available visible Apps APIs page. API app connected uses OAuth Authentication Code Resource Owner Credentials grant, OAuth Authentication Code Implicit grant, must specify Redirect URL Application Type, configure authorization screen. Back top add app: Back top create app using Create New App, control whether visibility app Public Private via \"Visibility\" option. change app visibility based requirements using Edit function App Details page. Back top"},{"title":"App Security","url":"/cm/learnmore/create_app_security.htm","date":null,"type":"document","description":"Learn how to configure app credentials.","categories":[],"body":"Learn configure app credentials. Authentication gives app ability know identity application user, interact API data. Before configuring security app, must first identity protocol required API performing authentication authorization. Select App Protocol Determine Credential Approach: Selection protocol app based protocol supported API plain text App signed header shared secret, OAuth Each API pre-configured follows: credential approach configured app must match protocol supported API defined policies. Review API documentation verify supported protocols. Configure Security Credentials: authenticate app placing API calls, must include App either Shared Secret Public Key PKI-based authentication form CER CSR). App Details Security: Security section App Details page includes Show Keys function displays Shared Secret Public Key options generating credentials required authenticate app sandbox production environments. assistance determining security credentials method best suits needs, review API documentation verify supported protocols. app initially created using Add New App function, shared secret generated default viewed App Details Security section clicking Show Keys selecting Click View. use Regenerate Key option issue new shared secret. use PKI-based encryption, use Public Key option. Import Credentials function allows upload Certificate Signing Request (CSR) public key embedded Certificate (CER). OAuth using OAuth Authentication Code Resource Owner Credentials grant, OAuth Authentication Code Implicit grant, must specify Redirect URL Application Type, configure authorization screen. task performed addition configuring security credentials optional based requirements. Back top initially create app using Add New App function, shared secret automatically generated. regenerate view shared secret Security Shared Secret section Apps App Details selecting Show Keys Regenerate Key. Back top Before add app platform, review following rules generating App Shared Secret determine best approach adding managing apps. App Shared Secret: Back top app defined another system includes App Shared Secret transfer platform based following scenarios: Back top verify version OAuth API supports, consult supporting documentation API. refer app credentials work? configure OAuth credentials? continue process. Back top API app connected uses OAuth Authentication Code Resource Owner Credentials grant types), OAuth Authentication Code Implicit grant types), need Back top configure OAuth Resource URL Application Type: Back top API app connected uses OAuth \"Authentication Code\" grant you've configured Redirect URL Application Type using configure OAuth credentials? procedure, next step configure Resource Owner OAuth Authorization page. screen allows app developers provide different details branding app users customers. configure Resource Owner OAuth Authorization page app: Back top Back top any reason becomes necessary reissue shared secret, use Regenerate Key function. regenerate shared secret: Back top view current shared secret: Back top use Public Key option, must import existing Certificate (CER) Certificate Signing Request (CSR). Usage either public key option based requirements. Tenant configured internal Certificate Authority, configured set Trusted Certificates apart internal Certificate Authority. following rules apply: Prerequisites: Based established public key strategy platform least following Public Key options must established Tenant before successfully import Certificate Signing Request (CSR) Certificate (CER). Configuring internal Platform Certificate Authority post installation task performed Site Administrator. most cases, formal VeriSign) aligns security policy requirements uploaded, addition any Trusted Certificates may required. receive error message indicating Certificate Certificate Signing Request (CSR) attempting import not trusted Certificate Authority does not exist. Import Certificate Signing Request (CSR): Certificates (CER): Back top Certificate Signing Request (CSR) file includes encoded information generated web server. sent applicant Certificate Authority request digital certificate. CSR contains information identifying applicant public key chosen applicant. Before creating CSR, applicant first generates key pair, keeping private key secret. corresponding private key not included CSR, used digitally sign entire request. CSR file typically .CSR extension extensions based source application generated file. Tenant supports PEM BASE64 encoded PKCS10) Certificate Signing Requests. platform, CSR used send request Certificate Authority stored Tenant request Certificate. Tenant must configured Certificate Authority prior importing CSR. task performed Site Administrator. Back top Refer \"Certificate Authority\" wiki more information up-to-date list popular Certificate Authority Providers. Back top Trusted Certificate Authority third party identity qualified specified level trust. Trusted Certificates used identity being validated entity claims Certificates imported Tenant must issued Trusted Authority. Trusted Certificates must configured prior importing certificates platform apps. task performed Site Administrator. Back top platform Certificate Authority Trusted Certificate files stored Tenant. Tenant distinct developer portal community logical separated any communities may hosted same product instance. Tenant managed Site Administrator. Back top variety different tools use generate Certificate Signing Request (CSR). example, Keytool OpenSSL popular CSR generation tools. context platform process follows: Back top import certificate signing request (CSR): import certificate (CER): Back top After Certificate Signing Request imported certificate generated, download app certificate. download app certificate: Back top becomes necessary change app security credentials certificate nearing expiration date, private key becomes compromised, etc.), upload new Certificate Signing Request regenerate certificate app. accomplished removing current set credentials. use Import Credentials function import Certificate Signing Request (CSR). Back top"},{"title":"API Documentation","url":"/cm/learnmore/access_apis_documentation.htm","date":null,"type":"document","description":"Access API documentation.","categories":[],"body":"Access API documentation. Each API includes set reference documentation available via APIs API Name Documents tab. specifics terms documentation offered vary API API. cases, certain APIs, portions restricted visibility. those cases, need invited visibility those properties associated documentation. However, many cases, API documentation publicly shared. locate using Search feature platform. typical API documentation set might include following sections: Back top Back top"},{"title":"Collaborate","url":"/cm/learnmore/collaborate.htm","date":null,"type":"document","description":"Invite developers to your app team, discuss topics related to API development, and report issues.","categories":[],"body":"Invite developers app team, discuss topics related API development, report issues. Create manage app development team. Discuss APIs apps, write reviews, manage development cycle issues. Discuss app projects report development cycle issues. Discuss APIs report development cycle issues. Create manage API group. Respond manage posts tickets."},{"title":"API Groups","url":"/cm/learnmore/collaborate_groups.htm","date":null,"type":"document","description":"Create and manage API groups.","categories":[],"body":"Create manage API groups. Group functionality provides method creating common interest groups around specific APIs. creator group Group Administrator. Member invitations sent managed group Administrator designated group leaders. Group Administrators designated group leaders create Groups. After group established members accepted invitations, members promoted leader status. leader indicated group member account orange Leader status. Leaders send additional invitations manage memberships specific group. Group members collaborate group Board visible group members. Group members obtain view-only summary members group Group Details page. Group members provide feedback group providing Peer Rating uses star rating system record positive feedback, Peer Review write post review group. platform supports both Independent Private API Groups. types groups does platform support? Independent Private API Groups different access methods functionality essentially same (except noted). access Independent Private API Groups? access methods. Back top platform supports following group types: Back top APIs section includes Groups page allows API Administrators create Private API Groups send invitations developers. Group members promoted Leader status send invitations manage memberships specific group. Create Group API Administrators create group current API send invitations developers join group. first time select APIs Visibility Groups, Groups page displays API does not any groups\" message along Create Group button. After creating group, select Invite More send invitations developers join API group. Edit Group Info Edit Group Info function allows edit Group Name, Description, Federation Member. Invite More Invite More function allows API Administrators send invitations individuals part Private API Group. Note invitees must platform members except invitation. After sending invitation, invitation email issued. recipient already platform member), log platform accept invitation via Dashboard. recipient not currently platform member, must sign log accept invitation via Dashboard. Manage After sending first group invitation: Group Board Group Board provides collaboration tool group members discuss key topics exchange ideas. Group Board available through independent group interface Add New Group Plus menu). Followers Followers page allows users subscribe groups interested clicking Follow button. Subscribing group allows users receive news updates relating group personal Dashboard. Back top Create Group: access Independent Group: access Private API Group: Back top add group: Back top Group Roles: group function supports following roles, functions, visibility. Back top API Administrators make group members administrators assigning Leader role. Leader send manage personal invitees. group member initially added Member Leader identifier white. Back top Invite Members: assigned Leader role Admin Team, use Invite function send invitations developers individuals invite group. not currently assigned Leader role, contact Admin Team sending email form provided Support page. After Group Administrator adds group using Create Group function APIs Visibility Groups Groups Members, Invite function displays next Group Name Members page. Group Administrators Leaders use Invite function invite individuals group. Back top invite individuals not platform members Independent Private API groups, non-members must sign before accept group request via personal Dashboard page. Back top approve Independent Private API invitation approving notification personal Dashboard. Back top decline group invitation selecting Decline option notification personal Dashboard. Back top assigned Leader role Group Administrator, use Invite function send invitations developers. not currently assigned Leader role, request role change submitting trouble ticket Group Administrator via Groups Board API Board. Back top Group Maintenance: Back top API Administrators remove group member. Leaders remove group members personally invited. Back top certain situations may become necessary resend group invitation. Back top delete group Groups APIs Visibility Groups section follows: Back top Each Group includes rating review information submitted platform community members. information available Group Details page follows: Back top rate write review group Group Details page follows: Back top you've added group review change content, edit review Group Details page follows: edit group review: Back top delete group review Group Details page follows: delete group review: Back top"},{"title":"Production Approval","url":"/cm/learnmore/go_live_production_approval.htm","date":null,"type":"document","description":"Request production access to an API and manage API access contracts in the production environment.","categories":[],"body":"Request production access API manage API access contracts production environment. After determined tested app ready production, must request access production endpoint API. accomplished using API Access Wizard. Contract Generation Approval: After API Access Request completed, contract post created request submitted Admin Team approval. Notes: Back top After API Access Request app \"Approved\" \"Activated\" final step process Live. accomplished using Switch Production function Apps APIs Connections page. Back top any reason deactivate live production environment, via \"API access request <App Name> (App Version) <API Name> production environment\" request located Dashboard App Board. Back top temporarily suspend live app, using suspend function. resume live state using Resume function. Back top previously suspended app's access API production environment, resume using Resume function. Back top"},{"title":"App Board","url":"/cm/learnmore/collaborate_app_board.htm","date":null,"type":"document","description":"Discuss app projects and report development cycle issues.","categories":[],"body":"Discuss App projects report development cycle issues. use App Board create discussion application project team members. team members access Board. Back top use App Board API Board submit trouble tickets directly Admin Team. Please note: submitted tickets visible API Board App Board. Back top following tables illustrate sort controls default, Post, Ticket views App Board. App Sort Controls View) App Sort Controls (Discussion View) App Sort Controls (Ticket View) Back top App Board allows delete discussion ticket post types. delete post comments entered site users deleted. delete posts personally added. Back top"},{"title":"App Team Management","url":"/cm/learnmore/collaborate_team_management.htm","date":null,"type":"document","description":"Create and manage an app development team.","categories":[],"body":"Create manage app development team. Apps includes Team page allows create application development team sending invitations members. Team members viewed managed summary listing. Invite Team Members Invite More function allows send invitations individuals part application development team. View Team Members team member invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Team Summary. Manage Team Members Team members remove Team Member listing. Back top Apps Team page includes team member invitation function allows send invitations individuals part application development team. Note: create app, first team member. invite additional team members using Invite More function. Invitees not members must sign platform before accepting team invitation. Back top Currently members invited development team. Basics more information. Back top receive invitation via email join platform development team accept reject invitation. Back top Any team member remove team members development team. Back top Once team invitation sent, invitation itself cannot revoked. member choose accept decline invitation. choose accept invitation, remove team member development team Apps Team page clicking Remove. remove team member development team? Back top"},{"title":"Content Development Guidelines","url":"/cm/learnmore/content_guidelines.htm","date":null,"type":"document","description":"Guidelines that API providers can use to manage API content such as API documentation and legal agreements.","categories":[],"body":"section provides guidelines API providers use manage API content such API documentation legal agreements. After adding API, add documentation API API Documents section using more following methods: Back top Yes, HTML files must saved UNIX code format. requirement ensure optimum compatibility across operating systems. method use verify files correct format select View Document Properties TextPad. \"Code set\" UTF-8, \"File type\" UNIX, code format file saved correct. Note must add following meta data tag <head> tag indicate file code set UTF-8: Back top File Explorer simple file management tool allows upload documentation source files various parts platform File Explorer includes following functionality: Back top Swagger Wordnic (http://swagger.wordnik.com/) specification complete framework implementation describing, producing, consuming, visualizing RESTful web services. produces dynamically generated documentation includes methods, parameters models. platform includes implementation Swagger works conjunction Add New API Wizard. define API, structure dynamically generated added predefined Swagger template. documentation-ready structure available API Documents section add title, description, implementation notes, parameter information. documentation content stored resources.swg file. Using File Explorer add file table contents make default display document click API Documents menu. add Swagger document URL HTML documentation. Back top API documentation legal content platform uploaded managed Site Administrators, API Providers, designated Administrators API. Back top platform, editing API Legal Agreement content limited Development document content must performed outside platform, exception Swagger API documentation entered directly templates API Documents section. Back top platform supports content pages written HTML. must create API legal documents external HTML authoring tool upload documentation using File Explorer. Back top Swagger documentation includes series page controls displaying navigating through method documentation follows: Swagger Controls: Editing Options: add edit following areas Swagger documentation. First navigate API Documents page includes Swagger perform desired step. Back top Back top upload document artifact API Documents section using File Manager, toc.apiversion file created (format: toc.apiversionXXXXX.<productname>.json). Information document upload, toc display name, default toc file stored file. Using file editor, manually update \"defaultFile\":\"<filename>.html\" parameter file set default HTML document. currently HTML document loaded switch back Swagger delete parameter reset default document back Swagger. Back top Back top Back top Back top Back top Back top Following guidelines below help ensure fileset consistent structure, clean, well-formed HTML look correct viewed under varying circumstances such different browsers search results. Bear mind points: Back top might find default styles platform work fine need. need custom styles, create upload CSS file. add edit CSS file same way HTML file. Note: custom CSS file documentation, make sure it’s stored \\userdocs\\style subdirectory. create directory via File Explorer doesn’t already exist. CSS filename must not include illegal characters, must extension .CSS stored /css subfolder. Click download sample API documentation style sheet. styles part document.css style sheet located userdocs\\style directory. develop API documentation using styles, choose update styles, make sure update document.css file before uploading documentation site. following paths illustrate location \\style directory relative \\learnmore directory. current document.css file stored. Based requirements choose store \\css different location same directory files \\css folder \\Documents directory). Back top SOA Software provides pre-defined Swagger style sheet internal product applied dynamically generated Swagger documentation structures. Back top Legal agreements use platform default style sheets. Active legal agreements display API Access Wizard user requests access API. ensure legal agreement displays properly wizard, download legal agreement sample file use template structure legal agreement HTML. Click download sample legal agreement file. Back top API documentation content defined using standard HTML CSS files. choosing styles, make sure you’re aware any corporate team guidelines, consistent across file set users same styles typographical conventions read content. Back top formatted HTML content, CSS files control visual display, upload types content link HTML files. example, use following: extra property after filename, target=\"_blank\", tells browser open file new window instead displaying content current window platform Back top organize API legal documentation files: Back top upload zip file containers documentation using File Explorer. upload zip file using File Explorer: Back top Yes. already website established API and/or documentation, upload file includes introductory text includes link website. example: Example HTML: Note: linking external site, include target=”_blank” HTML file open external site new window. upload reference file upload API documentation? Back top API Documents section includes interface allows add maintain API documentation. upload documentation using File Explorer. upload documentation file file basis, upload zip file. upload API content via File Explorer: Back top Yes, upload existing file set platform via File Explorer. Make sure relative file locations platform same source files don’t break any links between files any exist). content needs organized required document structure. organize API legal agreement documentation files? Note: must include head body tags reference css style sheets used API documentation. Back top documentation searchable platform, include <title> tag example, <title>Doc Name</title>) top HTML file, <head> tag. example below shows structure sequence. Back top APIs Legal section provides functionality allows upload manage legal agreements pertain each API. API may require more legal agreements. Legal agreements approved status display API Access function. user must accept terms legal agreements gain access API functionality. upload legal agreement file via File Explorer: Back top add change content, it’s good idea preview browser make sure looks correct symbol characters displaying. example, more space separating word, additional space may displayed symbol character browsers. save content, it’s displayed own browser window. However, another user reading API documentation might use different browser. Since differences between browser defaults might affect visual display, it’s good idea check content looks most popular browsers. Simply copy paste URL. Although need signed edit content, login required viewing most content pages. It’s good idea make sure content changes look Internet Explorer, Firefox, Google Chrome. Back top update API legal agreement documentation you've added platform must upload new file using File Explorer. upload API documentation? upload legal agreements? details. Back top"},{"title":"SOA Software Community Manager Documents","url":"/go_live.html","date":null,"type":"document","description":"The document template for CM","categories":[],"body":"Request production access API, live, monitor app's use API. Request manage production access API. Monitor app performance adherence defined API access contract."},{"title":"Installing JBoss Agent 6.1","url":"/ag/agent_jboss_install_guide_v6.1.html","date":null,"type":"pdf","description":"Install and configure Policy Manager 6.1 JBoss Agent on Windows, and all supported UNIX platforms.","categories":[],"body":""},{"title":"Configuring SOAP to REST","url":"/ag/configuring_soap_to_rest.html","date":null,"type":"pdf","description":"Configure SOAP to REST mediation using Policy Manager version 6.x.","categories":[],"body":""},{"title":"Using the Metrics Policy in Policy Manager 7.x","url":"/ag/policies/using_the_metrics_policy.htm","date":null,"type":"document","description":"Learn how to collect rollup data on specific services/operations using a Metrics Policy.","categories":[],"body":"Learn collect rollup data specific services/operations using Metrics Policy. Metrics Policy Operational policy allows collect roll-up data selected services/operations policy attached Metrics Policy useful works: Back top Let's take quick walkthrough Metrics Policy configuration process started. After saved policy attach web service operation capture roll-up data After attached Metrics Policy service operation, send request service Services Monitoring section view results Logs, Real Time Charts, Historical Charts. Refer Policy Manager Online Help Help button) more information using monitoring functions. Back top"},{"title":"Using the Cross Site Scripting Detection Policy in Policy Manager 7.x","url":"/ag/policies/using_the_cross_site_scripting_policy.htm","date":null,"type":"document","description":"Learn how configure a tag white list to protect your web service from being exploited by cross site scripting.","categories":[],"body":"Learn configure tag white list protect web service being exploited cross site scripting. Cross Site Scripting Detection Policy Operational policy allows block potentially malicous HTML tags request message body using black white tag list approach. Say example web service includes anchor tag. attach default Cross Site Scripting Detection Policy REST service send request message Network Director container hosting service, receive Forbidden\" error. tag not defined policie's \"white list.\" Back top default policy state includes black list following tags: Back top Let's take quick walkthrough Cross Site Scripting Detection Policy configuration process started. Modify Cross Site Scripting Detection policy Policy Details page initial policy look use default policy (without defining white list) tags black list default policy (listed above) forbidden Network Director passes request message downstream service Forbidden error raised. next step define tag white list. represent tags comprise HTML request message body designated ones potentially attacked. White list tags allowed Network Director passes request message downstream service. following options available: After saved policy attach web service attach policy Organization level policy active services defined orgnization. Back top"},{"title":"Managing Policies with Policy Manager 7.x","url":"/ag/policies/policy_management.htm","date":null,"type":"document","description":"Description of policy editor functions and tools for managing policy definitions.","categories":[],"body":"Description functions tools managing policy definitions. following policy management functions apply policy definitions Policies folder. available Policy Summary drop-down menu via Actions Portlet Policies Details page. back top Used add policy definitions used manage web service endpoints. Select Add Policy main Policies Summary page, select policy type, assign name description. Add Policy Wizard creates policy instance modify Policy Details page. back top Policies defined policies object Policies Folder) assigned organization, six different elements service. Each Policy assignment based business requirements defined policies supported each policy category Compliance, Operational, QoS) addition custom defined policies. Policy Attachments portlet Policy Details page attach policy select Manage. Select policy tree save configuration. back top Modify Policy Information Allows change name description policy. back top Allows move current policy configuration new \"Organization.\" back top Allows replicate policy definition assign new \"Policy Name\" \"Policy Key.\" Using function configure elements represent core functionality policy, replicate new policy, perform additional customization copy. back top Deletes selected policy definition. order delete policy, cannot \"Referenced\" attached more objects). number policy references indicated column Policies Summary page viewed selecting \"View Policy References.\" delete policy, must remove policy attachment via Policy Attachments Portlet. back top Provides method exporting policy definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Displays list objects current policy referencing. back top"},{"title":"Installing Agent for WCF 6.0 on Microsoft .NET","url":"/ag/wcf_install_guide.html","date":null,"type":"pdf","description":"Installing Agent for WCF 6.0 on Microsoft .NET 3.5 and 4.0 platforms.","categories":[],"body":""},{"title":"API Gateway Appliance Install Guide 6.2","url":"/ag/api_gateway_appliance_install_guide_v6.2.html","date":null,"type":"pdf","description":"Install and configure the SOA Software API Gateway 6.2 virtual appliance (Policy Manager / Community Manager) using an automated approach.","categories":[],"body":""},{"title":null,"url":"/ag/sola_install_guide_6.1.html","date":null,"type":"document","description":null,"categories":[],"body":"never display"},{"title":"SOA Software API Gateway","url":"/ag/index.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"online document repository API Gateway suite products, including Policy Manager, Network Director, Policy Manager DataPower, Agents Delegates. constantly adding site, please check back frequently updates."},{"title":"Installing tc Server Agent 6.1","url":"/ag/agent_tcserver_install_guide_v61.html","date":null,"type":"pdf","description":"Install and configure Policy Manager 6.1 tc Server Agent on Windows, and all supported UNIX platforms.","categories":[],"body":""},{"title":"Learning about the API Gateway","url":"/ag/learning.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"API Gateway Reference","url":"/ag/reference.html","date":null,"type":"document","description":"API Gateway Reference Documents","categories":[],"body":"documents pages reference section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"Getting Started with the API Gateway","url":"/ag/getting-started.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"Refer our Quick Start procedures App Developer API Provider running quickly. need become member, refer Basics section."},{"title":"Policy Manager 7.x Scripting API","url":"/ag/scripting_api.html","date":null,"type":"document","description":"Provides a series of interfaces and classes you can use to build process related scripts.","categories":[],"body":"never display"},{"title":"Getting Started with Processes using Policy Manager 7.x","url":"/ag/processes/getting_started_with_processes.htm","date":null,"type":"document","description":"Learn about common vs. operation-specific processes, documentation, management tools, and use cases using Policy Manager 7.x.","categories":[],"body":"Learn common operation-specific processes, documentation, management tools, use cases. SOA Software Policy Manager allows define web service orchestration concepts using XML-based graphical editor called Process Palette. define sequence messages flow through Policy Manager each virtual service operation configure variety different \"Activities\" achieving results required each operation. Let's take quick walkthrough process types tools available started. several approaches used configure process definitions. Common processes defined Processes folder referenced reused) virtual service operation process definition adding Process Activity. reusable approach save time make process development cycle more efficient. Figure. Create Common Processes Processes Folder Figure. Reference Process using Process Activity Service Operation Process Definition. Similar \"Common\" processes approach described above, use same approach scripts. Policy Manager Scripts Folder define series utility scripts performing commonly used tasks. accomplished using Add Script function. virtual service operation process definition, add Script Activity, import pre-defined script, add script reference function perform. example, may requirement validate data part process created reusable script TestScript) includes function validating data (validateData). process definition, import \"TestScript\" reference function script source illustrated below. Figure. Example Referencing Script Function Back top Process Function Reference includes tour Process Editor descriptions usage examples each Activity type. Familiarize yourself functionality, techniques, rules using each Activity ensure smooth process building process definitions. Back top Policy Manager Scripting API located \\sm70\\docs\\scriptDocs folder Policy Manager Release Folder provides series interfaces classes use build process related scripts. Back top Managing Processes topic includes overview tools Process Palette, functions apply common process definitions Processes folder. Back top addition usage examples covered Process Function Reference, we've created additional set use cases cover common process scenarios. Back top you've familiarized yourself high-level approach building processes, know reference materials tools available, start building processes. Back top"},{"title":"Process Reference for Policy Manager 7.x","url":"/ag/processes/process_reference.htm","date":null,"type":"document","description":"Learn to create a process and use process activities in Policy Manager 7.x.","categories":[],"body":"Learn create process use process activities. process ordered graph activities performed container supports virtualization capability, Network Director. logic performed virtual service operation defined process. message received container, once virtual service operation identified, its process executed. dictated activities process, down-stream services may invoked. result process execution, response original message generated. example process default process virtual service operation. process message received using Receive Activity, Invoke Activity executed calls virtualized service operation, Reply responds response Invoke Activity. Processes more complex perform functions transformation content based routing. author process assemble activities achieve results Policy Manager allows creation processes two different contexts, implementation virtual service operation (Services Operation Process Services Operation Fault section), standalone process (Processes Folder) invoked another process achieve reusability. contexts, graphical editor provided construct process. Back top Process Editor allows create process graphical drag-and-drop environment. process ordered graph activities. process begins receiving message Receive Activity) process ends message returned Reply Activity) caller. Figure. Process Editor Activity Palette activities available called process available Activity Palette located upper left hand side editor graph. activity icon palette selected dragged process editor graph. Activities called order linked together directional connectors. link two activities select middle activity executed first. circle error appear. Figure. Starting Link Between Activities Drag mouse center activity executed next release. directional connector drawn linking two activities. Figure. Completing Link Between Activities series activities linked together called Sequence. sequence terminated either Branch Activity below) Reply Activity below). set linked activities Receive Activity Reply Activity may contain several sequences separated Branch Activities. entire set linked activities called Flow. Functions performed entire process available toolbar located lower left hand side editor graph. Figure. Process Editor Toolbar toolbar functions such saving process, editing variables used process Variable Editor), refreshing page, undoing last action. Back top Next Process Editor tab tab labeled Fault. tab define sequence activities executed fault encountered any point main process. main process once fault encountered, process execution immediately stops activity sequence Fault tab executed. Figure. Fault Sequence Editor Fault Sequence Editor works exactly main Process Editor except sequence does not need begin Receive Activity. Receive external client already executed main process. point just executing activities same process context. fault sequence executed, reserved variable name “fault” contain fault message triggering sequence. Activities reference variables use fault variable. fault sequence not required. fault sequence system simply return fault back client. sequence constructed, minimum Reply Activity must present end. Any activities activity palette used fault sequence including Branch activities. Each branch however must end Reply Activity. Reply Activity configured return fault message regular message controlled Fault field Reply Activity Editor Reply Activity section below). reserved fault name “CurrentFault” seen fault name pull-down indicates fault name content fault variable used as-is. name changed however any operation faults Binding Fault instead. allow perform fault mediation. Back top Variable Editor interface defining variables used process. Variables used different activities dictate behavior, such using variable identify endpoint service invoke. Variables used store output web service invocations provide input web service invocations. Figure. Variable Editor variable identified name defined type, syntax. types recognized system message (used input output web service invocation, request, reply activity), string, int, long, boolean, float, any hold any content). Activities support use variables configurations often restrict use variables based type. Optionally default value given variable. default, beginning process execution variable given value. Back top Receive Activity provides entry point process. caller invoke process providing message. message stored variable selected activity’s configuration screen. variables type message used. Receive activity process. Figure. Receive Activity Editor Back top Reply Activity provides exit point process. Every flow through process must Reply Activity. means multiple branches created Branch Activity, each branch must terminated Reply Activity. Reply activity return message caller. not required one-way operation processes. variables type message used. Figure. Reply Activity Editor addition specifying variable holding message return indicate message fault providing Fault Name. Faults fall two main categories, application faults binding faults. application fault defined WSDL document operation. Policies attached binding fault typically not referenced anywhere. Reply Activity Editor Fault Name pull-down provided contain application faults found WSDL document operation reserved fault name “BindingFault.” choose message being returned represents. option provided called “CurrentFault.” option available Fault Sequence Editor. requires reserved fault variable filled message its fault name already known used Figure. Fault Reply Activity Back top Invoke Activity invokes operation service registered system. operation invoked sending message specified input variable activity. response operation invocation stored output variable. input output variables both same variable. Figure. Invoke Activity Input Output Variables operation invoked specified either statically dynamically through use variables. statically identify operation invoke, first start searching service operation. Figure. Invoked Service Search search performed using QNames. Search button clicked system searches any service QName contains typed Service QName field. nothing entered services returned. Figure. Invoked Service Search Result search results listed Service pull-down. Once correct service selected interface pull-down populated interfaces defined selected service. once correct interface selected operations selected interface populate Operation pull-down. Finally operation selected. Figure. Static Operation Selection Variables used specifying service, interface, and/or operation. variable must string typed variable. service operation string must QName format {namespace}localpart. runtime any variable values not match registered Policy Manager invocation fail. mix static selections variables once variable used remaining selections must variables. example, use variable interface must use variable operation. Figure. Static Dynamic (Variable) Operation Selection default access point (endpoint) called invoking operation selected runtime container using its selection strategy. dictate access point called selecting Invoke Access Point Directly checkbox. Once selected either enter URL directly access point name. Just service, interface, operation, select access point its pull-down use string variable resolved runtime. Figure. Direct Access Point Invocation default identities used invoking operation dictated outbound identity configuration virtual service. possible change those identities individual Invoke activity selecting Custom Mapping radio button Identity section. Figure. Custom Identity Mapping Selection Once selected Next button activity wizard enabled. Select Next Outbound Identity Configuration page displayed. page works similarly Outbound Identity Configuration page virtual service. select source outbound subject categories create mappings. Figure. Custom Outbound Identity Configuration Auditing message sent wire access point achieved simply selecting Audit checkbox. virtual service operation invocation executing process must currently being audited use auditing policy downstream message audited. Back top Script Activity provides ability execute script point process activity connected. script written either JavaScript, Jython, BeanShell. Script Details Editor organized two separate areas, Imports Source. Source pull-down select script language. large source code editor text area. Figure. Script Activity Source Area Common functions may need perform scripts saved Script objects using Add Script function Scripts section each Organization Policy Manager Workbench. make use those common functions Script Activity Script objects defining those functions must imported. Imports area those scripts identified import. available scripts listed Available Scripts tree. Any number Scripts tree moved Imported Scripts list box. scripts match language type available selection tree. script does not return value. Figure. Script Activity Imports Area figure above json2 Script Registry Scripts folder imported. Any functions defined json2 used Script Activity source code. following pre-defined variables provided. more information refer Scripts API located \\sm70\\docs\\scriptDocs folder Policy Manager release folder. Click index.htm launch documentation: following script creates normalized copy message saves variable. line processContext used message variable named “message”. line normalized copy made message. Finally line processContext used save normalized copy variable named “copy” used activities execute after process. next script illustrates use msgFactory create normalized message. normalized message contains XML element referenced wsdl:Message element WSDL document. line msgFactory used create normalized message named temp. line content line set temp message content. line processContext used save new message variable named temp. Message creation not limited normalized messages. Protocol specific messages any content-type constructed using msgFactory. following example shows creation JSON message. Note line call msgFactory create message different, both function name need specifying content-type message, application/json case. Back top Branch Activity provides mechanism alternate process flows, branches, based boolean conditions. Drop Branch Activity Process page connect last activity executed before branch Branch Activity. Figure. Adding Branch Activity Branch Activity itself very little configuration. branch conditions themselves most information. double click Branch Activity list conditions most importantly establish expression language each branch condition use. branch conditions must use same language. supported languages XPath, JavaScript, Jython, BeanShell. Figure. Branch Activity Editor create branch add next activity performed process graph, select Branch Activity connect next activity. Figure. Creating Branch Branch Activity similar Java switch statement. support multiple branches. branch followed. branches boolean conditions defined either XPath expression script.  Each branch evaluated order. first evaluate true selected sequence activities associated branch performed. Branch conditions defined separately main Branch Activity Condition Details Editor. add branch condition adding new activity sequence Script Activity, Invoke Activity, etc. dragging connector main Branch Activity target activity. must always default branch selected branch conditions evaluate true. default branch condition named \"Otherwise\" must added set each Branch Activity configuration. branch condition written any languages drop-down, set Branch Details Editor changed language selected apply conditions branch. Note branch conditions defined choose change language source deleted.  recommended make copy source content prior changing language. After select language case conditions, save exit Branch Activity add connections. result condition must either true false. multiple conditions branch, order executed changed moving each condition down Case Conditions table. Note \"Otherwise\" condition does not display Case Conditions table must still defined. first branch created most cases become Otherwise branch although changed. change branch’s condition double click connector between Branch Activity next activity branch sequence. branch condition written either XPath, JavaScript, Jython, BeanShell. result condition must either true false. Figure. Branch Condition Editor figure above condition configured use XPath language boolean expression. expression checks first price element found content message named “message” its value greater condition met. Note namespace prefix defined bottom page. using XPath expression language field selecting message variable use context expression displayed. expression evaluated against variable’s content. variable’s content must XML error generated runtime. using script language script evaluated last line execution expected result boolean true false. context script provided subset variables described Script Activity above: following figure condition triggered value price variable greater Figure. JavaScript Branch Condition Back top Transformation Activity provides mechanism transforming XML message string content. transformation based XSLT. input activity message string variable. transformed content replace input variable content completion activity. Figure. Transformation Activity Example figure above, XSL Stylesheet remove BankId element prefix account each account bank message variable following content: After executing Transformation Activity content message variable Audit Activity provides mechanism auditing message. audited message content recorded displayed audited message content Auditing Policy. information displays Monitoring pages service Services Monitoring). input activity message variable. several options portion message variable content audited. Capture Details section Activity Editor two primary options; capture complete message portion message. Figure. Auditing Complete Message \"Capture complete message\" option selected record name, label, needs specified. \"Capture message following expressions\" option selected list expressions entered. Figure. Auditing Portions Message Each expression use different language. supported languages XPath, JSONPath, Regular Expression. XPath expressions used input content XML. JSONPath expressions used input content JSON. Regular Expressions used types content. Each expression its own Record Name, label. case content not viewable others audit log option masking content. Masked Elements section specify mask password, account number) list expressions identify content masked. Figure. Masking Audited Elements expressions Masked Elements section similar those Capture Details section. same languages supported masking same mapping message content type expression language. results expressions replaced mask string. look entire activity definition auditing just account elements/properties XML JSON messages masking account id’s mask Figure. Audit Activity Example Note XPath expressions require namespace prefix definitions specified bottom editor. Back top Insert Content Activity used fill content String Message variable. source content either statically defined content existing variable. section activity editor identifies source content. specify static content inserted select Static Content radio button. Once selected text area displayed content any type, XML, JSON, text, etc. entered. text field displayed must enter mime content type static content entered text area application/xml application/json). Figure. Static Content use content variable input select Variable radio button. Once selected Filter section displayed. Select Filter check box portion variable’s content inserted. insert entire content variable not select checkbox. filter defined using filter expression written selected language. languages supported XPath XML content), JSONPath JSON content), Regular Expression any content). result filter expression applied input variable inserted. possible filter expression results multiple elements properties being used input. Figure. Filtered Variable Content defining XPath filter expressions namespaces specified elements must included. done using namespace prefix expression. namespace prefixes must mapped namespace Namespace Prefixes table bottom activity page. Figure. Namespace Prefixes section activity identifies target content specified section. target inserted content must variable. content either initialize/replace content variable section inserted existing content target variable. replacing entire content variable variable not yet initialized initialized result activity. insert existing content target location must identified using filter similar described section. Based filter expression possible multiple target locations found. Once target location identified choice whether source content inserted/added location source content replace location needs made. choice made selecting either Append Replace radio button. Note, Replace option available using Regular Expression language. Figure. Filtered Content Target following figure illustrates use Insert Content initialize message static XML content. Figure. Static Content Example Since filter defined section static XML content replace content var1, var1 not yet initialized process static XML content used initialize var1. next figure illustrates using Insert Content Activity extract portion source variable append target variable specified location. Figure. Append Content Example account elements message variable appended accounts element var1. accounts element found root var1 error generated. activity perform runtime take following content message variable: following content var1 variable: result activity var1 following content: Back top Process Activity allows call process another create processes common activities call those processes appropriate point another process. processes common activities reusable organized Processes folder each Organization Policy Manager Workbench. Reusable processes themselves Process activities call reusable processes. configuration Process Activity simple. editor presents tree reusable processes Processes folder each Organization Policy Manager Workbench. simply select Figure. Process Activity Editor process called another process, calling process’s context passed called process. variables values calling process passed through. called process defines variables same names ones calling process, calling process’s variables used. Back top"},{"title":"Managing Processes with Policy Manager 7.x","url":"/ag/processes/process_management.htm","date":null,"type":"document","description":"Description of  process editor functions and tools for managing process definitions.","categories":[],"body":"Description process editor functions tools managing process definitions. following table provides description each function used Process Palette. Process Palette available Processes (Common) section Processes folder), Services Operations Process Services Operations Fault section. Default Process service virtualized default process added each service operation. composed Receive Activity cannot deleted), Invoke Activity, Reply Activity. Edit Delete Activity Right-click Activity icon launch activities editor, update activity name, delete activity. Receive Activity Icon Part default process. Note: Activity type cannot deleted. Audit Activity Icon Launches Auditing Details Editor. Branch Activity Icon Launches Branch Details Editor. Insert Content Activity Icon Launches Insert Content Details Editor. Invoke Activity Icon Launches Invocation Details Editor Process Activity Icon Launches Process Selection Editor Reply Activity Icon Launches Reply Details Editor Script Activity Icon Launches Script Details Editor Transformation Activity Icon Launches Transformation Details Editor. Add View Activity Variables Launches Variable Details Editor. Save Process Database Saves current process database. process saved receive confirmation message indicating successfully saved. Note process must comply activity-specific input output criteria before saved. Delete Selected Object Deletes selected objects activity icons, connection arrows, etc.) Process Palette. Download Stored Process XML Format Allows save open process version currently stored database XML format. perform following actions. Reload Process Database Reloads last process saved database. Note updates current process not saved database lost. Process Help Icon Launches Policy Manager Online Help. back top following process management functions apply common process definitions Processes folder. available Process Summary drop-down menu via Actions Portlet Process Details page. back top Used add process instance. default process instance includes Receive Reply activity. Select Add Process main Process Summary page assign name description. Add Process Wizard creates process instance configure using Process palatte Process tab). Allows change name description process. back top Allows move current process configuration new \"Organization.\" back top Allows replicate process definition assign new \"Process Name\" \"Process Key.\" Using function configure elements represent core functionality process, replicate new process, perform additional customization copy. back top Deletes selected process definition. order delete process, cannot \"Referenced\" used more Process Activity definitions). number process references indicated column viewed selecting \"View Process References.\" delete process, must delete Process Activity process definition includes reference save process using \"Save Process Database\" function Process Palette Toolbar. back top Provides method exporting process definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Allows save open process version currently stored database XML format. perform following actions. back top Displays list service operations current process referencing Process Activity. back top"},{"title":"Managing Agent for WCF Services with Policy Manager 6.0","url":"/ag/wcf_management_guide.html","date":null,"type":"pdf","description":"Manage WCF Services with Policy Manager 6.0 security policies and configure WCF policies with Network Director.","categories":[],"body":""},{"title":"Installing Policy Manager 6.1","url":"/ag/pm_install_guide_v6.1.html","date":null,"type":"pdf","description":"Install and configure Policy Manager 6.1 on Windows, and all supported UNIX platforms.","categories":[],"body":""},{"title":"Managing Scripts","url":"/ag/scripts/script_management.htm","date":null,"type":"document","description":"Tools for managing Script definitions in Policy Manager 7.x.","categories":[],"body":"Tools managing Script definitions. following script management functions apply scripts defined Scripts folder. available Script Summary, Script Summary drop-down menu, via Actions Portlet Script Details page. Allows define common functions may need perform scripts save Script objects. back top Allows change name description script. back top Allows move current script configuration new \"Organization.\" back top Allows replicate script definition assign new \"Script Name\" \"Script Key.\" Using function configure elements represent core functionality script, replicate new script, perform additional customization copy. back top Deletes selected script definition. order delete script, cannot \"Referenced\" used/imported more Script Activity definitions). number script references indicated column viewed selecting \"View Script References.\" delete script, must remove script list imported scripts Script Activity process definition. back top Provides method exporting script definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Allows update script definition. back top Displays processes QoS Policies using current script. back top"}]}