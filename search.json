{"entries":[{"title":"JBoss Agent Install Guide for Policy Manager 6.1","url":"/ag/agent_jboss_install_guide_v6.1.html","date":null,"type":"pdf","description":"The Install instructions for JBoss Agent Policy Manager 6.1.","categories":[],"body":"SOA Software Policy Manager Agent JBoss Application Server Installation Guide Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Table Contents SOA SOFTWARE POLICY MANAGER AGENT JBOSS APPLICATION SERVER INSTALLATION GUIDE Preface Guide System Requirements Prerequisites Customer Support Chapter Downloading Installing Policy Manager Agent JBoss Application Server Overview Download JBoss Agent (soa-jboss-6.1.0.zip) Install Jobs Agent (soa-jboss-6.1.0.zip) Policy Manager Release Directory................................. Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Overview Configure JBoss Container Instance Configure JBoss Container Instance (GUI) Configure JBoss Container Instance (Silent Configuration JBoss Container Instance Configuration Results Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Overview Configure JBoss Container Instance Configure JBoss Container Instance (GUI) Configure JBoss Container Instance (Silent Configuration)...................................................... JBoss Container Instance Configuration Results Chapter Deploying JBoss Agent JBoss Console Overview Deploying JBoss Agent WAR FILE JBoss Server Chapter Deploying JBoss Agent JBoss Console Overview Deploying JBoss Agent War JBoss Server Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Installing JBoss Agent Feature....................................................................................................... Configuring JBoss Agent Feature Configure WS-MetaDataExchange Options (JBoss Agent)............................................................ Manage PKI Keys (JBoss Agent) Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Perform SOA Software Administration Console Login (JBoss Agent) Chapter Registering JBoss Agent Container Policy Manager Management Console Overview Register JBoss Agent Container Chapter Managing JBoss Web Services JBoss Agent Overview Message Flow Configure Service Filter Add Agent module dependency JBoss Register Managed Physical Services Policy Manager................................................................ Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Table Figures Figure Welcome Configure Container Instance--JBoss Deployment Figure Instance Name--JBoss Deployment Figure Default Admin User--JBoss Deployment Figure Instance Configuration Options--JBoss Deployment Figure JBoss Settings--JBoss Deployment Figure Instance Configuration Summary--JBoss Deployment Figure Welcome Configure Container Instance--JBoss above Deployment Figure Instance Name-- JBoss above Deployment Figure Default Admin User--JBoss above Deployment Figure Instance Configuration Options--JBoss above Deployment Figure JBoss Settings--JBoss above Deployment Figure Instance Configuration Summary--JBoss above Deployment Figure SOA Software Administration Console Login Figure JBoss Agent Feature Installation--Available Features Tab Figure JBoss Agent Feature Installation--Install Feature Resolve Phase Figure JBoss Agent Feature Installation--Install Feature Feature Resolution Report Figure JBoss Agent Feature Installation--Install Feature Installation Complete................................ Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options)--JBoss Agent Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options Summary)--JBoss Agent................................................................................................................... Figure Manage PKI Keys Wizard (Select Key Management Option)--JBoss Agent Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)--JBoss Agent Figure Manage PKI Keys Wizard (Summary)--JBoss Agent............................................................. Figure SOA Software Administration Console--Login (JBoss Agent) Figure Register JBoss Agent--Add Container Wizard (Select Container Type) Figure Register JBoss Agent--Add Container Wizard (Specify Metadata Import Options Metadata URL selected) Figure Register JBoss Agent--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) Figure Register JBoss Agent--Add Container Wizard Certificate Not Trusted) Figure Register JBoss Agent--Add Container Wizard (Specify Container Details) Figure Register JBoss Agent--Add Container Wizard (Completion Summary) Figure Register JBoss Agent--Container Details Figure Register Web ServiceCreate Physical Service Wizard (Select WSDL location)................... Figure Register Web ServiceCreate Physical Service Wizard (Select Service Management Option) Figure Register Web ServiceCreate Physical Service Wizard (Select Container)........................ Figure Managed Service Details page Figure Managed Service Monitoring Logs Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Preface Preface SOA Software Policy Manager Agent JBoss (JBoss Agent) adaptor enables JBoss Server become Container Policy Manager SOA Software Policy Manager Agent JBoss Application Server Installation Guide provides instructions installing configuring JBoss Agent Windows, supported UNIX platforms. GUIDE guide includes following chapters: Chapter Downloading Installing Policy Manager Agent JBoss Application Server Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Chapter Deploying JBoss Agent JBoss Console Chapter Deploying JBoss Agent JBoss Console Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Chapter Registering JBoss Agent Container Policy Manager Management Console Chapter Managing JBoss Web Services JBoss Agent SYSTEM REQUIREMENTS JBoss Agent supports following configurations: JBoss JBoss Agent supports JBoss Application Server JBoss Enterprise Application Platform (EAP) JBoss Application server JBoss Enterprise Application Platform (EAP) Operating Systems JBoss Agent tested certified following platforms: Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Preface Windows Windows Server Windows Windows Red Hat Enterprise Linux above. PREREQUISITES Prior beginning JBoss Agent installation process, following prerequisite conditions must met. JBoss Application Server JBoss Application server JBoss EAP Policy Manager JBoss Agent requires installation configuration Policy Manager Policy Manager Updates Policy Manager Features outlined \"SOA Software Platform Installation Guide Windows UNIX Platforms\" (SOA_Software_Platform_Install_Guide.pdf) available via SOA Software Customer Support site (Refer support.soa.com Downloads Policy Manager section). Note: Policy Manager instance hosting JBoss Agent installed new JBoss Container, separate container. already Policy Manager container defined, make sure prerequisite set updates applied using Configure Container Instance Wizard, prior installing JBoss Agent feature. following SOA Software update scenarios apply: Policy Manager installations updates already applied: minimum prerequisite Policy Manager Update version required JBoss Agent Please ensure updates correctly applied. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Preface CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. Updates product documentation issued periodic basis available submitting email request support@soa.com. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Downloading Installing Policy Manager Agent JBoss Application Server Chapter Downloading Installing Policy Manager Agent JBoss Application Server OVERVIEW After completed prerequisite tasks installing Policy Manager application files installing configuring Policy Manager features via SOA Software Administration Console, must install Policy Manager Agent JBoss Application Server Policy Manager Release Directory. DOWNLOAD JBOSS AGENT (SOA-JBOSS-6.1.0.ZIP) JBoss Agent available extractable .zip file (soa-jboss-6.1.0.zip). Download JBoss Agent Option Pack Step Procedure Download JBoss Agent SOA Software Support site. Refer support.soa.com Downloads Agents JBoss section). zip file includes following .jar files: com.soa.config.jboss_6.1.xxxx.jarExtends Configure Container Instance Wizard allow creation SOA Container deployed WAR file JBoss Application Server. com.soa.feature.agent.jboss_6.1.xxxx.jarEnables \"Agent\" feature adds container capability host physical services. INSTALL JOBS AGENT (SOA-JBOSS-6.1.0.ZIP) POLICY MANAGER RELEASE DIRECTORY After JBoss Agent .zip (soa-jboss-6.1.0.zip) downloaded, must extracted Policy Manager Release Directory. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Downloading Installing Policy Manager Agent JBoss Application Server Extract JBoss Agent Policy Manager Release Directory Step Procedure Copy JBoss Agent (soa-jboss-6.1.0.zip) Policy Manager Release Directory Extract zip file (soa-jboss-6.1.0.zip) Policy Manager Release Directory. Overwrite any existing files. automated zip file copies series files sm60\\lib sm60\\instances\\configurator\\deploy folders Policy Manager Release Directory. After extracting JBoss Agent package, next step configure SOA Container JBoss deployment. covered Chapter Configuring JBoss Agent Container Instance. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard OVERVIEW chapter provides instructions installing configuring JBoss SOA Container instance. configuration process creates Web Archive (WAR) file either deployed JBoss Application Server. CONFIGURE JBOSS CONTAINER INSTANCE section provides instructions configure new JBoss Container Instance using Configure Container Instance Wizard. Instructions GUI Silent configurations provided. CONFIGURE JBOSS CONTAINER INSTANCE (GUI) Configure Container Instance--JBoss Deployment Step Procedure Run Command Prompt Administrator. Navigate Policy Manager release directory c:\\sm60\\bin enter: Startup.bat configurator Welcome Configure Container Instance Wizard screen displays. Review information click Next continue. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Figure Welcome Configure Container Instance--JBoss Deployment Instance Name screen displays. specify name SOA Software Container Instance. instance name unique easily identifiable JBoss Agent). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Figure Instance Name--JBoss Deployment Default Admin User screen displays. Define Username Password credentials administrator using SOA Software Administration Console. Password field includes default password used log SOA Software Administration Console. Hide Password checkbox allows display password encrypted unencrypted. view default password, uncheck Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Hide Password checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Figure Default Admin User--JBoss Deployment Instance Configuration Options screen displays. select container deployment option. Deployment Options section, select JBoss, click Next continue. Figure Instance Configuration Options--JBoss Deployment JBoss Application Server Settings screen displays. instance deployed existing JBoss installation. Configure JBoss Settings. Specify Context Path access new SOA Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment container (default /soa), JBoss port connects JBoss server. Select \"Older Versions\" radio button. Figure JBoss Settings--JBoss Deployment After specifying JBoss settings click Next. Instance Configuration Summary screen displays. complete configuration JBoss Deployment option, click Finish. Configure Container Instance Wizard completes configuration. Figure Instance Configuration Summary--JBoss Deployment configuration process creates Web Archive (WAR) file stored <PMHome>/sm60/deployments/Jobs Policy Manager Release Directory. WAR file must deployed JBoss Application Server. Chapter Deploying JBoss Agent JBoss Console. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard CONFIGURE JBOSS CONTAINER INSTANCE (SILENT CONFIGURATION section provides instructions configure automated configuration properties file used create new JBoss Container Instance. Configure JBoss Container Instance (Silent Configuration) Step Procedure Configure Container Instance Wizard set run automated mode silent). done defining properties file pre-defining set property values used Configure Container Instance Wizard automatically configure Container instance. Define properties file creating JBoss Container Instance myprops.properties) Add following content: container.instance.name=<instancename> container.key=<instancename> credential.username administrator credential.password password default.host=<jbosshost> default.port=8080 jboss.context.path=/soa deployment=JBoss jboss.as.version.7x=false Properties following properties used JBoss Deployments. container.instance.name--Name Container. container.key--SOA recommends Container Key set same value Container Name. credential.username--Username logging SOA Software Administration Console. credential.password--Password logging SOA Software Administration Console. deployment--Specify deployment container \"JBoss.\" default.host--Host name/IP address Container Instance. default.port--Port Container Instance. default JBoss port. jboss.context.path--Specify /soa JBoss \"Context Path\". Default value \"/soa\" jboss.as.version.7xValue false. signifies JBoss version Running Silent Configuration Configure Container Instance Wizard (Silent Configuration) properties file accepts two system properties together used perform silent configuration: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: <PM-Home>\\sm60\\bin>startup.bat configurator \"-Dsilent=true\" Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure JBoss Container Instance (Silent Configuration) Dproperties=C:/<property file directory location>/myprops.properties\" UNIX <PM-Home>/sm60/bin>startup.sh configurator -Dsilent=true Dproperties=/export/home/username/<property file directory location>\\myprops.properties configuration process creates Web Archive (WAR) file stored sm60/deployments/JBoss Policy Manager Release Directory. WAR file must deployed JBoss Application Server. Chapter Deploying JBoss Agent JBoss Console. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard JBOSS CONTAINER INSTANCE CONFIGURATION RESULTS following table shows directory file changes made regardless method chosen configure new JBoss container instance. JBoss Container Instance Configuration Results: sm60/deployments /lib com.soa.agent.shared_6.1.x.jar Agent shared classes /JBoss soa-pm-container-name.war JBoss Container's deployable Web Archive Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard OVERVIEW chapter provides instructions installing configuring JBoss SOA Container instance. configuration process creates Web Archive (WAR) file either deployed JBoss Application Server. CONFIGURE JBOSS CONTAINER INSTANCE section provides instructions configure new JBoss Container Instance using Configure Container Instance Wizard. Instructions GUI Silent configurations provided. CONFIGURE JBOSS CONTAINER INSTANCE (GUI) Configure Container Instance--JBoss Deployment Step Procedure Run Command Prompt Administrator. Navigate Policy Manager release directory c:\\sm60\\bin enter: Startup.bat configurator Welcome Configure Container Instance Wizard screen displays. Review information click Next continue. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Figure Welcome Configure Container Instance--JBoss above Deployment Instance Name screen displays. specify name SOA Software Container Instance. instance name unique easily identifiable JBossAgent). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Figure Instance Name-- JBoss above Deployment Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Default Admin User screen displays. Define Username Password credentials administrator using SOA Software Administration Console. Password field includes default password used log SOA Software Administration Console. Hide Password checkbox allows display password encrypted unencrypted. view default password, uncheck Hide Password checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Figure Default Admin User--JBoss above Deployment Instance Configuration Options screen displays. select container deployment option. Deployment Options section, select JBoss, click Next continue. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Figure Instance Configuration Options--JBoss above Deployment JBoss Application Server Settings screen displays. instance deployed existing JBoss installation. Configure JBoss Settings. Specify Context Path access new SOA container (default /soa), JBoss port connects JBoss server. Select Version above radio button option. Figure JBoss Settings--JBoss above Deployment After specifying JBoss settings click Next. Instance Configuration Summary screen displays. complete configuration JBoss Deployment option, click Finish. Configure Container Instance Wizard completes configuration. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure Container Instance--JBoss Deployment Figure Instance Configuration Summary--JBoss above Deployment configuration process creates Web Archive (WAR) file stored <PMHome>/sm60/deployments/JBoss Policy Manager Release Directory. WAR file must deployed JBoss Application Server. Chapter Deploying JBoss Agent JBoss Console. CONFIGURE JBOSS CONTAINER INSTANCE (SILENT CONFIGURATION) section provides instructions configure automated configuration properties file used create new JBoss Container Instance. Configure JBoss Container Instance (Silent Configuration) Step Procedure Configure Container Instance Wizard set run automated mode silent). done defining properties file pre-defining set property values used Configure Container Instance Wizard automatically configure Container instance. Define properties file creating JBoss Container Instance myprops.properties). Add following content: container.instance.name=<instancename> container.key=<instancename> credential.username administrator credential.password password default.host=<jbosshost> default.port=8080 jboss.context.path=/soa Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard Configure JBoss Container Instance (Silent Configuration) deployment=JBoss jboss.as.version.7x= true Properties following properties used JBoss Deployments. container.instance.name--Name Container. container.key--SOA recommends Container Key set same value Container Name. credential.username--Username logging SOA Software Administration Console. credential.password--Password logging SOA Software Administration Console. deployment-- Specify deployment container \"JBoss.\" default.host--Host name/IP address Container Instance. default.port--Port Container Instance. default JBoss port. jboss.context.path--Specify /soa JBoss \"Context Path\". Default value \"/soa\". jboss.as.version.7xValue \"true.\" signifies JBoss version Running Silent Configuration Configure Container Instance Wizard (Silent Configuration) properties file accepts two system properties together used perform silent configuration: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: <PM-Home>\\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=C:/<property file directory location>/myprops.properties\" UNIX <PM-Home>/sm60/bin>startup.sh configurator -Dsilent=true Dproperties=/export/home/username/<property file directory location>\\myprops.properties configuration process creates Web Archive (WAR) file stored sm60/deployments/JBoss Policy Manager Release Directory. WAR file must deployed JBoss Application Server. Chapter Deploying JBoss Agent JBoss Console. JBOSS CONTAINER INSTANCE CONFIGURATION RESULTS following table shows directory file changes made regardless method chosen configure new JBoss container instance. JBoss Container Instance Configuration Results: Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Configuring JBoss Agent Container using Configure Container Instance Wizard sm60/deployments /JBoss soa-pm-container-name.war JBoss Container's deployable Web Archive. Shared library modules required JBoss version /JBoss/modules Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Deploying JBoss Agent JBoss Console Chapter Deploying JBoss Agent JBoss Console OVERVIEW chapter provides list steps configuring JBoss Application Server run JBoss Agent feature. Tasks include adding JBoss Agent shared .jar file system class path JBoss servers deploying JBoss Agent WAR file. DEPLOYING JBOSS AGENT WAR FILE JBOSS SERVER defined SOA Software Agent Container using SOA Software Configure Container Instance Wizard Web Archive (WAR) file created saved sm60\\deployments\\JBoss folder Policy Manager Release Directory. files contain bootstrap code load SOA Service Manager OSGi Container any installed features JBoss Agent SOA Delegate. WAR file must installed each JBoss Application Service running applications need JBoss Agent processing. installation procedure listed below. Deploy JBoss Agent .war File JBoss Server Step Procedure During JBoss Agent configuration using Configure Container Instance Wizard, jar files placed sm60/deployments/lib directory. JBoss Agent shared jar files must added system class path JBoss server enable JBoss Agent. Copy following jars <soa-home>/sm60/deployments/lib directory <JBoss_HOME>\\server\\<PROFILE_NAME>\\lib directory. com.soa.agent.shared_6.1.xxxx.jar JBoss application servers above cannot load/register crypto providers application class loader due known issue. overcome bouncy castle jars excluded Agent WAR file need place server class path. please copy following list jars <JBoss_HOME>\\server\\<PROFILE_NAME>\\lib. bcmail-jdk15-146.jar bcprov-jdk15-146.jar Deploy soa-pm-<container>.war <PM-HOME>/sm60/deployments/JBoss directory JBoss servers using \"Policy Manager Agent JBoss\" container configuration. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Deploying JBoss Agent JBoss Console Deploy JBoss Agent .war File JBoss Server Restart JBoss server. not mandatory. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Deploying JBoss Agent JBoss Console Chapter Deploying JBoss Agent JBoss Console OVERVIEW chapter provides list steps configuring JBoss Application Server run JBoss Agent feature. Tasks include adding JBoss Agent shared module dependent libraries system class path JBoss servers deploying JBoss Agent WAR file. JBoss Agent WAR application needs following artifacts start run successfully: Bouncy castle Jars cryptographic requirements. SOA Agent shared jar agent interception provider services. agent instance created, modules listed above copied under: <soa-home>/sm60/deployments/JBoss/modules DEPLOYING JBOSS AGENT WAR JBOSS SERVER defined SOA Software Agent Container using SOA Software Configure Container Instance Wizard Web Archive (WAR) file created saved sm60\\deployments\\JBoss folder Policy Manager Release Directory. files contain bootstrap code load SOA Software Policy Manager OSGi Container any installed features JBoss Agent SOA Delegate. WAR file must installed each JBoss Application Server running applications need JBoss Agent processing. installation procedure listed below. Deploy JBoss Agent .war File JBoss Server Step Procedure SOA Software Policy Manager Agent requires bouncy castle provider Agent shared modules. modules configured either steps listed below. Add modules location existing module path Java runtime arguments (JAVA_OPTS) startup file (standalone.bat/standalone.sh standalone deployments domain.bat/domain.sh domain based deployments). example: \"%JBOSS_MODULEPATH%;<modules location>\" Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Deploying JBoss Agent JBoss Console Deploy JBoss Agent .war File JBoss Server .<modules location> replaced location modules. Copy modules present under: <soa-home>/sm60/deployments/JBoss/modules/ JBoss modules location: <jboss-home>/ modules/system/layers/base/ Deploy soa-pm-<container>.war <PM-HOME>/sm60/deployments/JBoss directory JBoss servers using \"Policy Manager Agent JBoss\" container configuration. Restart JBoss server. not mandatory. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console INSTALLING JBOSS AGENT FEATURE section provides walkthrough installing \"Policy Manager Agent JBoss Application Server\" (JBoss Agent) feature. Install JBoss Agent Feature Step Procedure Launch SOA Software Administration Console: http://<jboss-server-host>:8080/soa/admin/ Figure SOA Software Administration Console Login SOA Software Administration Console, click Available Features tab. list available features displays. select SOA Software Policy Manager Agent JBoss Application Server feature, click checkbox next feature line item. After clicking checkbox, Install Feature button displays focus. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Install JBoss Agent Feature Figure JBoss Agent Feature Installation--Available Features Tab begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. Resolve phase, system determines bundle package dependencies selected feature. Figure JBoss Agent Feature Installation--Install Feature Resolve Phase After Resolve phase complete, Feature Resolution Report presented includes list dependencies selected feature. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Install JBoss Agent Feature Figure JBoss Agent Feature Installation--Install Feature Feature Resolution Report begin installing feature click Install Feature. Installing... status displays along progress indicator. installation process completed, Installation Complete screen displays feature(s) being installed removed listing under Available Features tab transitioned Installed Features tab. Figure JBoss Agent Feature Installation--Install Feature Installation Complete After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer Configuring Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Install JBoss Agent Feature JBoss Agent Feature section. CONFIGURING JBOSS AGENT FEATURE After installing JBoss Agent feature via Available Features tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking Configure button Installation Complete screen end feature installation process. second track allows resume configuration later time clicking Cancel Installation Complete screen executing Complete Configuration button Pending Installation Tasks section via Installed Features tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available Configuration Actions section Configuration tab. Tasks re-executed needed. Note: task assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Configure JBoss Agent Feature Step Procedure Select following configuration tracks, begin configuration process JBoss Agent feature. Installed Features Tab: Click Complete Configuration Pending Installation Tasks section. Available Features Tab: Click Configure Installation Complete screen feature installation wizard. first page displays WS-MetaDataExchange Options screen. starting point beginning JBoss Agent configuration. following sections provide walkthrough each task configuration wizard JBoss Agent feature. CONFIGURE WS-METADATAEXCHANGE OPTIONS (JBOSS AGENT) WS-MetaDataExchange Options screen allows specify URL Policy Manager \"Metadata Exchange Service.\" Connecting \"Metadata Exchange Service\" Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console enables communication between current SOA Software Container instance Policy Manager retrieve key information service hosting, database, etc.). Specifying \"WS-MetaDataExchange\" URL required installation task JBoss Agent feature. Policy Manager URL found viewing Access Point URL \"Metadata Exchange Service\" viewing WSDL \"Metadata Exchange Service\" <SOAP:address location>. wsmex address use include port number specified defined container using Configure Container Instance Wizard. example address \"http://soa-pmserver:9900/wsmex.\" Configure WS-MetaDataExchange Options (JBoss Agent) Step Procedure Enter following \"Metadata Exchange Service\" URL field display: http://soa-pm-server:9900/wsmex After completing entry, click Finish. WS-MetaDataExchange Options Summary screen displays. Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options)--JBoss Agent Review summary information click Continue Next Task. Select Key Management Option screen displays. Manage PKI Keys section details performing task. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Configure WS-MetaDataExchange Options (JBoss Agent) Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options Summary)--JBoss Agent MANAGE PKI KEYS (JBOSS AGENT) section provides instruction configuring PKI keys current container. Configure PKI Keys (JBoss Agent) Step Procedure Manage PKI Keys Wizard executed either installation task configuration action JBoss Agent feature. wizard allows configure private key certificate container communicating governance console. first screen displays Manage PKI Keys Wizard Select Key Management Options screen. organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned object. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current object. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current object. Option categories include Generate, Import, Export, Delete. Available objects displayed focus\" based object's configuration \"state.\" Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Configure PKI Keys (JBoss Agent) Figure Manage PKI Keys Wizard (Select Key Management Option)--JBoss Agent Key Management Options section, select option click Next continue. pre-selected option assigned default. Generate PKI keys Certificate screen displays. Generate PKI Keys Certificate screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). Key Length section, select radio button key length based requirements. Certificate Details section includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select Key Length enter Certificate Details based requirements. After completing entries, click Finish. Certificate details displayed Summary screen. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console Configure PKI Keys (JBoss Agent) Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)-- JBoss Agent Figure Manage PKI Keys Wizard (Summary)--JBoss Agent Click Finish complete keys configuration. following message displays: recommended restart system.\" Click restart JBoss Application Server manually. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Installing Configuring JBoss Agent Feature using SOA Software Administration Console PERFORM SOA SOFTWARE ADMINISTRATION CONSOLE LOGIN (JBOSS AGENT) After system exits SOA Software Administration Console, Login screen displays. Select Admin Console domain click Enter log back continue system administration activities. Figure SOA Software Administration Console--Login (JBoss Agent) Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Registering JBoss Agent Container Policy Manager Management Console Chapter Registering JBoss Agent Container Policy Manager Management Console OVERVIEW chapter provides instructions register JBoss Agent Container. process involves configuring SOA Container using Add Container function Policy Manager Management Console. REGISTER JBOSS AGENT CONTAINER Register JBoss Container Step Procedure After successfully installing configuring JBoss Agent feature, next step register JBoss Agent Container Policy Manager Management Console. Login Management Console navigate Organization Containers. Containers Summary screen displays. Click Add Container. Add Container Wizard launches Select Container Type screen displays. SOA Container Types section click SOA Container radio button. Figure Register JBoss Agent--Add Container Wizard (Select Container Type) Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Registering JBoss Agent Container Policy Manager Management Console Register JBoss Container Click Next continue. Specify Metadata Import Options screen displays organized follows: Metadata Options Metadata URL--This option used enter URL address represents location Metadata retrieved. input format \"http://[computer name]:[port]/ContextPath/metadata/.\" Metadata Path--This option used enter file system path metadata document. obtain Metadata Document perform following steps: Access Metadata URL http://<jboss-host>:8080/soa/metadata) any browser. After accessing URL browser, Right click page select View Page Source. Save opened page using .xml format. Authentication Options section allows specify options pass credentials used retrieve container metadata. Three options available: Anonymous--This option does not pass user credentials container retrieve its metadata. Logged User--This option does not pass user credentials container retrieve its metadata. Specify Credentials--This option passes supplied credentials Username, Password, Domain fields container retrieve its metadata. Configure Metadata Authentication option click Next continue. Figure Register JBoss Agent--Add Container Wizard (Specify Metadata Import Options Metadata URL selected) Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Registering JBoss Agent Container Policy Manager Management Console Register JBoss Container Figure Register JBoss Agent--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) metadata contains self-signed certificate does not reside Policy Manager Trusted Certificate Authority store, receive Certificate Not Trusted\" screen. add current certificate Trusted Certificate Authority store, manually add using Import Trusted Certificate function \"Configure Security Certificates Trusted Certificates\" section \"Management Console. Select \"Yes\" add certificate Policy Manager Trusted Certificate Authority store, click Next. \"Specify Container Details\" screen displays. Selecting returns \"Select Container Type\" screen. Click \"Yes\" radio button, click Next continue. Figure Register JBoss Agent--Add Container Wizard Certificate Not Trusted) \"Container Details\" screen displays. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Registering JBoss Agent Container Policy Manager Management Console Register JBoss Container Each container definition needs instance name description distinguish container types, encryption seed Container Key) ensure security launched, must assigned Organization. \"Organization\" represents owner container. screen organized two sections: Container Details Type--Displays container type. Container Key--A field display used specify custom container encryption key. custom key specified, Policy Manager auto-generate key. Instance Name--A field display allows specify instance name container. Description--A field display allows specify description container. \"Organization Tree\" allows select organization represents owner container. Organization Tree Figure Register JBoss Agent--Add Container Wizard (Specify Container Details) Complete entries click Finish continue. \"Add Container Wizard\" configures container saves information Policy Manager data repository. configuration process complete, \"Completion Summary\" screen displays. After reviewed summary screen, click Close. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Registering JBoss Agent Container Policy Manager Management Console Register JBoss Container Figure Register JBoss Agent--Add Container Wizard (Completion Summary) JBoss Agent Container successfully registered \"Management Console\" Container Details screen displays. Figure Register JBoss Agent--Container Details Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent Chapter Managing JBoss Web Services JBoss Agent OVERVIEW JBoss Agent intercepts web service calls way Servlet Filter must configured developer. After JBoss Agent installation complete, must update web service WAR file servlet filter activate JBoss Agent SOA Container apply selected security policies web services managed JBoss Agent. managed WAR file include SOA Software Servlet Filter invokes JBoss Agent manage web services. must deploy managed WAR file replace unmanaged WAR file JBoss Server, register physical services Policy Manager Management Console host services JBoss SOA Container. After configuration complete, able attach policies managed physical services monitoring security. MESSAGE FLOW request message intercepted before reaches web service. interception point, policy enforced request message. policy enforcement fails, fault returned without message being delivered caller. succeeds, request message (potentially, modified during request policy execution) allowed delivered web service. web service response message ready delivered caller, interception policy applies response policy message before delivering response message (potentially, modified during response policy execution) caller. message intercepted using alternate approach different web service implementation stacks used. agent servlet filter receives message, prepares object request handed agent application running same JBOSS application server entire policy enforcement take place different class loader. approach used avoid conflict java classes web service class loader server class loader. reason, agent application always run parent last class loading mechanism agent classes higher preference. object used wrap request message part jar loaded server class loader. jar generally referred shared jar loaded class loader shared applications running JBOSS server. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent CONFIGURE SERVICE FILTER JBoss Agent activated adding following elements WEBINF/web.xml file WAR contains service implementations managed. SOAP/HTTP: <filter> <filter-name>AgentFilter</filter-name> <filter-class>com.soa.agent.servlet.AgentFilter</filter-class> <init-param> <param-name>agenturi</param-name> <param-value>http://soa.com/agents/soap</param-value> </init-param> <init-param> <param-name>methods</param-name> <param-value>POST</param-value> </init-param> </filter> <filter-mapping> <filter-name>AgentFilter</filter-name> <url-pattern><url-pattern-of-service-endpoint></url-pattern> </filter-mapping> agenturi parameter take following values. http://schemas.xmlsoap.org/soap/envelope/ http://www.w3.org/2003/05/soap-envelope (SOAP (SOAP SOAP version information not available, following value used. value set, Agent handle both SOAP SOAP requests. http://soa.com/agents/soap recommended SOAP version specific agent URI used possible avoid possible parsing incoming SOAP envelope determine SOAP version. REST: <filter> <filter-name>SOAAgentFilter</filter-name> <filter-class>com.soa.agent.servlet.AgentFilter</filter-class> <init-param> <param-name>agenturi</param-name> <param-value>http://soa.com/wsdl/http</param-value> Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent </init-param> <init-param> <param-name>methods</param-name> <param-value>POST,GET,PUT,DELETE</param-value> </init-param> </filter> <filter-mapping> <filter-name> SOAAgentFilter</filter-name> <url-pattern><url-pattern-of-service-endpoint></url-pattern> </filter-mapping> ADD AGENT MODULE DEPENDENCY JBOSS Note: step applicable web services targeted deploy JBoss above: Agent shared library needs runtime agent application, accomplish JBoss added module. Agent module added dependency web service application. done either ways mentioned below. Add agent module global module. advantage approach agent module not required added dependency each provider web service application needs managed. standalone deployments, Add agent module entry <subsystem xmlns=\"urn:jboss:domain:ee:1.1\"> </subsystem> <%JBOSS_HOME%>/standalone/configuration/standalone.xml under section below: <subsystem xmlns=\"urn:jboss:domain:ee:1.1\"> <global-modules> <module name=\"com.soa.agent\"/> </global-modules> <spec-descriptor-property-replacement>false</spec-descriptor-replacement> <jboss-descriptor-property-replacement>true</jboss-descriptorproperty-replacement> </subsystem> Note: Changes highlighted bold. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent domain based deployments same agent module entry mentioned above must added <%JBOSS_HOME%>/domain/configuration/domain.xml Add module dependency entry WAR's WEB-INF/jboss-deploymentstructure.xml file, under <deployment><dependencies> section, shown below. <dependencies> <module name=\"com.soa.agent\" slot=\"main\" export=\"true\" </dependencies> dependencies jboss-deployment-structure.xml add node create under WEB-INF folder. Below Sample jboss-deployment-structure.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <jboss-deployment-structure xmlns=\"urn:jboss:deployment-structure:1.1\"> <deployment> <dependencies> <module export=\"true\" slot=\"main\" name=\"com.soa.agent\"/> </dependencies> </deployment> </jboss-deployment-structure> REGISTER MANAGED PHYSICAL SERVICES POLICY MANAGER Register Managed Physical Services Policy Manager Step Procedure Log Policy Manager Management Console. Register web service modified above steps physical service provide service details. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent Register Managed Physical Services Policy Manager Figure Register Web ServiceCreate Physical Service Wizard (Select WSDL location) Manage service JBoss container. Figure Register Web ServiceCreate Physical Service Wizard (Select Service Management Option) Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent Register Managed Physical Services Policy Manager Figure Register Web ServiceCreate Physical Service Wizard (Select Container) Attach desired policy (DetailedAuditing policy used example) managed physical service. Figure Managed Service Details page Testing configuration: Send request physical service, able monitoring data Auditing Policy attached. Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide Chapter Managing JBoss Web Services JBoss Agent Register Managed Physical Services Policy Manager Figure Managed Service Monitoring Logs Copyright SOA Software, Inc. Policy Manager Agent JBoss Installation Guide"},{"title":"TCSServer Agent Install Guide for Policy Manager 6.1","url":"/ag/agent_tcserver_install_guide_v61.html","date":null,"type":"pdf","description":"The Install instructions for TCSServer Agent on Policy Manager 6.1.","categories":[],"body":"SOA Software Policy Manager Agent Server Application Server Installation Guide Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc Policy Manager Agent tc-Server Installation Guide Table Contents SOA SOFTWARE POLICY ANAGER AGENT SERVER APPLICATION SERVER INSTALLATION GUIDE Preface Guide System Requirements Prerequisites System Requirements Customer Support Chapter Downloading Installing SOA Software Policy Manager Agent Server Application Server Overview Download Server Agent (soa-tc Server-6.1.xxx.zip) Install Server Agent (soa-tc Server-6.1.xxx.zip) Policy Manager Release Directory................ Chapter Configuring Server Agent Container using Configure Container Instance Wizard Overview Configure Server Container Instance Configure Server Container Instance (GUI) Configure Server Container Instance (Silent Configuration)....................................................... Chapter Configuring Server Application Server instance Overview Deploying Server Agent WAR File Server Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console.................................................................................... Installing Server Agent Feature Configuring Server Agent Feature Configure WS-MetaDataExchange Options Server Agent) Manage PKI Keys Server Agent)............................................................................................... Perform SOA Software Administration Console Login Server Agent) Chapter Registering Server Agent Container Policy Manager Management Console Overview Register Server Agent Container................................................................................................ Chapter Managing Server Web Services Server Agent Overview Configure Service Filter.................................................................................................................. Register Managed Physical Services Policy Manager................................................................ Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Preface Table Figures Figure Welcome Configure Container Instance--tc Server Deployment Figure Instance Name--tc Server Deployment.................................................................................. Figure Default Admin User--tc Server Deployment........................................................................... Figure Instance Configuration Options-- Server Deployment........................................................ Figure Server Application Server Settings--tc Server Deployment................................................ Figure Instance Configuration Summary--tc Server Deployment...................................................... Figure SOA Software Administration Console Login.......................................................................... Figure Server Agent Feature Installation--Available Features Tab Figure Server Agent Feature Installation--Install Feature Resolve Phase Figure Server Agent Feature Installation--Install Feature Feature Resolution Report................ Figure Server Agent Feature Installation--Install Feature Installation Complete Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options)--tc Server Agent Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options Summary)--tc Server Agent Figure Manage PKI Keys Wizard (Select Key Management Option)--tc Server Agent Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)--tc Server Agent Figure Manage PKI Keys Wizard (Summary)--tc Server Agent Figure SOA Software Administration Console--Login Server Agent) Figure Register Server Agent--Add Container Wizard (Select Container Type) Figure Register Server Agent--Add Container Wizard (Specify Metadata Import Options Metadata URL selected) Figure Register Server Agent--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) Figure Register Server Agent--Add Container Wizard Certificate Not Trusted)................. Figure Register Server Agent--Add Container Wizard (Specify Container Details)....................... Figure Register Server Agent--Add Container Wizard (Completion Summary) Figure Register Server Agent--Container Details.......................................................................... Figure Register Web ServiceCreate Physical Service Wizard (Select WSDL location)................... Figure Register Web ServiceCreate Physical Service Wizard (Select Service Management Option) Figure Register Web ServiceCreate Physical Service Wizard (Select Container)........................ Figure Managed Service Details Figure Managed Service Monitoring Logs Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Preface Preface SOA Software Service Manager Agent Server Server Agent) adaptor enables Server become Container Policy Manager SOA Software Policy Manager Agent Server Installation Guide provides instructions installing configuring Server Agent Windows, supported UNIX platforms. GUIDE guide includes following chapters: Chapter \"Downloading Installing Policy Manager Agent Server\" provides list steps downloading Server Agent SOA Software Customer Support site, installing Policy Manager Release Directory. Chapter \"Configuring Server Agent Container using Configure Container Instance Wizard\" provides list steps configuring Server Agent SOA Container using \"Configure Container Instance Wizard.\" Chapter \"Configuring Server Application Server\" provides list steps deploying Server Agent feature Server Console. Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console provides instructions installing configuring Server Agent feature using SOA Software Administration Console Chapter Registering Server Agent Container Policy Manager Management Console Chapter \"Managing Server Web Services Server Agent\" provides steps configuring Servlet Filter invokes Server Agent manage web services. SYSTEM REQUIREMENTS SOA Software Policy Manager Server Agent feature supports following configurations: Note: configuration does not match certified versions listed each product below, plan upgrade SOA Software Platform please contact SOA Support Customer Support before proceeding. Copyright SOA Software, Inc Policy Manager Agent tc-Server Installation Guide Preface Product Server Application Server SOA Software Platform Certified Versions vfabric-tc Server-standard-2.7.0.RELEASE SOA Software Platform SOA Software Platform Updates: SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update SOA Update PREREQUISITES Prior beginning Server Agent installation process, following prerequisite conditions must met. SYSTEM REQUIREMENTS Policy Manager Policy Manager must installed updates described \"Prerequisites\" section. Policy Manager instance hosting Server Agent installed new Server Container, separate container. already Policy Manager container defined, make sure prerequisite set updates applied using Configure Container Instance Wizard, prior installing Server Agent feature. Refer Policy Manager Installation Guide Windows UNIX Platforms available SOA Software Support site Downloads section more information. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Preface Server Application Server Server Application Server (vfabric-tc Server-standard-2.7.0.RELEASE) must installed least Application Server instance configured. creating server instances, refer server distribution's README .txt file. CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. Updates product documentation issued periodic basis available submitting email request support@soa.com. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Downloading Installing SOA Software Policy Manager Agent Server Application Server Chapter Downloading Installing SOA Software Policy Manager Agent Server Application Server OVERVIEW After completed prerequisite tasks installing Policy Manager Application files installing configuring Policy Manager features via SOA Software Administration Console, must install Policy Manager Agent Server Application Server feature Policy Manager Release Directory. DOWNLOAD SERVER AGENT (SOA-TC SERVER-6.1.XXX.ZIP) Server Agent available extractable .zip file (soa-tc Server-6.1.xxx.zip). Download Server Agent Option Pack Step Procedure Download Server Agent SOA Software Support site. Refer support.soa.com Downloads Agents Server section). zip file includes following .jar files: com.soa.feature.agent.tc Server_6.1.xxxx.jarEnables \"Agent\" feature adds container capability host physical services. INSTALL SERVER AGENT (SOA-TC SERVER-6.1.XXX.ZIP) POLICY MANAGER RELEASE DIRECTORY After Server Agent .zip (soa-tc Server-6.1.xxx.zip) downloaded, must extracted Policy Manager Release Directory. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Downloading Installing SOA Software Policy Manager Agent Server Application Server Extract Server Agent Policy Manager Release Directory Step Procedure Copy Server Agent (soa-tc Server-6.1.xxx.zip) Policy Manager Release Directory Extract zip file (soa-tc Server-6.1.xxx.zip) Policy Manager Release Directory. Overwrite any existing files. automated zip file copies series files sm60\\lib sm60\\instances folders Policy Manager Release Directory. After extracting Server Agent package, next step configure SOA Container Server deployment. covered Chapter Configuring Server Agent Container Instance. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Chapter Configuring Server Agent Container using Configure Container Instance Wizard OVERVIEW chapter provides instructions installing configuring Server SOA Container instance. configuration process creates Web Archive (WAR) file automatically deployed Server Application Server instance. CONFIGURE SERVER CONTAINER INSTANCE section provides instructions configure new Server Container Instance using Configure Container Instance Wizard. Instructions GUI Silent configurations provided. CONFIGURE SERVER CONTAINER INSTANCE (GUI) Configure Container Instance--tc Server Deployment Step Procedure Run Command Prompt Administrator. Navigate Policy Manager release directory c:\\sm60\\bin enter: startup configurator Welcome Configure Container Instance Wizard screen displays. Review information click Next continue. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Configure Container Instance--tc Server Deployment Figure Welcome Configure Container Instance--tc Server Deployment Instance Name screen displays. specify name SOA Software Container Instance. instance name unique easily identifiable ServerAgent). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Figure Instance Name-- Server Deployment Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Configure Container Instance--tc Server Deployment Default Admin User screen displays. Define Username Password credentials administrator using SOA Software Administration Console. Password field includes default password used log SOA Software Administration Console. Hide Password checkbox allows display password encrypted unencrypted. view default password, uncheck Hide Password checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Figure Default Admin User--tc Server Deployment Instance Configuration Options screen displays. select container deployment option. Deployment Options section, select Server, click Next continue. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Configure Container Instance--tc Server Deployment Figure Instance Configuration Options-- Server Deployment Server Application Server Settings screen displays. instance deployed existing Server installation. Configure Server Settings. Specify Context Path access new SOA container (default /soa), Server port connects Server instance. Provide instances directory, instance application base Admin console related services. Figure Server Application Server Settings--tc Server Deployment Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Configure Container Instance--tc Server Deployment After specifying Server settings click Next. Instance Configuration Summary screen displays. complete configuration Server Deployment option, click Finish. Configure Container Instance Wizard completes configuration. Figure Instance Configuration Summary--tc Server Deployment configuration process creates Web Archive (WAR) file stored <Home><tc Server installation directory>/<instance-name>/webapps app server installation Directory. CONFIGURE SERVER CONTAINER INSTANCE (SILENT CONFIGURATION) section provides instructions configure automated configuration properties file used create new Server Container Instance. Configure Server Container Instance (Silent Configuration) Step Procedure Configure Container Instance Wizard set run automated mode silent). done defining properties file pre-defining set property values used Configure Container Instance Wizard automatically configure Container instance. Define properties file creating Server Container Instance myprops.properties) Add following content: container.instance.name=instancename Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Agent Container using Configure Container Instance Wizard Configure Server Container Instance (Silent Configuration) container.key=instancename credential.username administrator credential.password password admin.console.otp=onetimepassword default.host=tc Server host default.port=8080 deployment= tcServer tcserver.instance.dir=C:\\<tc Server Home>\\<server instance> tcserver.context.path=/soa tcserver.application.base= C:\\<tc Server Home>\\<server instance>\\webapps Properties following properties used Server Deployments. container.instance.name--Name Container. container.key--SOA recommends Container Key set same value Container Name. credential.username--Username logging SOA Software Administration Console. credential.password--Password logging SOA Software Administration Console. deployment--To specify deployment Server\". default.host--Host name/IP address Container Instance. default.port--Port Container Instance. default Server port. tcserver.instance.dir-- Specify Server instance directory. tcserver.context.path--Specify /soa Server \"Context Path.\" tcserver.application.base Specify deployment directory server instance. Running Silent Configuration Configure Container Instance Wizard (Silent Configuration) properties file accepts two system properties together used perform silent configuration: silent True, silent configuration performed) properties (location property file file system used configuration) Windows: <PM-Home>\\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=C:/<property file directory location>/myprops.properties\" UNIX <PM-Home>/sm60/bin>startup.sh configurator -Dsilent=true Dproperties=/export/home/username/<property file directory location>/myprops.properties configuration process creates Web Archive (WAR) file stored <Home><tc Server installation directory>/<instance-name>/webapps Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Configure Server Container Instance (Silent Configuration) app server installation Directory. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Configuring Server Application Server instance Chapter Configuring Server Application Server instance OVERVIEW chapter provides list steps configuring Server Application Server run Server Agent feature. Tasks include adding Server Agent .jar files system class path Server servers deploying Server Agent WAR file. During Server Agent configuration using Configure Container Instance Wizard, few.jar files placed automatically Server Home>/<tc Server instance>/lib directory. below jars used agent feature. Step Procedure agent feature installation below jars automatically copied Server Home>\\<tc Server instance>\\lib directory. com.soa.agent.shared_6.1.xxxx.jar com.soa.mp.agent.shared_6.1.xxxx.jar com.soa.agent.jaxws.shared_6.1.xxxx.jar com.soa.delegate.client_6.1.xxxx.jar DEPLOYING SERVER AGENT WAR FILE SERVER used SOA Software Configure Container Instance Wizard define SOA Container Server Agent, Web Archive (WAR) file created deployed Server Home>\\<tc Server instance>\\webapps folder application server installation Directory. files contain bootstrap code load SOA Service Manager SOA Container any installed features Server Agent SOA Delegate. WAR file must installed each Server Application Service running applications need Server Agent processing. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console INSTALLING SERVER AGENT FEATURE section provides walkthrough installing SOA Software Policy Manager Agent Server Server Agent) feature. Install Server Agent Feature Step Procedure Launch SOA Software Administration Console: http://<tc Server-server-host>:8080/soa/admin/ Figure SOA Software Administration Console Login SOA Software Administration Console, click Available Features tab. list available features displays. select SOA Software Policy Manager Agent Server Application Server feature, click checkbox next feature line item. After clicking checkbox, Install Feature button displays focus. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Install Server Agent Feature Figure Server Agent Feature Installation-- Available Features Tab begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. Resolve phase, system determines bundle package dependencies selected feature. Figure Server Agent Feature Installation--Install Feature Resolve Phase After Resolve phase complete, Feature Resolution Report presented includes list dependencies selected feature. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Install Server Agent Feature Figure Server Agent Feature Installation--Install Feature Feature Resolution Report begin installing feature click Install Feature. Installing... status displays along progress indicator. installation process completed, Installation Complete screen displays feature(s) being installed removed listing under Available Features tab transitioned Installed Features tab. Figure Server Agent Feature Installation--Install Feature Installation Complete Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Install Server Agent Feature After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer Configuring Feature Server Agent) information feature configuration. CONFIGURING SERVER AGENT FEATURE After installing Server Agent feature via Available Features tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking Configure button Installation Complete screen end feature installation process. second track allows resume configuration later time clicking Cancel Installation Complete screen executing Complete Configuration button Pending Installation Tasks section via Installed Features tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available Configuration Actions section Configuration tab. Tasks re-executed needed. Note: task assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Configure Server Agent Feature Step Procedure Select following configuration tracks, begin configuration process Server Agent feature. Installed Features Tab: Click Complete Configuration Pending Installation Tasks section. Available Features Tab: Click Configure Installation Complete screen feature installation wizard. first page displays WS-MetaDataExchange Options screen. starting point beginning Server Agent configuration. following sections provide walkthrough each task configuration wizard Server Agent feature. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console CONFIGURE WS-METADATAEXCHANGE OPTIONS SERVER AGENT) WS-MetaDataExchange Options screen allows specify URL Policy Manager \"Metadata Exchange Service.\" Connecting \"Metadata Exchange Service\" enables communication between current SOA Software Container instance Policy Manager retrieve key information service hosting, database, etc.). Specifying \"WS-MetaDataExhange\" URL required installation task Server Agent feature. Policy Manager URL found viewing Access Point URL \"Metadata Exchange Service\" viewing WSDL \"Metadata Exchange Service\" <SOAP:address location>. wsmex address use include port number specified defined container using Configure Container Instance Wizard. example address \"http://soa-pmserver:9900/wsmex.\" Configure WS-MetaDataExchange Options Server Agent) Step Procedure Enter following \"Metadata Exchange Service\" URL field display: http://soa-pm-server:9900/wsmex After completing entry, click Finish. WS-MetaDataExchange Options Summary screen displays. Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options)--tc Server Agent Review summary information click Continue Next Task. Select Key Management Option screen displays. Manage PKI Keys section details performing task. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Configure WS-MetaDataExchange Options Server Agent) Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options Summary)--tc Server Agent MANAGE PKI KEYS SERVER AGENT) section provides instruction configuring PKI keys current container. Configure PKI Keys Server Agent) Step Procedure Manage PKI Keys Wizard executed either installation task configuration action Server Agent feature. wizard allows configure private key certificate container communicating governance console. first screen displays Manage PKI Keys Wizard Select Key Management Options screen. organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned object. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current object. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current object. Option categories include Generate, Import, Export, Delete. Available objects displayed focus\" based object's configuration \"state.\" Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Configure PKI Keys Server Agent) Figure Manage PKI Keys Wizard (Select Key Management Option)-- Server Agent Key Management Options section, select option click Next continue. pre-selected option assigned default. Generate PKI keys Certificate screen displays. Generate PKI Keys Certificate screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). Key Length section, select radio button key length based requirements. Certificate Details section includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select Key Length enter Certificate Details based requirements. After completing entries, click Finish. Certificate details displayed Summary screen. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console Configure PKI Keys Server Agent) Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)--tc Server Agent Figure Manage PKI Keys Wizard (Summary)-- Server Agent Click Finish complete keys configuration. following message displays: recommended restart system.\" Click restart Server Application Server manually. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Installing Configuring Server Agent Feature using SOA Software Administration Console PERFORM SOA SOFTWARE ADMINISTRATION CONSOLE LOGIN SERVER AGENT) After system exits SOA Software Administration Console, Login screen displays. Select Admin Console domain click Enter log back continue system administration activities. Figure SOA Software Administration Console-- Login Server Agent) Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Chapter Registering Server Agent Container Policy Manager Management Console OVERVIEW chapter provides instructions register Server Agent Container. process involves configuring SOA Container using Add Container function Policy Manager Management Console. REGISTER SERVER AGENT CONTAINER Register Server Container Step Procedure After successfully installing configuring Server Agent feature, next step register Server Agent Container Policy Manager Management Console. Login Management Console navigate Organization Containers. Containers Summary screen displays. Click Add Container. Add Container Wizard launches Select Container Type screen displays. SOA Container Types section click SOA Container radio button. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Register Server Container Figure Register Server Agent-- Add Container Wizard (Select Container Type) Click Next continue. Specify Metadata Import Options screen displays organized follows: Metadata Options Metadata URL--This option used enter URL address represents location Metadata retrieved. input format \"http://[computer name]:[port]/ContextPath/metadata/.\" Metadata Path--This option used enter file system path metadata document. obtain Metadata Document perform following steps: Access Metadata URL http://tc Server-host:8080/soa/metadata) any browser. After accessing URL browser, Right click page select View Page Source. Save opened page using .xml format. Authentication Options section allows specify options pass credentials used retrieve container metadata. Three options available: Anonymous--this option does not pass user credentials container retrieve its metadata. Logged User--this option does not pass user credentials container retrieve its metadata. Specify Credentials--this option passes supplied credentials Username, Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Register Server Container Password, Domain fields container retrieve its metadata. Configure Metadata Authentication option click Next continue. Figure Register Server Agent-- Add Container Wizard (Specify Metadata Import Options Metadata URL selected) Figure Register Server Agent-- Add Container Wizard (Specify Metadata Import Options Metadata Path selected) metadata contains self-signed certificate does not reside Policy Manager Trusted Certificate Authority store, receive Certificate Not Trusted\" screen. add current certificate Trusted Certificate Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Register Server Container Authority store, manually add using Import Trusted Certificate function \"Configure Security Certificates Trusted Certificates\" section \"Management Console. Select \"Yes\" add certificate Policy Manager Trusted Certificate Authority store, click Next. \"Specify Container Details\" screen displays. Selecting returns \"Select Container Type\" screen. Click \"Yes\" radio button, click Next continue. Figure Register Server Agent-- Add Container Wizard Certificate Not Trusted) \"Container Details\" screen displays. Each container definition needs instance name description distinguish container types, encryption seed Container Key) ensure security launched, must assigned Organization. \"Organization\" represents owner container. screen organized two sections: Container Details Type--Displays container type. Container Key--A field display used specify custom container encryption key. custom key specified, Policy Manager auto-generate key. Instance Name--A field display allows specify instance name container. Description--A field display allows specify description container. \"Organization Tree\" allows select organization represents owner container. Organization Tree Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Register Server Container Figure Register Server Agent-- Add Container Wizard (Specify Container Details) Complete entries click Finish continue. \"Add Container Wizard\" configures container saves information Policy Manager data repository. configuration process complete, \"Completion Summary\" screen displays. After reviewed summary screen, click Close. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Registering Server Agent Container Policy Manager Management Console Register Server Container Figure Register Server Agent-- Add Container Wizard (Completion Summary) Server Agent Container successfully registered \"Management Console\" Container Details screen displays. Figure Register Server Agent--Container Details Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Managing Server Web Services Server Agent Chapter Managing Server Web Services Server Agent OVERVIEW Server Agent intercepts web service calls way Servlet Filter must configured developer. After Server Agent installation complete, must update web service EAR/WAR file servlet filter activate Server Agent SOA Container apply selected security policies web services managed Server Agent. managed EAR/WAR file include SOA Software Servlet Filter invokes Server Agent manage web services. must deploy managed EAR file replace unmanaged EAR/WAR file Server, register physical services Policy Manager Management Console host services Server SOA Container. After configuration complete, able attach policies managed physical services monitoring security. MESSAGE FLOW request message intercepted before reaches web service. interception point, policy enforced request message. policy enforcement fails, fault returned without message being delivered caller. succeeds, request message (potentially, modified during request policy execution) allowed delivered web service. web service response message ready delivered caller, interception policy applies response policy message before delivering response message (potentially, modified during response policy execution) caller. message intercepted using alternate approach different web service implementation stacks used. servlet filter invoked Web container HTTP(S) requests, HTTP(S) services managed managing J2EE web services. document, Interception point, handler filter interchangeably used referring interception point used SOA Container. agent servlet filter receives message, prepares object request handed agent application running same SERVER application server entire policy enforcement take place different class loader. approach used avoid conflict java classes web service class loader server class loader. reason, agent application always run Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Managing Server Web Services Server Agent parent last class loading mechanism agent classes higher preference. object used wrap request message part jar loaded server class loader. jar generally referred shared jar loaded class loader shared applications running SERVER instance. CONFIGURE SERVICE FILTER SERVER Agent activated adding following elements WEBINF/web.xml file WAR contains service implementations managed. SOAP based: <filter> <filter-name>SOAAgentFilter</filter-name> <filter-class>com.soa.agent.servlet.AgentFilter</filter-class> <init-param> <param-name>agenturi</param-name> <param-value>http://soa.com/agents/soap</param-value> </init-param> <init-param> <param-name>methods</param-name> <param-value>POST</param-value> </init-param> </filter> <filter-mapping> <filter-name> SOAAgentFilter</filter-name> <url-pattern><url-pattern-of-service-endpoint></url-pattern> </filter-mapping> based: <filter> <filter-name>SOAAgentFilter</filter-name> <filter-class>com.soa.agent.servlet.AgentFilter</filter-class> <init-param> <param-name>agenturi</param-name> <param-value>http://soa.com/wsdl/http</param-value> </init-param> <init-param> <param-name>methods</param-name> <param-value>POST,GET,PUT,DELETE</param-value> </init-param> </filter> <filter-mapping> <filter-name> SOAAgentFilter</filter-name> <url-pattern><url-pattern-of-service-endpoint></url-pattern> </filter-mapping> Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Managing Server Web Services Server Agent REGISTER MANAGED PHYSICAL SERVICES POLICY MANAGER Register Managed Physical Services Policy Manager Step Procedure Log Policy Manager \"Management Console.\" Register web service modified previous steps physical service provide service details. Figure Register Web ServiceCreate Physical Service Wizard (Select WSDL location) Manage service Server container. Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Managing Server Web Services Server Agent Register Managed Physical Services Policy Manager Figure Register Web ServiceCreate Physical Service Wizard (Select Service Management Option) Figure Register Web ServiceCreate Physical Service Wizard (Select Container) Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide Chapter Managing Server Web Services Server Agent Register Managed Physical Services Policy Manager Attach policy managed physical service. DetailedAuditing policy used example. Figure Managed Service Details Testing Configuration: Send request physical service, able monitoring data Auditing Policy attached. Figure Managed Service Monitoring Logs Copyright SOA Software, Inc. Policy Manager Agent tc-Server Installation Guide"},{"title":"API Gateway Appliance Install Guide 6.2","url":"/ag/api_gateway_appliance_install_guide_v6.2.html","date":null,"type":"pdf","description":"The Install instructions for API Gateway Appliance 6.2.","categories":[],"body":"SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Table Contents SOA SOFTWARE API GATEWAY APPLIANCE INSTALLATION GUIDE VMWARE Preface Overview............................................................................................................................................. Deployment Diagrams Guide Deploying Installing API Gateway Appliance Overview............................................................................................................................................. Step Download API Gateway Appliance Step Deploy API Gateway Appliance Step Select API Gateway Appliance Features..................................................................... Step Use Appendix System Requirements Appendix Console Default Credentials Appendix Setting Community Manager Tenant Appendix Documentation Appendix Customer Support Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware PREFACE OVERVIEW SOA Software API Gateway virtual appliance virtual machine provides automated installation configuration approach SOA Software's Community Manager, Policy Manager, Network Director. Product installations packaged following feature sets: Option SOA Software API Gateway Master Installs virtual machine Policy Manager, Network Director, MySQL Server. Option SOA Software API Gateway Master--Community Manager Installs virtual machine Community Manager, Policy Manager, Network Director options installing internal MySQL database using external database Oracle, Microsoft SQL Server, MySQL Server). Option SOA Software API Gateway Slave Installs virtual machine Network Director. Network Director instance node Network Director Cluster created master appliance. DEPLOYMENT DIAGRAMS choose option deployment scenarios described diagrams below decide feature install. Note: Option SOA Software API Gateway Slave used plan deploy Network Director Cluster scenario. Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Figure Deployment Diagram Feature Option (SOA Software API Gateway Master) Multiple Instances Feature Option (SOA Software API Gateway Slave) Figure Deployment Diagram Feature Option (SOA Software API Gateway Master Community Manager) Multiple Instances Feature Option (SOA Software API Gateway Slave) Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware GUIDE guide includes following: Deploying Installing API Gateway Appliance Step Download API Gateway Appliance Step Deploy API Gateway Appliance Step Select API Gateway Appliance Features Step Use Appendix System Requirements Appendix Console Default Credentials Appendix Setting Community Manager Tenant Appendix Documentation Appendix Customer Support Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware DEPLOYING INSTALLING API GATEWAY APPLIANCE OVERVIEW following instructions tell deploy install SOA Software API Gateway Appliance supported VMware environments. Note: need help determining console password, refer Appendix Console Default Passwords. STEP DOWNLOAD API GATEWAY APPLIANCE Download SOA Software API Gateway Appliance ZIP OVF files local machine via SOA Software Customer Support website (support.soa.com) following location: Downloads API Gateway Select format supported VMware version using Appendix System Requirements). VMware Version VMware vCenter Server VMware ESX VMware Workstation Setup File Type OVF ZIP STEP DEPLOY API GATEWAY APPLIANCE Before start VMware, verify Memory Network Adaptor settings comply those specified Appendix System Requirements. deployment process automatically assigns default host name soagw. Deploy API Gateway Appliance Step Procedure VMware ESX Use vCenter Deploy OVF Template wizard deploy OVF file. Select Power after deployment. VMware Workstation Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Deploy API Gateway Appliance Extract downloaded ZIP file local folder. Use VMware Workstation Open vmxf file. Select Power virtual machine. During installation process: use space bar scroll down end agreement. Accept license agreement. deployment process takes approximately three minutes. After initial deployment, presented Login Set Timezone (Current: <timezone>) options. Set Time Zone: recommend setting system time zone before starting installation. Policy Manager automatically installed according system time zone. change time zone Policy Manager Management Console after complete installation. first login, enter root login credentials admin/password provide new password. Refer Appendix Console Default Credentials information default passwords password rules. Login: Note: performing change password process, remember enter default password first, followed new password confirmation. Please make sure remember password. new password login credentials API Gateway Appliance Administration Console. After deployment complete, continue Step Select API Gateway Appliance Features. STEP SELECT API GATEWAY APPLIANCE FEATURES After complete initial login process upload MySQL Connector, configure API Gateway Appliance selected feature sets. three configuration options, each different configuration requirements. Option Feature Set Name SOA Software API Gateway Master Description Includes Policy Manager Network Director features, internal MySQL Server. Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Option Feature Set Name SOA Software API Gateway Master Community Manager Description Includes Community Manager, Policy Manager Network Director features. feature set offers two Database support options: Create database internal MySQL Server. Use external database. appliance supports Oracle, Microsoft SQL Server, MySQL Server). Note: using Microsoft SQL Server, uploading database driver file not required it's included part feature set installation. SOA Software API Gateway Slave Includes Network Director feature. must specify address API Gateway Master. enables API Gateway Slave connect database API Gateway Master. API Gateway Master must running SOA Software API Gateway Slave feature being installed. Note: Refer Deployment Diagrams section Preface decide feature set install. Each virtual appliance support single feature set. Install API Gateway Appliance Features Choose feature set install displayed list. During installation, list tasks being performed installation, configuration, startup, expected time completion). startup process takes approximately three minutes. Note Linux interface may show notification describes status expected wait time. choose install Option SOA Software API Gateway Master--Community Manager external database) Option SOA Software API Gateway Slave, prompted \"Enter Gateway Gateway must string without space contain letters, numbers dash character. Upload Database Driver File First download database driver MySQL Oracle website (MySQL: com.springsource.com.mysql.jdbc-5.1.6.jar, Oracle: ojdbc6.jar). launch https://ip:5480/dbdrive.html browser upload MySQL Server Oracle database driver. SOA Software Slave Feature Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Install API Gateway Appliance Features choose SOA Software API Gateway Slave feature, prompted more information: Enter hostname primary gateway prompt, specify address Master API Gateway password admin user. API Gateway Master must running. exchange admin user account SSH public keys primary slave gateways enable communication after installation complete. Verify API Gateway Appliance Installation After appliance installation complete, system displays API Gateway Appliance Administration Console URL launch complete remaining installation tasks. default URL https://<ip address>:5480/. illustrate you've accomplished: Log API Gateway Appliance Administration Console API Gateway Master (https://<ip address>:5480/). Management tab, container instances installed. installed Option SOA Software API Gateway Master, use Policy Manager Management Console URL log using default credentials (administrator/password) http://<ip address>:9900/. Policy Manager Management Console, select Containers folder root level Organization verify Network Director container running (State Started). multiple Network Director Slaves, verify Network Director containers running. Option SOA Software API Gateway Master--Community Manager chose Option SOA Software API Gateway Master Community Manager, must create tenant. Management tab API Gateway Administration Console, click Create Tenant... under Tenant Management section. opens Create Tenant page. Enter values fields Create Tenant page. Refer Appendix Setting Community Manager Tenant more information each field Create Tenant page. not use any additional context paths Address field, root example, use http://[hostname]:9980, not http://[hostname]:9980/abc/. After specifying values click Create Tenant. not close page until receive successful pop-up message. Creating tenant takes approximately three minutes displays following message upon completion: Creating tenant, please not close window wait three minutes... close window before receiving confirmation tenant successfully created, cannot use tenant created backend. Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware Verify API Gateway Appliance Installation After create tenant, verify works clicking link tenant created. Note: using external database, tenant URL not displayed. Note: Verify tenant name accessible network. access Community Manager Console local system, must add hostname following hosts file: Windows: C:\\Windows\\System32\\drivers\\etc LINUX: /etc/hosts. Refer SOA Software API Gateway Appliance Administration Guide use API Gateway Appliance Administration Console complete series general configuration tasks apply feature sets including: Configuring Network Address Proxy Settings Updating API Gateway Appliance STEP USE you've completed installation more API Gateway feature sets, it's time start using system publish services, monitor services, define policies, Refer Policy Manager Getting Started Guide details. Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware APPENDIX SYSTEM REQUIREMENTS following table provides hardware requirements, list VMware versions SOA Software API Gateway Appliance product certified list minimum system requirements running SOA Software API Gateway Appliance. Item VMware Environment Host API Gateway Virtual Appliance Resources required API Gateway Virtual Appliances Requirement VMware vCenter ESX (Requires OVF setup file) VMware Workstation (Requires ZIP setup file) 64-bit Processor Memory: default recommended memory size minimum. CPU: cores Hard Drive: Network Adapter: Ethernet Network Adapter Address: DHCP server required provide address. static address required configured primary virtual appliance slave virtual appliances 4neet set IPV4 supported. DNS Setting: host name each tenant must configured DNS server virtual appliance needs host tenants. Communication Port: TCP Internet Explorer Mozilla Firefox Web Browser Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware APPENDIX CONSOLE DEFAULT CREDENTIALS following table provides default username password credentials used during API Gateway Appliance installation tasks logging consoles accessed via API Gateway Appliance Administration Console. Console Name Root Login Credentials initial API Gateway Appliance Installation) Default Username Password first login, enter root login credentials admin/password provide new password. Note: performing change password process, remember enter existing password first, followed new password confirmation. new password login credentials API Gateway Appliance Administration Console. forget root login credentials contact SOA Software Customer Support. Password must characters length cannot contain space. Password cannot include Linux reserved words. Password cannot reverse, same change case, similar, rotated version previous password. default login Policy Manager Management Console administrator/password. After log Policy Manager, change administrator password via Security tab. default login SOA Software Administration Console administrator/password. change Administrator credentials, log SOA Software Administration Console, use Manage Admin Console Administrator function Configuration Configuration Actions section. Password Rules: Policy Manager Management Console SOA Software Administration Console Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware APPENDIX SETTING COMMUNITY MANAGER TENANT Community Manager requires least tenant. Each tenant logically separate every tenant keyed hostname used access console. following table provides brief description each field Create Tenant page: Field URL Description base URL Platform API. URL normally structured similar following: http://[hostname/ip address]:9980. hostname Address SOA container running. normally context unless product running application server. friendly name tenant may used emails, etc. internal tenant. cannot spaces special characters. lower case. normally lower case (without spaces) version tenant name above. appear object ids URLs system. base URL tenant. hostname must unique. hostname used browser accessing product use identify tenant. not use any additional context paths Address field, root example, use http://[hostname]:9980, not http://[hostname]:9980/abc/. same Address: full URL Community Manager running. Console Address used browser accessing theme identifier. typically set \"default\" unless custom theme developed. email address used default tenant administrator. password configure default tenant administrator. Used email templates. Account used system send email. comma-separated list host names product accept \"open.soa.com\") Tenant Name Tenant Address Console Address Theme Email Address Password Contact Email Address Email Address Virtual Hosts Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware APPENDIX DOCUMENTATION After base product installation complete, refer following product documentation Policy Manager administration usage information. API Gateway Appliance Administration Guide Policy Manager Getting Started Guide Policy Manager Online Help Policy Manager Administration Guide Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware SOA Software API Gateway Appliance Installation Guide VMware APPENDIX CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Support Site support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. SOA Software Customer Support website (https://support.soa.com/support) Copyright SOA Software, Inc. SOA Software API Gateway Appliance Installation Guide VMware"},{"title":"Configuring SOAP to REST","url":"/ag/configuring_soap_to_rest.html","date":null,"type":"pdf","description":"A guiide for configuring SOAP to REST mediation using Policy Manager version 6.x.","categories":[],"body":"Configuring SOAP REST Policy Manager checklist below provides summary steps required configure mediation Network Director between SOAP REST shown diagram below. Component column matrix below lists SOA component task must performed. Compone Policy Manager Console Description Task Workbench Tab. Select Organization register physical service. Actions Portlet, select option Create Physical Service. Select Service Creation Option screen, select `Create service schema'. Specify Physical Service Properties screen, enter following WSDL read Policy Manager: Name: physical service name, any name used identify service Service Key: left blank, Policy Manager generate unique key. Leave blank. Qname: (Namespace URI) Namespace URI service, most cases service namespace URI. field not filled enter namespace service http://myservice.com) Qname: (Localpart) service name read WSDL, example myRESTService. Binding Type: Leave default option selected. Create Physical REST Service Virtualize Physical Service Policy Manager Console Provider Organization: Verify organization physical service registered.. Click Next Select Service Management Option screen select `Use Existing Schemas' option. Click Next. `Specify Operations' screen, click `Add Operation' each RESTful operation. example: `getSearch' define operation use method unique context path. After adding operation names click `Next'. `Specify Operations Details' screen define schema elements types populated each operations defined previous screen. Typical usecase assigning `Types'->'anyType' `Input', `Output', `Fault'. `Configure Binding Properties' screen, Define method POST PUT DELETE), URI Syntax /getSearch?query1={query1}&query2={query2}), each `Content Type'. choose define specific content type select `any not sure content type. Click `Next'. `Select Service Management Option', select `Manage through Virtual Service' uncheck `Act proxy service'. Click `Next'. Enter virtual service properties verify correct Virtual Service Provider Organization selected. Click Next. Select Network Director container Network Director cluster virtual service hosted. Enter Port Name Context path virtual service. port name any name describes virtual service. used WSDL virtual service. context path combined Listener URL defined Network Director create URL consumer uses invoke virtual service. After virtual service registered, back `Access Points' tab physical service add access point physical service. After adding physical endpoint, verify virtual service functioning correctly sending request through (Note: contract required send request virtual service). SOAP binding must added physical service support SOAP REST mediation. Click Configure Tab Registry sub-tab Bindings sub-tab. Bindings sub-tab, click `Add Binding'. Search physical service interface make sure displayed Interfaces: window. Adding binding physical service interface RESTful service support Specify Binding Details screen: Enter name binding LocalPart myServiceBindingSOAP). Verify Binding Type Soap Click Next Configure Binding Properties screen. Click `Finish' accept default values. Assign SOAP binding virtual service. Click virtual service organization tree. Click Manage Interfaces Bindings section Service Overview portlet. Interfaces assigned virtual service displayed Interfaces Assigned window. Click Next Bindings screen. Select Bindings screen, bindings available virtual service displayed. Check SOAP binding created step above. Policy Manager Console Click Finish. new URL required able invoke service using SOAPbinding created. configure URL: Select Network Director container Organization tree Click Hosted Services sub-tab select Action pulldown, select Modify Virtual Service Check SOAP binding enter WSDL Port Name binding. Network Director Container Hosted Services Specify Details screen, enter URL consumer use invoke service using SOAP. Policy Manager Console service virtualized Network Director virtual service setup proxy, default preserve headers request sent Network Director endpoint. verify header behavior, following: Select virtual service organization tree Click Operations sub-tab Select operation Click Implementation sub-tab. header behavior displayed. Virtual Service Operation SOAPAction needs defined deliver request virtual endpoint REST service. Download WSDL virtual endpoint http://win200864spt1.soa.local:9936/NYTimesAPI_soap_vs?wsdl Using text editor, open WSDL find SOAP action virtual SOAP binding. Enter virtual endpoint REST SOAPAction. Save WSDL. service Detail page virtual service click `Update Service'. Select WSDL path choose updated WSDL. Click `Next' select `Use exiting binding' Manage Duplicate Bindings' screen. Click `Finish'. calling SOAP endpoint, SOAPAction needs added header. request response shown below: Request: Client Network Director POST http://win200864spt-1.soa.local:9936/NYTimesAPI_vs1 Accept-Encoding: gzip,deflate Content-Type: text/xml;charset=UTF-8 SOAPAction: http://win200864spt-1.soa.local:9936/NYTimesAPI_vs0 User-Agent: Jakarta Commons-HttpClient/3.1 Host: win200864spt-1.soa.local:9936 Content-Length: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"> <soapenv:Header/> <soapenv:Body> <searchArticleInputPart> <format>json</format> <query>cost+des_facet%3A[DRUGS+(PHARMACEUTICALS)]</query> <facets>geo_facet</facets> <api-key>b962e61896e6e3e695ab4cc3e902e71d:9:67289801</apikey> </searchArticleInputPart> </soapenv:Body> </soapenv:Envelope> Response: Physical Service Network Director X-Mashery-Responder: mashery-web1-atl.mashery.com Server: nginx/1.0.10 Date: Tue, Feb GMT Content-Type: text/xml;charset=UTF-8 Connection: keep-alive X-Original-Transfer-Encoding: chunked Accept-Ranges: bytes Content-Length: Content-Encoding: gzip Transfer-Encoding: chunked <soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Header/><s oap:Body><getArticleOutputPart xmlns=\"http://www.w3.org/2001/XMLSchema\"><facets/><offs et>0</offset><results/><tokens><element>cost</element><element>des_facet%3A[DRUGS PHARMACEUTICALS)]</element></tokens><total>0</total></getArticleOutputPart></soap:Bo dy></soap:Envelope>"},{"title":"Getting Started with the API Gateway","url":"/ag/getting-started.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"Refer our Quick Start procedures App Developer API Provider running quickly. need become member, refer Basics section."},{"title":"Getting Started with Cross Site Scripting Detection Policy in Policy Manager 7.x","url":"/ag/getting_started_with_cross_site_scripting_policy.htm","date":null,"type":"document","description":"Learn how configure a tag white list to protect your web service from being exploited by cross site scripting.","categories":[],"body":"Learn configure tag white list protect web service being exploited cross site scripting. Cross Site Scripting Detection Policy Operational policy allows block potentially malicous HTML tags request message body using black white tag list approach. Say example web service includes anchor tag. attach default Cross Site Scripting Detection Policy REST service send request message Network Director container hosting service, receive Forbidden\" error. tag not defined policie's \"white list.\" Back top default policy state includes black list following tags: Back top Let's take quick walkthrough Cross Site Scripting Detection Policy configuration process started. Modify Cross Site Scripting Detection policy Policy Details page initial policy look use default policy (without defining white list) tags black list default policy (listed above) forbidden Network Director passes request message downstream service Forbidden error raised. next step define tag white list. represent tags comprise HTML request message body designated ones potentially attacked. White list tags allowed Network Director passes request message downstream service. following options available: After saved policy attach web service attach policy Organization level policy active services defined orgnization. Back top"},{"title":"Getting Started with Metrics Policy in Policy Manager 7.x","url":"/ag/getting_started_with_metrics_policy.htm","date":null,"type":"document","description":"Learn how to collect rollup data on specific services/operations using a Metrics Policy.","categories":[],"body":"Learn collect rollup data specific services/operations using Metrics Policy. Metrics Policy Operational policy allows collect roll-up data selected services/operations policy attached Metrics Policy useful works: Back top Let's take quick walkthrough Metrics Policy configuration process started. After saved policy attach web service operation capture roll-up data After attached Metrics Policy service operation, send request service Services Monitoring section view results Logs, Real Time Charts, Historical Charts. Refer Policy Manager Online Help Help button) more information using monitoring functions. Back top"},{"title":"Getting Started with Processes using Policy Manager 7.x","url":"/ag/getting_started_with_processes.htm","date":null,"type":"document","description":"Learn about common vs. operation-specific processes, documentation, management tools, and use cases using Policy Manager 7.x.","categories":[],"body":"Learn common operation-specific processes, documentation, management tools, use cases. SOA Software Policy Manager allows define web service orchestration concepts using XML-based graphical editor called Process Palette. define sequence messages flow through Policy Manager each virtual service operation configure variety different \"Activities\" achieving results required each operation. Let's take quick walkthrough process types tools available started. several approaches used configure process definitions. Common processes defined Processes folder referenced reused) virtual service operation process definition adding Process Activity. reusable approach save time make process development cycle more efficient. Figure. Create Common Processes Processes Folder Figure. Reference Process using Process Activity Service Operation Process Definition. Similar \"Common\" processes approach described above, use same approach scripts. Policy Manager Scripts Folder define series utility scripts performing commonly used tasks. accomplished using Add Script function. virtual service operation process definition, add Script Activity, import pre-defined script, add script reference function perform. example, may requirement validate data part process created reusable script TestScript) includes function validating data (validateData). process definition, import \"TestScript\" reference function script source illustrated below. Figure. Example Referencing Script Function Back top Process Function Reference includes tour Process Editor descriptions usage examples each Activity type. Familiarize yourself functionality, techniques, rules using each Activity ensure smooth process building process definitions. Back top Policy Manager Scripting API located \\sm70\\docs\\scriptDocs folder Policy Manager Release Folder provides series interfaces classes use build process related scripts. Back top Managing Processes topic includes overview tools Process Palette, functions apply common process definitions Processes folder. Back top addition usage examples covered Process Function Reference, we've created additional set use cases cover common process scenarios. Back top you've familiarized yourself high-level approach building processes, know reference materials tools available, start building processes. Back top"},{"title":"SOA Software API Gateway","url":"/ag/index.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"online document repository API Gateway suite products. site currently under construction, please check back frequently more documents."},{"title":"Learning about the API Gateway","url":"/ag/learning.html","date":null,"type":"document","description":"The API Gateway landing page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"Policy Manager 6.1 Installation Guide","url":"/ag/pm_install_guide_v6.1.html","date":null,"type":"pdf","description":"Install instructions for Policy Manager 6.1","categories":[],"body":"SOA Software Platform Installation Guide Windows UNIX Platforms SOA_Platform_Platform_Install_6.1_Rev1 Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Table Contents SOA SOFTWARE PLATFORM INSTALLATION GUIDE WINDOWS UNIX PLATFORMS................................................................................................. Preface Before Begin System Requirements.................................................................................................................. Installation Directory Installation Directory Folder Descriptions SOA Software Platform Program Group Guide Customer Support Chapter Installing Configuring SOA Software Platform Overview Manually Installing Schemas SOA Software Platform Setup Files Step Install SOA Software Platform Install SOA Software Platform (GUI) Install SOA Software Platform (Console) Install SOA Software Platform (Silent) Step Install SOA Software Platform Updates Step Configure Standalone Container Instance Configure Standalone Container Instance (GUI) Configure Standalone Container Instance (Silent) Step Launch SOA Software Administration Console Step Install Policy Manager Features Step Configure Policy Manager Features Configure Policy Manager Console/Web Services Configure PKI Keys (Policy Manager Console/Web Services) Configure Database Options (Policy Manager Console/Web Services)......................... Configure Policy Manager Administrator Credentials (Policy Manager Console/Web Services) Completing Configuration (Policy Manager Console/Web Services) Step Perform SOA Software Administration Console Login (Policy Manager Console/Web Services).............................................................................................................. Step Launch Policy Manager Management Console Chapter Installing Updates Existing SOA Software Platform Installation Confirm Installed Updates Manually Installing Schemas Update Existing SOA Software Platform Installation (Manual)................................... Update Existing SOA Software Platform Installation (Silent Update) Rollback Update Chapter Installing Configuring Network Director Copyright SOA Software, Inc. SOA Software Platform Installation Guide Overview Step Configure Network Director Container Instance Configure Network Director Container Instance (GUI) Configure Network Director Container Instance (Silent Configuration) Step Launch SOA Software Administration Console Step Install Feature (SOA Software Network Director) Step Configure Network Director Configure WS-MetaDataExchange Options (Network Director) Manage PKI Keys (Network Director) Completing Configuration (Network Director) Perform SOA Software Administration Console Login (Network Director) Step Register Network Director Container Chapter SOA Software Administration Console Overview Admin Console Organization Available Features................................................................................................................. Installed Features Configuration Repository System Appendix Start Stop Restart Container Instance................................ Start Stop Container Instance............................................................................................. Restart Container Instance Appendix Database Drivers Appendix Uninstalling SOA Software Platform.......................................... Overview Backup Procedures Uninstall SOA Software Platform (GUI)................................................................................ Uninstall SOA Software Platform (Console)......................................................................... Copyright SOA Software, Inc. SOA Software Platform Installation Guide Table Figures Figure SOA Software Platform Installation Directory--Complete Installation Figure Enter License Key--GUI Install Figure Introduction--GUI Install Figure SOA Software License--GUI Install Figure System Requirements--GUI Install Figure Choose Install Folder--GUI Install Figure Choose Shortcut Folder--GUI Install Figure Pre-Installation Summary--GUI Install Figure Installing--Progress Indicator Figure Install Complete--GUI Install Figure Enter License Key--Console Install Figure Introduction--Console Install Figure License Agreement--Console Install Figure System Requirements--Console Install Figure Choose Install Folder--Console Install Figure Welcome Configure Container Instance--Standalone Deployment Figure Instance Name--Standalone Deployment Figure Default Admin User--Standalone Deployment Figure Instance Configuration Options--Standalone Deployment Figure Default Listener--Standalone Deployment Figure Instance Setup--Standalone Deployment Figure Instance Configuration Summary--Standalone Deployment Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure Policy Manager Console/Web Services Installation--Available Features Tab Figure Policy Manager Console/Web Services Installation --Install Feature Resolve Phase Figure Policy Manager Console/Web Services Installation--Install Feature Feature Resolution Report Figure Policy Manager Console/Web Services Installation--Install Feature Install Progress Figure Policy Manager Console/Web Services Installation--Install Feature Installation Complete Figure Manage PKI Keys Wizard (Select Key Management Option)--Policy Manager Console/Web Services Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)--Policy Manager Console/Web Services Figure Manage PKI Keys Wizard (Summary)--Policy Manager Console/Web Services Figure Configure Database Options Wizard (Select Database Option--Create new database)--Policy Manager Console/Web Services Figure Configure Database Options Wizard (Select Database Option--Use existing database)--Policy Manager Console/Web Services Figure Specify Database Options SQL Server #1)--Policy Manager Console/Web Services Figure Specify Database Options SQL Server #2)--Policy Manager Console/Web Services Figure Specify Database Options (MySQL Server #1)--Policy Manager Console/Web Services Copyright SOA Software, Inc. SOA Software Platform Installation Guide Figure Specify Database Options (MySQL Server #2)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle SID #1)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle SID #2)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle Service Name #1)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle Service Name #2)--Policy Manager Console/Web Services Figure Specify Database Options #1)--Policy Manager Console/Web Services Figure Specify Database Options #2)--Policy Manager Console/Web Services Figure Configure Database Options Summary Figure Manage Schemas Wizard (Install Schemas)--Policy Manager Console/Web Services Figure Manage Schemas Wizard (Install Schemas Summary)--Policy Manager Console/Web Services Figure Define Policy Manager Administration Credentials--Policy Manager Console/Web Services Figure Define Policy Manager Administration Credentials (Credentials Summary)-- Policy Manager Console/Web Services Figure Complete Configuration--Policy Manager Console/Web Services Figure SOA Software Administration Console--Login Screen Figure Configure Container Instance Wizard--Welcome Configure Container Instance Figure Configure Container Instance Wizard--Instance Name Figure Instance Already Exists--Update Figure Configure Container Instance Wizard--Instance Configuration Summary (Complete Update) Figure Configure Container Instance Wizard--Update Complete Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure Configure Container Instance Wizard--Welcome Configure Container Instance Figure Configure Container Instance Wizard--Instance Name Figure Instance Already Exists--Rollback Figure Configure Container Instance Wizard--Instance Configuration Summary (Rollback Progress) Figure Configure Container Instance Wizard--Rollback Complete Figure Welcome Configure Container Instance Figure Instance Name--Standalone Deployment Figure Default Admin User--Standalone Deployment Figure Instance Configuration Options--Standalone Deployment Figure Default Listener--Standalone Deployment Figure Instance Setup--Standalone Deployment Figure Instance Configuration Summary--Standalone Deployment Figure SOA Software Administration Console--Login Figure SOA Software Network Director Installation--Available Features Tab Figure SOA Software Network Director Installation--Install Feature Resolve Phase Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface Figure SOA Software Network Director Installation--Install Feature Feature Resolution Report Figure SOA Software Network Director Installation--Install Feature Install Progress Figure SOA Software Network Director Installation--Install Feature Installation Complete Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options)--Network Director Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options Summary)--Network Director Figure Manage PKI Keys Wizard (Select Key Management Option)--Network Director Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)--Network Director Figure Manage PKI Keys Wizard Summary--Network Director Figure Complete Configuration--Network Director Figure SOA Software Administration Console--Login (Admin Console) Figure Register Network Director--Add Container Wizard (Select Container Type) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) Figure Register Network Director--Add Container Wizard Certificate Not Trusted) Figure Register Network Director--Add Container Wizard (Specify Container Details) Figure Register Network Director--Add Container Wizard (Completion Summary) Figure Register Network Director--Container Details Figure Register Network Director--Hosted Services Summary Figure SOA Software Administration Console--Available Features Figure SOA Software Administration Console--Installed Features Figure SOA Software Administration Console--Configure Figure Admin Console--Repository (Add Repository) Figure Admin Console--Search Updates Button Figure Admin Console--Searching Updates Figure Admin Console--Installed Features (Updates Found) Figure Admin Console--Installed Features (Updating) Figure Admin Console--Installed Features (Bundle Filter) Figure Admin Console--Rollback Changes Button Figure Admin Console--Installed Features (Rollback Changes) Figure Admin Console--Installed Features (Restart System after Rollback Message) Figure SOA Software Administration Console--System Figure SOA Software Administration Console--System Figure Start Uninstall--GUI Figure Cancel Installation--Uninstall Not Complete Message Figure Uninstall Warning Message Figure Uninstalling SOA Software Platform--GUI Figure Uninstall Complete--GUI Figure Start Uninstall--Console Figure Uninstalling SOA Software Platform--Console Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface Preface guide provides instructions installing SOA Software Platform SOA Software Platform Updates, configuring Container Instance, installing Policy Manager Features using SOA Software Administration Console, performing administration tasks. Installing configuring SOA Software Platform installing Policy Manager Features primary focus guide. Additional chapters provided installing Network Director, SOA Software Administration Console functionality, Appendix chapters covering container startup, database drivers, SOA Software Platform uninstall process. SOA Software Platform installed using platform-specific setup file loads \"SOA Software Platform Installation Wizard.\" configuration process performed using \"Configure Container Instance Wizard\" \"SOA Software Administration Console.\" BEFORE BEGIN SOA Software Platform installation process includes following mandatory pre-installation steps new upgrade installations: SOA Software Platform Pre-installation Requirements SOA Software Platform Installation Scenario New Installation Pre-installation Requirements First Installation--If installing SOA Software Platform release Policy Manager features) previous Service Manager installations exist, preinstallation requirements. New Installation without Upgrading--If installing new SOA Software Platform release, previous Service Manager release installed, not using migrating configuration data new release, perform following mandatory steps prior installing new Service Manager version: Quit previous Service Manager application version. Stop Service Manager-related Windows Services Service Manager Subsystems. Uninstall Service Manager Windows Services previous Service Manager versions. Refer \"Chapter Installing Configuring SOA Software Platform\" complete instructions performing SOA Software Platform Policy Manager feature installation process. currently Policy Manager upgrade Policy Manager refer \"Policy Manager Upgrade Technical Note.\" download guide SOA Software Customer Support website (https://support.soa.com/support). currently Service Manager upgrade Policy Manager refer \"Service Manager Upgrade Guide Windows UNIX Platforms Guide.\" download guide SOA Software Customer Support website (https://support.soa.com/support). Policy Manager Policy Manager Upgrade Service Manager Policy Manager Upgrade Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface SYSTEM REQUIREMENTS following table lists minimum system requirements running SOA Software Platform Windows UNIX platforms. Component Name SOA Software Platform Host Requirement Hardware Single CPU, 2Ghz, RAM Operating System Windows Windows Service pack Windows Service pack Windows Windows Red Hat Enterprise Linux Solaris AIX Linux Solaris IBM AIX Client Browser accessing SOA Software Platform Features. Mozilla Firefox above Google Chrome above Database Management Systems Oracle (SID, Service Name)--Requires database driver ojdbc5.jar, version Microsoft SQL Server 2005--Database driver included SOA Software Platform. IBM Universal Database V9.7--Requires Universal JDBC Driver db2jcc.jar) specific installation. MySQL 5.1--Requires database driver mysql-connectorjava-5.0.8-bin.jar, version Note: After installing SOA Software Platform running \"Configure Container Instance Wizard,\" database driver .jar file must dropped \"/deploy\" directory container instance requires driver sm60/instances/<instance name>/deploy) prior running database configuration task via \"SOA Software Administration Console.\" Note: database usually not reside computer hosting SOA Software Platform. Database Sizing Guidelines base install, configuration data, consumes initial space. Each detailed transaction log consumes approximately bytes database storage space. Typically, however, transactions logged manner. means database storage space consumed every transactions. transaction rate used test Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface Component Name Requirement 1250TPS database storage space consumed rate per hour. Assume average recorded message size Typically, however, transactions logged manner. Alerts, performance data SLA Rollup data add approximately per transactions. Memory Configuration default maximum heap size SOA Software Containers Java processes) subset SOA Software Platform product documentation published Portable Document Format (PDF) requires Acrobat Reader above. Documentation INSTALLATION DIRECTORY following figure shows directory structure SOA Software Platform installation: Figure SOA Software Platform Installation Directory--Complete Installation Installation Directory Folder Descriptions SOA Software Platform Installation Wizard uses default installation directory \\SOA Software. recommended directory structure organization add new \"Release Directory\" under \\SOA Software each SOA Software Platform release. Using model, installation directory structure SOA Software Platform release \\SOA Software\\SM61. directory structure approach facilitates product upgrade maintenance process. SOA Software Platform installation includes following directory folders: Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface SOA Software Platform Installation Directory Folder Descriptions Installation Directory Folder \\bin Description \\bin folder includes SOA Software Platform shell batch scripts. includes Start /Stop scripts SOA Software Platform processes, scripts used register un-register Windows services, scripts launching SOA Software Platform administration configuration wizards. folder includes script run SOA Software Platform product unique Cron job. \\config folder includes SOA Software Platform properties files. property files reserved system use. \\dbscripts folder includes database scripts required loading SOA Software Platform data schemas including new installation, upgrade installation, automated database schema creation, manual schema loading. \\docs folder includes SOA Software Platform Installation Programming documentation Portable Document Format (PDF), Release Notes HTML format. subfolder \\docs\\Users_Guide includes copy Policy Manager Online Help. launch page online help \"welcome_to_service_manager.htm. \\instances folder runtime created folder. Each time new container instance created new folder created using assigned container name. container instance folder includes three sub-folders. \\logs folder stores log files automatically generated SOA Software Platform function operating. logging process records actions performed each SOA Software Platform function stores information log file. Log files archived historical record based requirements. \\deploy folder includes properties files (com.soa.config.cfg com.soa.log.cfg) include SOA Software Platform default configuration settings. files used push default configuration information Administration Console typically one-time use properties pushed Administration Console updated via \"Configuration\" tab. Bundles .cfg files added \\deploy folder published Administration Console. properties updated via \"Configuration\" tab. \\cache folder stores OSGI bundles installed features. \\config \\dbscripts \\docs \\instances \\jre \\jre folder Java runtime folder automatically created during SOA Software Platform product installation. Java version packaged SOA Software Platform installed \\jre folder version Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface SOA Software Platform Installation Directory Folder Descriptions Installation Directory Folder \\keystore Description \\keystore folder includes following sample keystore files: Keystore-default.jks--A keystore default file contains ten self-signed certificates. sample file provided users use HTTPS functionality Authentication certificate functionality. Keystore-empty.jks--An empty keystore saved JKS format. used load any certificate import SOA Software Platform. \\lib Readme.txt--A text file includes descriptions each sample key file password information. \\lib folder includes jar files required runtime SOA Software Platform processes, war files support SOA Legacy Container types. \\license folder includes SOA Software Platform Third Party Dependencies document (ThirdPartyLicenseAgreements.pdf) provides license information third party products utilized SOA Software Platform product implementation. \\mib folder includes \"Management Information Base (mib)\" file SOA Software Platform stores alerts raised SOA Software Platform deployment. mib file used integrate Network Management Systems SOA Software Platform. mib file registered Network Management Systems enable receipt alerts SOA Software Platform. After integration complete, alerts raised SOA Software Platform viewed via Network Management Systems. \\schemas folder includes cached schema documents used Schema Validation Component. \\Uninstaller folder stores key SOA Software Platform data required successful operation SOA Software Platform Uninstall process. Note: folder system use Deleting modifying folder not supported compromise SOA Software Platform Uninstall process. <installation_name>.log file created SOA Software Platform product installation occurs includes time stamp information related installation. \\license \\mib \\schemas \\UninstallerData <installation_name>.log Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface SOA SOFTWARE PLATFORM PROGRAM GROUP SOA Software Platform Program Group complete installation includes following menu options: Menu Option Configure Container Instance Documentation (Guides PDF format) SOA Software Platform Function Action Launches \"Configure Container Instance Wizard.\" Installation Programming Guides SOA Software Platform Installation Guide Policy Manager Message Handler Programming Guide Policy Manager Delegate Apache Axis Technical Note Policy Manager Custom Actions Technical Note Users Guide View Release Notes Policy Manager Online Help SOA Software Platform Release Notes GUIDE guide includes following chapters: Chapter \"Installing Configuring SOA Software Platform\" provides instructions install SOA Software Platform application, apply updates, configure container instance using \"Configure Container Instance Wizard,\" install configure SOA Software Platform features using SOA Software Administration Console. Chapter \"Installing Updates Existing SOA Software Platform Installation\" provides instructions install updates SOA Software Platform Release. Chapter \"Installing Configuring Network Director\" provides instructions configure Network Director container, install configure \"SOA Software Network Director\" feature using using SOA Software Administration Console, configure Network Director Container Instance using Policy Manager Management Console. Chapter \"SOA Software Administration Console\" provides functional overview SOA Software Administration Console. Appendix \"Start Stop Restart Container Instance\" provides instructions start, stop, restart container instance. Appendix \"Database Drivers\" provides list required database drivers database types supported SOA Software Platform. Appendix \"Uninstalling SOA Software Platform\" provides instructions uninstall SOA Software Platform software installation. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Preface CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Support Site Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. SOA Software Customer Support website (https://support.soa.com/support) Updates product documentation issued periodic basis available submitting email request support@soa.com. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Chapter Installing Configuring SOA Software Platform OVERVIEW SOA Software Platform provides software releases Windows UNIX platforms. chapter provides instructions install SOA Software Platform application, apply updates, configure Standalone Container Instance using \"Configure Container Instance Wizard,\" install configure Policy Manager Features using SOA Software Administration Console. GUI, Console, Silent instructions provided SOA Software Platform installation process, GUI Silent instructions provided configuration process. Select installation approach best suits requirements. MANUALLY INSTALLING SCHEMAS requirement manually install SOA Software Platform schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. SOA SOFTWARE PLATFORM SETUP FILES following table shows platform options SOA Software Platform setup executable. Refer www.support.soa.com Downloads Policy Manager section. Note: Installation setup files must copied local directory prior launch. Platform Windows Linux Solaris AIX Setup File Name Windows-pm-6.1.xxxxsetup.exe Windows-pm-6.1.xxxxsetup.bin Windows-pm-6.1.xxxxsetup.bin Windows-pm-6.1.xxxxsetup.bin Launch GUI Windows-pm-6.1.xxxxsetup.exe Windows-pm-6.1.xxxxsetup.bin Windows-pm-6.1.xxxxsetup.bin Windows-pm-6.1.xxxxsetup.bin Launch Console Windows-pm-6.1.xxxxsetup.exe console Windows-pm-6.1.xxxxsetup.bin console Windows-pm-6.1.xxxxsetup.bin console Windows-pm-6.1.xxxxsetup.bin console Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform STEP INSTALL SOA SOFTWARE PLATFORM section provides walkthrough installing SOA Software Platform. Select following installation methods: Install SOA Software Platform (GUI) Install SOA Software Platform (Console) Install SOA Software Platform (Silent) Install SOA Software Platform (GUI) section provides instructions performing GUI installation SOA Software Platform application using \"SOA Software Platform Installation Wizard.\" order begin installation SOA Software Platform, must administrator privileges computer. Install SOA Software Platform (GUI) Step Procedure Launch SOA Software Platform installation setup file (Windows-pm-6.1.xxxxsetup.exe). installation files begin extract. process complete, \"Enter License Key\" screen displays. Figure Enter License Key--GUI Install Enter license key supplied click Next. \"Introduction\" screen displays. Note: not license key, contact SOA Software Customer Service department. find contact information beginning Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (GUI) guide. Figure Introduction--GUI Install Click Next. \"SOA Software License\" screen displays. Figure SOA Software License--GUI Install agree license terms, click accept\" option Next. \"System Requirements\" screen displays. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (GUI) Figure System Requirements--GUI Install perform complete installation, accept default click Next. \"Choose Install Folder\" screen displays. Figure Choose Install Folder--GUI Install install default folder, click Next. Otherwise, click Choose, select installation folder, click Next. \"Choose Shortcut Folder\" screen displays. Note: \"Choose Shortcut Folder\" contains number shortcuts use often configuring launching SOA Software Platform. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (GUI) Figure Choose Shortcut Folder--GUI Install Select installer create shortcut icons click Next. \"Pre-Installation Summary\" screen displays. Figure Pre-Installation Summary--GUI Install Review choices. wish make any changes, click Previous work way back correct screen. ready, click Install. \"Installing SOA Software Platform\" screen displays shows progress indicator representing state installation. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (GUI) Figure Installing--Progress Indicator installation complete, \"Install Complete\" screen displays continue configuration SOA container?\" option presented. default selection Figure Install Complete--GUI Install Select click Done. completes SOA Software Platform installation process. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (Console) section provides instructions performing console installation SOA Software Platform application UNIX platforms. order begin installation SOA Software Platform, must administrator privileges computer. Install SOA Software Platform (Console) Step Procedure Copy Linux-pm-6.1.xxxx-setup.bin Solaris-pm-6.1.xxxx-setup.bin file folder local machine. Launch: Linux-pm-6.1.xxxx-setup.bin typing Linux-pm-6.1.xxxx-setup.bin console\" Solaris-pm-6.1.xxxx-setup.bin typing Solaris-pm-6.1.xxxx-setup.bin console\". installation files begin extract. process complete, \"Enter License Key\" screen displays. Figure Enter License Key--Console Install Enter License Key supplied Press Enter. \"Introduction\" screen displays. Note: not license key, contact SOA Software Customer Service department. find contact information beginning guide. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (Console) Figure Introduction--Console Install Press Enter. License Agreement screen displays Figure License Agreement--Console Install agree license terms, enter press Enter. \"System Requirements\" screen displays. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (Console) Figure System Requirements--Console Install Review System Requirements, press Enter. \"Choose Install Folder\" screen displays. install default folder, press Otherwise, enter specify new installation folder press Enter. Figure Choose Install Folder--Console Install Review choices. ready, press Enter. install process begins. installation complete, command prompt displays. completes SOA Software Platform installation process. SOA Software Platform updates install, \"Step Install SOA Software Platform Updates.\" updates not required, skip \"Step Configure Standalone Container Instance. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform (Silent) section provides instructions performing silent installation SOA Software Platform application Windows UNIX platforms. order begin installation SOA Software Platform, must administrator privileges computer. silent installation automatic process installs SOA Software Platform application start finish without any user interaction. silent installation properties file (installer.properties) must configured prior running silent install. Configurable options include specifying target installation directory, install set, input options executed end installation. After configuring property file, SOA Software Platform application deployed onto multiple computers scripted, non-interactive manner. Note: Silent upgrades not supported. generate installer.properties file, must first perform standard SOA Software Platform installation using platform-specific \"setup\" file. After SOA Software Platform installation completion, platform-specific installer.properties file saved directory launched SOA Software Platform \"setup\" file. file configured setting specified \"SOA Software Platform Installation Wizard\" customized based requirements. Configure Silent Install Properties File (installer.properties) Step Procedure Prior executing SOA Software Platform silent installation, \"installer.properties\" file must configured meet requirements. initial \"installer.properties\" file generated result installing SOA Software Platform using \"SOA Software Platform Installation Wizard\" setup file populated default settings used initial installation. Thu May IST Replay feature output file built Replay feature InstallAnywhere. contains variables set Panels, Consoles Custom Code.# Enter License Key option displays license key specified during initial application installation. Note \"INDEX_OF_MATCHING_PASSWORD\" option setting always USER_SUPPLIED_PASSWORD= INDEX_OF_MATCHING_PASSWORD=2 Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Silent Install Properties File (installer.properties) Choose Install Folder option used specify target installation directory path. USER_INSTALL_DIR=C:\\\\Program Files\\\\SOA SOFTWARE Choose Shortcut Folder option used specify path used \"Windows\" Program Group shortcut. USER_SHORTCUTS=C:\\\\Documents Settings\\\\Administrator\\\\Start Menu\\\\Programs\\\\ Install Complete USER_INPUT_RESULT_8 option controls whether \"Configure Container Instance Wizard\" launches automatically after silent installation complete. #Install Complete #---------------USER_INPUT_RESULT_8=1 USER_INPUT_RESULT_13=0 After perform initial installation SOA Software Platform, installer.properties file stored directory application setup file stored. Save copy base file. serve template each custom configuration. next step customize installer.properties file instance per application type launching silent install Review update base silent install parameters (Enter License Key, Choose Install Folder, Chose Shortcut Folder, Install Complete). Add \"INSTALLER_UI\" parameter. parameter configures installation method \"silent.\" INSTALLER_UI=silent After completed customizations, save installer.properties file. run silent installation, refer Perform Silent Install\" procedure. Perform Silent Install Step Procedure Copy setup file platform folder local machine: Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Perform Silent Install Windows-pm-6.1.xxxx-setup.exe Linux-pm-6.1.xxxx-setup.bin Solaris-pm-6.1.xxxx-setup.bin launch SOA Software Platform silent installer, type following: Windows: Windows-pm-6.1.xxxx-setup.exe <setup directory location>\\installer.properties UNIX: Linux-pm-6.1.xxxx-setup.bin /export/home/username/<setup directory location>\\installer.properties Solaris-pm-6.1.xxxx-setup.bin /export/home/username/<setup directory location>\\installer.properties Note: INSTALLER_UI switch installer.properties file must set \"silent\" (INSTALLER_UI=silent) prior launching installer.properties setup. installation process complete, system returns operating system prompt. install log (<installation name>.log) stored directory. completes SOA Software Platform installation process. SOA Software Platform updates install, \"Step Install SOA Software Platform Updates.\" updates not required, skip \"Step Configure Standalone Container Instance. STEP INSTALL SOA SOFTWARE PLATFORM UPDATES SOA Software periodically issues updates SOA Software Platform. Update files downloaded SOA Software Customer Support site. Refer www.support.soa.com Downloads Policy Manager Updates section. SOA Software Platform update files must copied SOA Software Platform Release Directory (c:\\sm60). Each update file must extracted version number order (earliest version first) prior configuring container instance. Install SOA Software Platform Updates Step Procedure Log onto SOA Software Customer Support site (www.support.soa.com) download SOA Software Platform updates (Downloads Policy Manager Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install SOA Software Platform Updates Updates). Copy updates SOA Software Platform Release Directory Extract update files version number order (earliest version first) SOA Software Platform Release Directory \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files \\bin, \\config, \\docs, \\instances, \\lib folders SOA Software Platform Release Directory After applying updates, delete /sm60/instances/configurator/cache directory exists. After automated zip file completes its processing, next step configure Container Instance. Refer \"Configuring Standalone Container Instance\" section. NOTE: New Installation: new installation not yet created SOA Container, skip directly \"Step Configure Standalone Container Instance.\" Existing Installation: existing installation applied updates, refer \"Chapter Installing Updates Existing SOA Software Platform Installation,\" complete procedure, continue \"Step Launch SOA Software Administration Console\" chapter complete remaining installation configuration steps. STEP CONFIGURE STANDALONE CONTAINER INSTANCE section provides instructions using \"Configure Container Instance Wizard\" configure Standalone Container Instance. container configuration process creates basic container configuration minimum set OSGI bundles, sets SOA Software Platform Default properties, sets SOA Software Platform Default Repository. Select following configuration methods: Configure Standalone Container Instance (GUI) Configure Standalone Container Instance (Silent) Configure Standalone Container Instance (GUI) following procedure uses \"Configure Container Instance Wizard\" create Standalone Container Instance. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Step Procedure Navigate SOA Software Platform release directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Welcome Configure Container Instance--Standalone Deployment \"Instance Name\" screen displays. specify name container instance. instance name unique easily identifiable Atmosphere). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Figure Instance Name--Standalone Deployment \"Default Admin User\" screen displays. Define \"Username\" \"Password\" credentials administrator using SOA Software Administration Console. \"Password\" field includes default password used log SOA Software Administration Console. \"Hide Password\" checkbox allows display password encrypted unencrypted. view default password, uncheck \"Hide Password\" checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Figure Default Admin User--Standalone Deployment \"Instance Configuration Options\" screen displays. select container deployment option. Figure Instance Configuration Options--Standalone Deployment Select \"Standalone Deployment.\" \"Default Listener\" screen displays. Set default Port Host Address instance. listener configuration used SOA Software Administration Console address. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Figure Default Listener--Standalone Deployment Default Listener Port--Represents default Port. Bind interfaces--If select option, listener binds address. \"localhost\" any valid machine used connect client/browser. Bind specific interface--If select option, selected host name used connect client/browser. Host Address: Default Listener information used compose SOA Software Administration Console URL follows: http://<hostname>:<port>/admin/ Note: trailing forward slash required Admin Console URL admin/). Click Next continue. \"Instance Startup\" screen displays. Three instance startup options provided. Start Standalone Process--Runs \"startup <instance>\" command line script located sm60\\bin directory. Install Windows Service--Installs instance Windows Service. Instance managed via \"Services\" dialog Windows Program Group (Control Panel/Administrative Tools/Services). Not Start Instance--Configures instance does not start Instance started manually after configuration complete executing \"startup <instance>\" command line script sm60\\bin directory. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Figure Instance Setup--Standalone Deployment Click radio button startup option use current container instance, click Next continue. Note: \"Instance Startup\" screen does not display UNIX systems manual startup required. Container Startup instructions provided later procedure \"Summary\" screen displays. Review summary information. confirm, click Finish. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance--Standalone Deployment Figure Instance Configuration Summary--Standalone Deployment completes container configuration process. selected Not Start Instance\" option, following methods used start container instance: Start Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Start Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Start--Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console: Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Feature SchemasIf requirement manually install feature schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. \"Launch Admin Console\" checkbox selected \"Launch Admin Console\" screen, SOA Software Administration Console launch automatically. selected Not Start Instance,\" refer \"Step Launch SOA Software Administration Console\" section instructions. Configure Standalone Container Instance (Silent) section provides instructions configure automated configuration properties file used create new SOA Software Platform Container Instance. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance (Silent Configuration) Step Procedure \"Configure Container Instance Wizard\" set run automated mode silent). done defining properties file pre-defining set property values used \"Configure Container Instance Wizard\" automatically configure Container instance. Define properties file myprops.properties) Add following default content: container.instance.name=instancename credential.username administrator credential.password password default.host=localhost default.port=9900 Base Properties following properties used Standalone Deployments. container.instance.name--Name Container. credential.username--Username logging SOA Software Administration Console. credential.password--Password logging SOA Software Administration Console. default.host--Host Container Instance. default.port--Port Container Instance. Running Silent Configuration \"Configure Container Instance Wizard (Silent Configuration)\" properties file Standalone configuration accepts following system properties together used perform silent configuration: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: \\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=C:/<property file directory location>/myprops.properties\" UNIX \\sm60\\bin>startup.sh configurator -Dsilent=true Dproperties=/export/home/username/<property file directory location>\\myprops.properties Perform following prerequisite steps before launching SOA Software Administration Console: Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Container Instance (Silent Configuration) deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install SOA Software Platform schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. Start container instance. following methods used start container instance. Start Stop Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Start Stop Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Start Stop Process UNIX (Background) Start--Navigate sm60/bin type startup.sh --Navigate sm60/bin type shutdown.sh Refer Appendix Start Stop Restart Container Instance complete list container start/stop instructions. next step launch SOA Software Administration Console. Refer \"Step Launch SOA Software Administration Console\" section. STEP LAUNCH SOA SOFTWARE ADMINISTRATION CONSOLE Launch SOA Software Administration Console Step Procedure After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Launch SOA Software Administration Console Figure SOA Software Administration Console--Login Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Features\" tab. Figure SOA Software Administration Console--Available Features Tab next step install SOA Software Platform features. Refer \"Step Install Policy Manager Features\" section. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform STEP INSTALL POLICY MANAGER FEATURES section provides walkthrough SOA Software Administration Console \"Install Feature\" function. following procedure focus installing two \"Policy Manager\" features (SOA Software Policy Manager Console, SOA Software Policy Manager Web Services). Note: installation process same features. Each feature installed separate container instance except SOA Software Policy Manager Console, SOA Software Policy Manager Web Services features. two features installed separate container instances special requirements load distribution cluster, etc.). Install Policy Manager Features Step Procedure SOA Software Administration Console, click \"Available Features\" tab. list available features displays. Figure Policy Manager Console/Web Services Installation--Available Features Tab select \"SOA Software Policy Manager Console\" \"SOA Software Policy Manager Web Services\" features, click checkbox next feature line item. After clicking checkbox, \"Install Feature\" button displays focus. begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install Policy Manager Features Figure Policy Manager Console/Web Services Installation --Install Feature Resolve Phase After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure Policy Manager Console/Web Services Installation--Install Feature Feature Resolution Report begin installing feature click \"Install Feature.\" \"Installing...\" status displays along progress indicator. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Install Policy Manager Features Figure Policy Manager Console/Web Services Installation--Install Feature Install Progress installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. Figure Policy Manager Console/Web Services Installation--Install Feature Installation Complete After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer \"Step Configure Policy Manager Features\" information. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform STEP CONFIGURE POLICY MANAGER FEATURES section provides walkthrough SOA Software Administration Console \"Tasks\" apply \"SOA Software Policy Manager Console\" \"SOA Software Policy Manager Web Services\" features. Configure Policy Manager Console/Web Services After installing \"SOA Software Policy Manager Console\" \"SOA Software Policy Manager Web Services\" features via \"Available Features\" tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking \"Configure\" button \"Installation Complete\" screen end feature installation process. second track allows resume configuration later time clicking \"Cancel\" \"Installation Complete\" screen executing \"Complete Configuration\" button \"Pending Installation Tasks\" section via \"Installed Features\" tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available \"Configuration Actions\" section \"Configuration\" tab. Tasks re-executed needed. Note: chapter assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Configure SOA Software Policy Manager Console/SOA Software Policy Manager Web Services Features Step Procedure Select following configuration tracks, begin configuration process \"SOA Software Policy Manager Console/SOA Software Policy Manager Web Services.\" Installed Features Tab: Click \"Complete Configuration\" \"Pending Installation Tasks\" section. Available Features Tab: Click \"Configure\" \"Installation Complete\" screen feature installation wizard. first page \"Manage PKI Keys Wizard\" displays. starting point beginning SOA Software Policy Manager Console/SOA Software Policy Manager Web Services configuration. following sections provide walkthrough each task configuration wizard SOA Software Policy Manager Console SOA Software Policy Manager Web Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure SOA Software Policy Manager Console/SOA Software Policy Manager Web Services Features Service features. Configure PKI Keys (Policy Manager Console/Web Services) section provides instructions configure keys current feature set. Configure PKI Keys (Policy Manager Console/Web Services) Step Procedure \"Manage PKI Keys Wizard\" wizard allows configure private key certificate container communicating governance console. Figure Manage PKI Keys Wizard (Select Key Management Option)--Policy Manager Console/Web Services screen organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned object. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current object. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current object. Option categories include \"Generate,\" \"Import,\" \"Export,\" \"Delete.\" Available objects displayed focus\" Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure PKI Keys (Policy Manager Console/Web Services) based object's configuration \"state.\" Select \"Key Management Option\" click Next continue. walkthrough use default key option \"Generate PKI Keys Certificate.\" \"Generate PKI Keys Certificate\" screen displays. Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)-- Policy Manager Console/Web Services \"Generate PKI Keys Certificate\" screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. screen organized follows: Key Length--A \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). \"Key Length\" section, select radio button key length based requirements. Certificate Details--Includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select radio button \"Key Length\" enter \"Certificate Details\" based requirements. After completing entries, click Finish. Certificate details displayed \"Summary\" screen. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure PKI Keys (Policy Manager Console/Web Services) Figure Manage PKI Keys Wizard (Summary)--Policy Manager Console/Web Services Click Next Task. \"Select Database Options\" screen displays. walkthrough configuration task outlined \"Configure Database Options\" section. Configure Database Options (Policy Manager Console/Web Services) \"Select Database Option\" screen provides options selecting database used current SOA Software Container configuration. Note: database schemas manually installed, select \"Use existing database\" option \"Configure Database Options Wizard.\" \"Manage Schemas Wizard\" displays schemas manually installed displayed \"Installed Schemas\" section. click Finish complete configuration. \"Create new database\" option creates new Policy Manager database associated properties based selected database type. \"Use existing database\" option uses existing Policy Manager tablespace, retains tables created any previous installation. \"Use JNDI datasource\" option allows connect database server using datasource name. option currently unavailable embedded implementations Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Step Procedure \"Database Options\" section, select database option click Next continue. Note: summary property information presented below \"Create new database\" \"Use existing database\" options. Figure Configure Database Options Wizard (Select Database Option--Create new database)--Policy Manager Console/Web Services Figure Configure Database Options Wizard (Select Database Option--Use existing database)--Policy Manager Console/Web Services \"Specify Database Options\" screen displays. \"Create new database\" \"Use existing database\" options, following Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) \"Database Types\" supported: SQL Server, MySQL Server, Oracle SID, Oracle Service Name, Select \"Database Type\" drop-down list box, review configuration options each database type (below), configure options. NOTE: database properties each database option same except \"Administrator Credentials\" section not required \"Use existing database\" option database already exists permissions previously established. SQL SERVER section provides overview configuration options SQL Server. Database Details Database Type--Select SQL Server database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Named Instance--Used set separate SQL Server databases use specific instance store Policy Manager data. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Administrator Credentials Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options SQL Server #1)--Policy Manager Console/Web Services Figure Specify Database Options SQL Server #2)--Policy Manager Console/Web Services SQL section provides overview configuration options MySQL Server. Database Details Database Type--Select MySQL database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Administrator Credentials Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Named Instance--Used set separate SQL Server databases use specific instance store Policy Manager data. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time--The maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options (MySQL Server #1)--Policy Manager Console/Web Services Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options (MySQL Server #2)--Policy Manager Console/Web Services Oracle SID section provides overview configuration options Oracle SID. Database Details Database Type--Select Oracle SID database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Username--Enter database Username. Password--Enter database Password. Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard Oracle installation. SID--Enter existing Oracle instance. Tablespace--Enter valid name new tablespace. Administrator Credentials Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options (Oracle SID #1)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle SID #2)--Policy Manager Console/Web Services Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Oracle Service Name section provides overview configuration options Oracle Service Name. Database Details Database Type--Select Oracle Service Name database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Username--Enter database Username. Password--Enter database Password. Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard Oracle installation. Service Name--Enter instance alias. Tablespace--Enter valid name new tablespace. Administrator Credentials Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options (Oracle Service Name #1)--Policy Manager Console/Web Services Figure Specify Database Options (Oracle Service Name #2)--Policy Manager Console/Web Services section provides overview configuration options Database Details Database Type--Select database type. Name--Enter database name. Administrator Credentials Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Note: Port default port assigned standard installation. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Tablespace--In Tablespace field, enter tablespace. may enter any valid name. Note: create tablespace same name existing tablespace, existing completely overwritten new Buffer Name new buffer?:--DB2 buffer pools caches database tables indexes. use buffer manage server performance, specify buffer name \"Buffer Name\" field. specified buffer access appropriate tuning script obtain pool size information. Policy Manager create buffer, click New Buffer\" checkbox enter \"Buffer Name.\" Policy Manager create new Buffer assign default size use Control Center\" update buffer configuration. Note: tablespace creation process requires buffer created. means configuring \"Buffer Name\" supported creating new database. modify pool size defined buffer, reconfiguring tablespace new \"Buffer Name\" not supported. Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options #1)--Policy Manager Console/Web Services Figure Specify Database Options #2)--Policy Manager Console/Web Services After completing database properties entries, click Next continue. database configuration \"Summary\" screen displays. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Configure Database Options Summary Click Next Task. \"Install Schemas\" screen displays. \"Install Schemas\" screen used manage schemas associated current SOA Container. Schemas add tables database used SOA Container populate data. screen organized two sections: \"Available Schemas\" section displays list schemas available install current SOA Container. install available schema, click checkbox next schema line item click Finish. \"Installed Schemas\" section provides list schemas currently installed SOA Container. uninstall schema, click checkbox next schema line item click Finish. After schema management process complete, \"Summary\" screen displays. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Manage Schemas Wizard (Install Schemas)--Policy Manager Console/Web Services Note: schema selected, system install preceding versions selected schema not previously installed. scenario, preceding schema versions display \"Installed Schemas\" section \"Manage Schemas Wizard\" (accessible via \"Configuration\" tab) after installation complete. Click checkbox schemas install and/or uninstall click Finish. \"Summary\" screen displays. Review summary information click Continue Next Task. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Database Options (Policy Manager Console/Web Services) Figure Manage Schemas Wizard (Install Schemas Summary)--Policy Manager Console/Web Services Configure Policy Manager Administrator Credentials (Policy Manager Console/Web Services) section provides instructions specify Policy Manager \"Administrator\" credentials allow log Policy Manager \"Management Console.\" Configure Policy Manager Administrator Credentials Step Procedure \"Policy Manager Administrator Credentials\" screen used create \"Administrator\" user account definition logging Policy Manager \"Management Console.\" user account definition composed \"Username\" \"Password.\" After restarting SOA Software Administration Console, log Policy Manager \"Management Console\" using administrator credentials. User Account definition updated via \"Security\" tab. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Configure Policy Manager Administrator Credentials Figure Define Policy Manager Administration Credentials--Policy Manager Console/Web Services \"Credentials\" section, enter \"Username,\" \"New Password,\" \"Confirm New Password\" Policy Manager \"Administrator\" user account. After completing entries, click Finish. system restart message displays. Click restart system, click Cancel restart system later. Figure Define Policy Manager Administration Credentials (Credentials Summary)--Policy Manager Console/Web Services \"Complete Configuration\" displays. Refer \"Completing Configuration\" section more information. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Completing Configuration (Policy Manager Console/Web Services) \"Complete Configuration\" screen displays system restart progress indicator allows log SOA Software Administration Console after system restart complete. Complete Configuration Step Procedure \"Complete Configuration\" task performs configuration operations associated more \"Feature\" installations. Operations typically include starting components, setting property values, initializing credentials. system restart initiated Finish clicked \"Credentials Summary\" screen. After system restarts initializes installed features use, click Close log SOA Software Administration Console. exit wizard perform system restart later time, click Close. Configuration changes saved \"Complete Configuration\" task available via \"Installed Features\" tab \"Pending Installation Tasks\" section. Figure Complete Configuration--Policy Manager Console/Web Services STEP PERFORM SOA SOFTWARE ADMINISTRATION CONSOLE LOGIN (POLICY MANAGER CONSOLE/WEB SERVICES) After system exits SOA Software Administration Console, \"Login\" screen displays. Select \"Admin Console\" domain click \"Enter\" log back continue system administration activities. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring SOA Software Platform Figure SOA Software Administration Console--Login Screen STEP LAUNCH POLICY MANAGER MANAGEMENT CONSOLE After completing configuration Policy Manager features, restarting system, launch \"Policy Manager Management Console\" follows: Enter: http://<hostname>:<port>/ms/index.do Enter Username Password credentials defined \"Define Policy Manager Administrator Credentials\" screen during configuration Policy Manager feature. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Chapter Installing Updates Existing SOA Software Platform Installation chapter provides instructions installing SOA Software Platform Updates (Manual Silent methods). CONFIRM INSTALLED UPDATES need confirm SOA Software Platform updates currently installed perform following steps: Launch SOA Software Administration Console click \"Installed Features\" tab. view bundles associated current update, click \"Installed Features\" tab, select \"Bundle\" \"Filter\" drop-down list box, click \"Version\" column sort version. view \"Bundle Details\" click bundle line item. MANUALLY INSTALLING SCHEMAS requirement manually install SOA Software Platform schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. UPDATE EXISTING SOA SOFTWARE PLATFORM INSTALLATION (MANUAL) section provides instructions applying SOA Software Platform Update SOA Software Platform Installation. GUI Silent Update instructions provided. update must applied SOA Container Instances Policy Manager, Network Director, Tomcat agent, etc.). update process involves series configuration steps including: Copying SOA Software Platform Update .zip files SOA Software Platform Release Directory extracting automated .zip file. Applying update(s) running \"Configure Container Instance Wizard\" (GUI) running Silent Update. Starting SOA Container Instance after \"Configure Container Instance Wizard\" (GUI) Silent Update completed update process. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Updating database schemas via SOA Software Administration Console (GUI), using third-party Database Schema Management Tool (Silent Update). SOA Software Platform Update .zip files obtained via SOA Software Customer Support website www.support.soa.com Downloads Policy Manager Updates section. existing SOA Software Platform installation more SOA Containers configured. Files required task include: SOA Software Platform .zip File soa-update-6.1.X.zip) Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Make backup copy SOA Software Platform Release Directory database(s). Copy SOA Software Platform Update .zip file (soa-update-6.1.X.zip) SOA Software Platform Release Directory Update .zip files obtained via SOA Software Customer Support website (https://support.soa.com/support). Extract soa-update-6.1.X.zip file SOA Software Platform Release Directory multiple updates being applied, files extracted version order (earliest version first). \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files SOA Software Platform Release Directory adds update SOA Software Administration Console \"Repository.\" After automated zip file completes its processing, stop SOA Container Instance update applied Stop Process Windows Close DOS Window type Ctrl-C. Stop Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services). Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Stop Process UNIX Send process KILL signal Ctrl-C. Stop Process UNIX (Background) Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Navigate sm60/bin type shutdown.sh After applying .zip file update(s), delete /sm60/instances/configurator/cache directory exists. next step launch \"Configure Container Instance Wizard\" enter SOA Container Instance Name SOA Software Platform update(s) applied Two methods used launch \"Configure Container Instance Wizard.\" Launch SOA Software Platform Program Group: Click Start menu, navigate SOA Software Platform Program Group, click Configure Container Instance. Perform manual start: Navigate SOA Software Platform Release Directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Configure Container Instance Wizard--Welcome Configure Container Instance \"Instance Name\" screen displays. specify name \"SOA Software Container Instance\" update(s) applied Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Figure Configure Container Instance Wizard--Instance Name Enter Container Instance Name click Next continue. Note: find Container Instance Name, navigate sm60/instances folder view instances currently defined. Note Container Instance Name case sensitive. \"Instance Already Exists\" screen displays. apply update selected container instance, click Update radio button click Next. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Figure Instance Already Exists--Update \"Instance Configuration Summary\" screen displays. apply update(s), click Finish. Note SOA Container Instance must stopped prior applying update(s). Figure Configure Container Instance Wizard--Instance Configuration Summary (Complete Update) SOA Container update process begins progress indicator displays. After update process complete \"Update Complete\" dialog displays indicates Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure number bundles updated. Note: number bundles displayed \"Update Complete\" message vary based specific SOA Container configuration number updates being applied.\" Figure Configure Container Instance Wizard--Update Complete Click \"Update Complete\" dialog. \"Configure Container Instance Wizard\" closes. Start updated SOA Container. Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install Policy Manager schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. Users not utilizing SOA Software Administration Console skip remainder procedure. After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Features\" tab. Figure SOA Software Administration Console--Available Features Tab previously installed \"SOA Software Policy Manager Services\" feature, verify additional schemas must installed using \"Manage Schemas Wizard.\" perform task, SOA Software Administration Console, click \"Configure\" tab. \"Configuration Actions\" section click \"Manage Schemas.\" \"Manage Schemas Wizard\" launches displays \"Install Schemas\" screen. \"Available Schemas\" section, select checkbox available Policy Manager schema click \"Finish.\" Note: not previously installed \"SOA Software Policy Manager Services\" feature, skip section refer \"Chapter Installing Configuring SOA Software Platform Step Install Policy Manager Features.\" Complete procedure. During database schemas configuration process select \"Available\" schemas \"Manage Schemas Wizard\" screen. After configuration tasks complete, navigate \"Repository\" tab verify repository installed update present. not, click Refresh update repository. final step, navigate \"System\" tab click Restart. update process complete. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation UPDATE EXISTING SOA SOFTWARE PLATFORM INSTALLATION (SILENT UPDATE) section describes steps applying \"SOA Software Platform Update\" using automated configuration properties file existing SOA Software Platform installation. existing SOA Software Platform installation SOA Container installed. Files required task include: SOA Software Platform Update .zip File soa-update-6.1.X.zip). Silent Update Properties File configured wizard.mode=update option. Apply SOA Software Platform Silent Update (Existing Installation) Step Procedure Make backup copy SOA Software Platform Release Directory database(s). Copy SOA Software Platform Update .zip file (soa-update-6.1.X.zip) SOA Software Platform Release Directory update .zip file obtained via SOA Software Customer Support website (https://support.soa.com/support). Extract soa-update-6.1.X.zip SOA Software Platform Release Directory multiple updates being applied, files extracted version order (earliest version first). \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files SOA Software Platform Release Directory adds update SOA Software Administration Console \"Repository.\" After automated zip file completes its processing, stop SOA Container Instance update applied Stop Process Windows Close DOS Window type Ctrl-C Stop Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Silent Update (Existing Installation) Stop Process UNIX Send process KILL signal Ctrl-C Stop Process UNIX (Background) Navigate sm60/bin type shutdown.sh After applying .zip file update(s), delete /sm60/instances/configurator/cache directory exists. \"Configure Container Instance Wizard\" update process set run automated mode silent). done defining properties file predefining set property values used \"Configure Container Instance Wizard\" automatically configure Container instance. Define Silent Update Property File Define properties file update.properties) Add following default content: container.instance.name=instancename wizard.mode=update Run Silent Configuration \"Configure Container Instance Wizard (Silent Update)\" properties file accepts following system properties together used perform silent update: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: \\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=<property file directory location>/update.properties\" UNIX: \\sm60\\bin>startup.sh configurator -Dsilent=true Dproperties=opt/<property file directory location>/update.properties Run silent update. Perform following prerequisite steps before launching SOA Software Administration Console Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install SOA Software Platform schemas, contact SOA Software Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Silent Update (Existing Installation) Customer Support prior beginning installation obtain series schema installation scripts additional instructions. After update complete, start updated SOA Container Instance. Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Users not utilizing SOA Software Administration Console skip remainder procedure. Launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Apply SOA Software Platform Silent Update (Existing Installation) Features\" tab. Figure SOA Software Administration Console--Available Features Tab previously installed \"SOA Software Policy Manager Services\" feature, verify additional schemas must installed using \"Manage Schemas Wizard.\" perform task, SOA Software Administration Console, click \"Configure\" tab. \"Configuration Actions\" section click \"Manage Schemas.\" \"Manage Schemas Wizard\" launches displays \"Install Schemas\" screen. \"Available Schemas\" section, select checkbox available Policy Manager schema click \"Finish.\" Note: not previously installed \"SOA Software Policy Manager Services\" feature, skip section refer \"Chapter Installing Configuring SOA Software Platform Step Install Policy Manager Features.\" Complete procedure. During database schemas configuration process select \"Available\" schemas \"Manage Schemas Wizard\" screen. After configuration tasks complete, navigate \"Repository\" tab verify repository installed update present. not, click Refresh update repository. final step, navigate \"System\" tab click Restart. After configuration tasks complete, navigate \"System\" tab click Restart. update process complete. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation ROLLBACK UPDATE \"Configure Container Instance Wizard\" includes Rollback option allows rollback updates previous snapshot. Note SOA Container Instance rollback applied must stopped prior completing rollback process. rollback SOA Software Platform Update, perform following steps: Rollback Update Step Procedure Launch \"Configure Container Instance Wizard\" enter SOA Container Instance Name includes update rollback. Two methods used launch \"Configure Container Instance Wizard.\" Launch SOA Software Platform Program Group. Click Start menu, navigate SOA Software Platform Program Group, click Configure Container Instance. Perform manual start: Navigate SOA Software Platform Release Directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Configure Container Instance Wizard--Welcome Configure Container Instance \"Instance Name\" screen displays. specify name \"SOA Software Container Instance\" includes update rollback. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Rollback Update Step Procedure Figure Configure Container Instance Wizard--Instance Name Enter Container Instance Name click Next continue. Note: find Container Instance Name, navigate sm60/instances folder view instances currently defined. Note Container Instance Name case sensitive. \"Instance Already Exists\" screen displays. rollback update, click Rollback radio button, select update listing rollback previous snapshot, click Next. Note: must run \"Configure Container Instance Wizard\" each rollback perform. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Rollback Update Step Procedure Figure Instance Already Exists--Rollback \"Instance Configuration Summary\" screen displays. complete rollback, click Finish. Note SOA Container Instance must stopped prior applying rollback. Figure Configure Container Instance Wizard--Instance Configuration Summary (Rollback Progress) SOA Container update process begins progress indicator displays. After Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Updates Existing SOA Software Platform Installation Rollback Update Step Procedure update process complete \"Rollback Complete\" dialog displays indicates number bundles updated. Figure Configure Container Instance Wizard--Rollback Complete Click \"Rollback Complete\" dialog. \"Configure Container Instance Wizard\" closes. Start updated SOA Container. Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Chapter Installing Configuring Network Director OVERVIEW Network Director feature enables Container host Virtual Services. Virtual Services defined SOA Software Management Console. Network Director feature enabled, Container's metadata updated reflect support. metadata must updated SOA Software Management Console aware Virtual Services hosted Container. feature enables support default Bindings Policies. default Bindings SOAP (REST POX). default Policies WS-Addressing, WS-Auditing, WS-Security, Security, Authentication, Authorization. chapter provides instructions configuring Network Director container instance, installing configuring SOA Software Network Director feature. Note: procedure assumes SOA Software Platform installed, SOA Software Platform Updates outlined \"Chapter Installing Configuring SOA Software Platform Step Install SOA Software Platform Updates\" \"Chapter Installing Updates Existing SOA Software Platform Installation\" already installed. STEP CONFIGURE NETWORK DIRECTOR CONTAINER INSTANCE section provides instructions using \"Configure Container Instance Wizard\" configure Network Director Container Instance. GUI Silent configuration instructions provided. Configure Network Director Container Instance (GUI) following procedure uses \"Configure Container Instance Wizard\" create Network Director Container Instance. Configure Network Director Container Instance Step Procedure Navigate SOA Software Platform release directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance Figure Welcome Configure Container Instance \"Instance Name\" screen displays. specify name container instance. instance name unique easily identifiable Network Director). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Figure Instance Name--Standalone Deployment \"Default Admin User\" screen displays. Define \"Username\" \"Password\" Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance credentials administrator using SOA Software Administration Console. \"Password\" field includes default password used log SOA Software Administration Console. \"Hide Password\" checkbox allows display password encrypted unencrypted. view default password, uncheck \"Hide Password\" checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Figure Default Admin User--Standalone Deployment \"Instance Configuration Options\" screen displays. select \"Standalone Deployment\" option. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance Figure Instance Configuration Options--Standalone Deployment Select \"Standalone Deployment.\" \"Default Listener\" screen displays. Set default Port Host Address instance. listener configuration used SOA Software Administration Console address. Figure Default Listener--Standalone Deployment Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance Default Listener Port--Represents default Port. Bind interfaces--If select option, listener binds address. \"localhost\" any valid machine used connect client/browser. Bind specific interface--If select option, selected host name used connect client/browser. Host Address: Default Listener information used compose SOA Software Administration Console URL follows: http://<hostname>:<port>/admin/ Note: trailing forward slash required Admin Console URL admin/). Click Next continue. \"Instance Startup\" screen displays. Three instance startup options provided. Start Standalone Process--Runs \"startup <instance>\" command line script located sm60\\bin directory. Install Windows Service--Installs instance Windows Service. Instance managed via \"Services\" dialog Windows Program Group (Control Panel/Administrative Tools/Services). Not Start Instance--Configures instance does not start Instance started manually after configuration complete executing \"startup <instance>\" command line script sm60\\bin directory. Figure Instance Setup--Standalone Deployment Click radio button startup option use current Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance container instance, click Next continue. Note: \"Instance Startup\" screen does not display UNIX systems manual startup required. Container Startup instructions provided later procedure \"Summary\" screen displays. Review summary information. confirm, click Finish. Figure Instance Configuration Summary--Standalone Deployment completes container configuration process. selected Not Start Instance\" option, following methods used start container instance: Start Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services). Select <Container Instance> Note instance name displayed Container Key. Start Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Container Instance Start--Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console: Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included Policy Manager update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install Policy Manager schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. \"Launch Admin Console\" checkbox selected \"Launch Admin Console\" screen, SOA Software Administration Console launch automatically. selected Not Start Instance,\" refer \"Launch SOA Software Administration Console\" section instructions. Configure Network Director Container Instance (Silent Configuration) section provides instructions configure automated configuration properties file used create new Network Director Container Instance. Configure Network Director Instance (Silent Configuration) Step Procedure \"Configure Container Instance Wizard\" set run automated mode silent). done defining properties file pre-defining set property values used \"Configure Container Instance Wizard\" automatically configure Container instance. Define properties file myprops.properties) Add following default content: container.instance.name=instancename credential.username administrator credential.password password default.host=localhost default.port=9905 Base Properties following properties used Standalone deployments. container.instance.name--Name Container. credential.username--Username logging SOA Software Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Instance (Silent Configuration) Administration Console. credential.password--Password logging SOA Software Administration Console. default.host--Host Container Instance. default.port--Port Container Instance. Running Silent Configuration \"Configure Container Instance Wizard (Silent Configuration)\" properties file accepts following system properties together used perform silent configuration: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: \\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=C:/<property file directory location>/myprops.properties\" UNIX \\sm60\\bin>startup.sh configurator -Dsilent=true Dproperties=/export/home/username/<property file directory location>\\myprops.properties Perform following prerequisite steps before launching SOA Software Administration Console: Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install Policy Manager schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. Start container instance. following methods used start container instance: Start Stop Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services). Select <Container Instance> Note instance name displayed Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure Network Director Instance (Silent Configuration) Container Key. Start Stop Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Start Stop Process UNIX (Background) Start--Navigate sm60/bin type startup.sh --Navigate sm60/bin type shutdown.sh Refer Appendix Start Stop Restart Container Instance complete list container start/stop instructions. next step launch SOA Software Administration Console. Refer \"Launch SOA Software Administration Console\" section. STEP LAUNCH SOA SOFTWARE ADMINISTRATION CONSOLE Configure Container Instance (Silent Configuration) Step Procedure After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director STEP INSTALL FEATURE (SOA SOFTWARE NETWORK DIRECTOR) section provides walkthrough installing \"SOA Software Network Director\" feature. Install SOA Software Network Director Feature Step Procedure SOA Software Administration Console, click \"Available Features\" tab. list available features displays. select \"SOA Software Network Director\" feature, click checkbox next feature line item. After clicking checkbox, Install Feature button displays focus. Figure SOA Software Network Director Installation--Available Features Tab begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Install SOA Software Network Director Feature Figure SOA Software Network Director Installation--Install Feature Resolve Phase After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure SOA Software Network Director Installation--Install Feature Feature Resolution Report begin installing feature click Install Feature. \"Installing...\" status displays along progress indicator. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Install SOA Software Network Director Feature Figure SOA Software Network Director Installation--Install Feature Install Progress installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. Figure SOA Software Network Director Installation--Install Feature Installation Complete After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer \"Configure Network Director\" information feature configuration. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director STEP CONFIGURE NETWORK DIRECTOR After installing \"Network Director\" feature via \"Available Features\" tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking \"Configure\" button \"Installation Complete\" screen end feature installation process. second track allows resume configuration later time clicking Cancel \"Installation Complete\" screen executing \"Complete Configuration\" button \"Pending Installation Tasks\" section via \"Installed Features\" tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available via \"Configuration\" tab re-executed needed. Note: section assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Begin Network Director Configuration Step Procedure Select following configuration tracks, begin configuration process \"Network Director\" feature. Installed Features Tab: Click Complete Configuration \"Pending Installation Tasks\" section. Available Features Tab: Click Configure \"Installation Complete\" screen feature installation wizard. first page \"WS-MetaDataExchange Options\" displays. starting point beginning Network Director configuration. following sections provide walkthrough each task configuration wizard Network Director feature. Configure WS-MetaDataExchange Options (Network Director) \"WS-MetaDataExchange Options\" screen allows specify URL Policy Manager \"Metadata Exchange Service.\" Connecting \"Metadata Exchange Service\" enables communication between current SOA Software Container instance Policy Manager retrieve key information service hosting, database, etc.). Specifying \"WS-MetaDataExhange\" URL required installation task \"SOA Software Network Director\" feature. Policy Manager Management Console, URL found viewing Access Point URL \"Metadata Exchange Service\" viewing WSDL \"Metadata Exchange Service\" <SOAP:address location>. Network Director, Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director wsmex address use URL WS-MetaDataExchange service Policy Manager instance hosting Network Director container. Configure WS-MetaDataExchange Options (Network Director) Step Procedure Enter \"Metadata Exchange Service\" URL field display: http://<hostname>:<port>/wsmex After completing entry, click Finish. \"Summary\" screen displays. Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options)--Network Director Review summary information click Continue Next Task. \"Select Key Management Option\" screen displays. \"Manage PKI Keys\" section details performing task. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure WS-MetaDataExchange Options (Network Director) Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options Summary)--Network Director Manage PKI Keys (Network Director) section provides instruction configuring PKI keys current container. Configure PKI Keys Step Procedure \"Manage PKI Keys Wizard\" executed either installation task configuration action Network Director various Agent features. wizard allows configure private key certificate container communicating governance console. first screen displays \"Manage PKI Keys Wizard\" \"Select Key Management Options\" screen. organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned container. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current container. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current container. Option categories include \"Generate,\" \"Import,\" \"Export,\" Delete. Available objects displayed focus\" based object's configuration \"state.\" Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure PKI Keys Figure Manage PKI Keys Wizard (Select Key Management Option)--Network Director Select \"Key Management Option\" click Next continue. pre-selected option assigned default. \"Generate PKI keys Certificate\" screen displays. \"Generate PKI Keys Certificate\" screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). \"Key Length\" section, select radio button key length based requirements. \"Certificate Details\" section includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select \"Key Length\" enter \"Certificate Details\" based requirements. After completing entries, click Finish. Certificate details displayed \"Summary\" screen. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Configure PKI Keys Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate)-- Network Director continue Network Director click Next Task. \"Complete Configuration\" screen displays. Figure Manage PKI Keys Wizard Summary--Network Director Completing Configuration (Network Director) \"Complete Configuration\" screen displays system restart progress indicator allows log SOA Software Administration Console after system restart complete. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Complete Configuration (Network Director) Step Procedure \"Complete Configuration\" task performs configuration operations associated more \"Feature\" installations. Operations typically include starting components, setting property values, initializing credentials. system restart initiated Finish clicked \"Credentials Summary\" screen. After system restarts initializes installed features use, click Close log SOA Software Administration Console. exit wizard perform system restart later time, click Close. Configuration changes saved \"Complete Configuration\" task available via \"Installed Features\" tab \"Pending Installation Tasks\" section. Figure Complete Configuration--Network Director Perform SOA Software Administration Console Login (Network Director) After system exits SOA Software Administration Console, \"Login\" screen displays. Select \"Admin Console\" domain click \"Enter\" log back continue system administration activities. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Figure SOA Software Administration Console--Login (Admin Console) STEP REGISTER NETWORK DIRECTOR CONTAINER section provides instructions register Network Director Container. process involves configuring SOA Container Service Hosting. Register Network Director Container Step Procedure After successfully installing configuring Network Director feature, next step register Network Director Container Policy Manager \"Management Console.\" Login Policy Manager \"Management Console\" navigate \"Org Containers.\" \"Containers Summary\" screen displays. Click Add Container. \"Add Container Wizard\" launches \"Select Container Type\" screen displays. \"SOA Container Types\" section click \"SOA Container\" radio button. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Register Network Director Container Figure Register Network Director--Add Container Wizard (Select Container Type) Click Next continue. \"Specify Metadata Import Options\" screen displays organized follows: Metadata Options Metadata URL--This option used enter URL address represents location Network Director Metadata retrieved. Computer Name Port Number Hostname Port Number Network Director. Metadata Path--This option used enter file system path metadata document. obtain Metadata Document perform following steps: Access Metadata URL any browser. After accessing URL browser, Right click page select \"View Page Source\" Save opened page using .xml format. Authentication Options section allows specify options pass credentials used retrieve container metadata. Three options available: Anonymous--This option does not pass user credentials container retrieve its metadata. Logged User--This option passes current logged user's credentials container retrieve its metadata. Specify Credentials--This option passes supplied credentials Username, Password, Domain fields container retrieve its metadata. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Register Network Director Container Configure Metadata Authentication option click Next continue. Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) metadata contains certificate does not reside Policy Manager Trusted Certificate Authority store, receive Certificate Not Trusted\" screen. add current certificate Trusted Certificate Authority store, manually add using Import Trusted Certificate function \"Configure Security Certificates Trusted Certificates\" section \"Management Console. Select \"Yes\" add certificate Policy Manager Trusted Certificate Authority store, click Next. \"Specify Container Details\" screen displays. Selecting Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Register Network Director Container returns \"Select Container Type\" screen. Click \"Yes\" radio button, click Next continue. Figure Register Network Director--Add Container Wizard Certificate Not Trusted) \"Container Details\" screen displays. Each container definition needs instance name description distinguish container types, encryption seed Container Key) ensure security launched, must assigned Organization. \"Organization\" represents owner container. screen organized two sections: Container Details Type--Displays container type. Container Key--A field display used specify custom container encryption key. custom key specified, Policy Manager auto-generate key. Instance Name--A field display allows specify instance name container. Description--A field display allows specify description container. \"Organization Tree\" allows select organization represents owner container. Organization Tree Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Register Network Director Container Figure Register Network Director--Add Container Wizard (Specify Container Details) Complete entries click Finish continue. \"Add Container Wizard\" configures container saves information Policy Manager data repository. configuration process complete, \"Completion Summary\" screen displays. After reviewed summary screen, click Close. Figure Register Network Director--Add Container Wizard (Completion Summary) Network Director Container successfully registered \"Management Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter Installing Configuring Network Director Register Network Director Container Console\" Container Details screen displays. Figure Register Network Director--Container Details After registering Network Director \"Management Console,\" next step host virtual services Network Director Container Instance. Containers Folder Organization Tree, selecting line item \"Containers Summary\" select container configure manage virtual service hosting \"Container Details\" tab displays. Click \"Hosted Services\" tab. \"Hosted Services Summary\" screen displays presents list virtual services hosted current container. Figure Register Network Director--Hosted Services Summary add virtual service current container, click \"Host Virtual Service.\" \"Host Virtual Service Wizard\" launches displays \"Select Virtual Service\" Screen. Click \"Help\" button launch \"Policy Manager Online Help\" complete instructions selecting virtual service configuring service hosting. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Chapter SOA Software Administration Console OVERVIEW SOA Software Platform configuration administration performed using \"SOA Software Administration Console.\" After \"SOA Software Platform Installation Wizard\" installs SOA Software Platform application, \"Configure Container Instance Wizard\" used define container host selected \"Features,\" \"SOA Software Administration Console\" used install configure \"Features.\" assessing deployment requirements, determine many container instances required features installed each container instance. Configuration administration each feature installation performed using variety different options offered \"SOA Software Administration Console.\" Base features include SOA Software Policy Manager Console SOA Software Policy Manager Web Services. two features represent Policy Manager application installed single container separate containers. feature list available per-version basis based specific customer requirements. ADMIN CONSOLE ORGANIZATION \"SOA Software Administration Console\" organized five functional areas. Available Features \"Available Features\" tab displays list features available installed current SOA Software Container instance. Feature List feature list filtered show \"Product Feature\" \"Tool\" via \"Filter\" dropdown. Install Feature install feature, select corresponding checkbox, click \"Install Feature.\" Select additional checkboxes install multiple features. After installation process complete, feature listed \"Installed Features\" tab additional configuration steps may required complete installation. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Figure SOA Software Administration Console--Available Features Installed Features \"Installed Features\" tab displays list features installed current SOA Software Container instance. feature list \"Filter\" drop-down list box allows filter features \"Product Feature\" \"Bundle\" categories. Update Feature update features, select \"Feature\" line item click \"Search Updates.\" installation wizard displays presents listing available updates applicable). install updates proceed installation process. After update complete, \"Version\" number updated features changed reflect installed version. Rollback Feature rollback feature, select \"Feature\" line item click \"Rollback Changes.\" system uninstalls selected feature, removes \"Installed Features\" tab, moves back \"Available Features\" tab. Uninstall Feature uninstall feature, select icon click system uninstalls selected feature, removes \"Installed Features\" tab, moves back \"Available Features\" tab. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Pending Installation Tasks \"Pending Installation Tasks\" list configuration tasks applicable) required complete installation process. perform pending installation tasks, click \"Complete Configuration.\" View Bundles view bundles associated current update, click \"Installed Features\" tab, select \"Bundle\" \"Filter\" drop-down list box, click \"Version\" column sort version. view \"Bundle Details\" click bundle line item. Figure SOA Software Administration Console--Installed Features Configuration \"Configuration\" tab provides two methods modifying container configuration including \"Configuration Actions\" left sidebar execute wizards, \"Properties\" presented table format. After modifying any container configuration properties must restart container. \"Appendix Start Stop Restart Container Instance\" more information. Configuration Actions Configuration Actions located bottom left sidebar area \"Configuration\" tab SOA Software Administration Console. represent \"repeatable\" tasks performed during initial container configuration. modify properties specific configuration area, click task link launch wizard configure properties. Configuration Properties Configuration properties organized \"Configuration Categories\" located top left sidebar area \"Configuration\" tab SOA Software Administration Console. view properties, click \"Configuration Category\" link properties table displays. update property, modify property information table row click Apply Changes. add additional properties click, Add Property. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console \"Configuration Categories\" section displays list property categories expand display specific property names values. initial property configuration created during installation configuration features. update property value, select property name \"Configuration Categories\" section, update property value, click Apply Changes. add property value, select \"Configuration Category\" add property click \"Add Property.\" \"Add Configuration Property\" popup displays. Enter \"Property Name\" \"Property Value\" click Apply. \"Configuration Actions\" section displays list maintenance actions. Figure SOA Software Administration Console--Configure Repository \"Repository\" screen displays list repositories identified \"Location\" store product features available installation current SOA Software Container instance. default repository (SOA Software Platform Default Repository) added part initial SOA Software Platform installation. Install Container Updates SOA Software Container Updates distributed using Repository URL points repository contains designated product features updates. Repository URL added \"Repository\" tab via SOA Software Administration Console. Updates include bundles represent new features, updates existing features. After Repository URL added \"Repository,\" updates specific feature applied clicking \"Search Updates\" button via \"Installed Features\" tab applying list updates found. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console section provides instructions adding Repository URL SOA Software Administration Console applying update. Add Repository URL SOA Software product updates installed via SOA Software Administration Console. first step applying product update add Repository URL includes update data via \"Repository\" tab. Add Repository URL Step Procedure add Repository URL contains SOA Software product updates, enter paste Repository URL provided SOA Software Customer Support \"Repository URL\" field display. Note: must reformat Repository URL prepending \"file:/\" URL changing backslashes forward slashes After URL reformatted, click Add. URL added Repository follows: Figure Admin Console--Repository (Add Repository) successfully added Repository URL. next step update process apply updates. Refer \"Apply Updates\" section more information. Apply Updates After successfully adding Repository URL, next step update process search product updates apply following two update scenarios apply: update delivers new feature, new feature available installation via \"Available Features\" tab. update delivers updates currently installed features, updates applied viewed selecting \"Bundle\" filter \"Installed Updates\" screen. Each bundle labeled update version number. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Search Apply Update Step Procedure After adding Repository URL current update, navigate \"Installed Features\" tab. Click Search Updates. Figure Admin Console--Search Updates Button \"Searching updates...\" screen displays. Figure Admin Console--Searching Updates After query updates completed, \"Updates Found\" screen displays presents list features updates available install updates list features, click Apply. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Search Apply Update Figure Admin Console--Installed Features (Updates Found) \"Updating\" screen displays while update process being performed. After updating process complete wizard closes. Figure Admin Console--Installed Features (Updating) view updates, select \"Bundle\" \"Filter\" dropdown list box. Review list updates bundles). Items sorted update \"Version\" number. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Search Apply Update Figure Admin Console--Installed Features (Bundle Filter) Perform System Rollback changes made SOA Container installing, updating, uninstalling features, etc.), snapshot taken reflects date time change occurred. state SOA Container rolled back previous date. following procedure illustrates perform system rollback. Perform System Rollback Step Procedure Navigate \"Installed Features\" tab. Click \"Rollback Changes.\" Figure Admin Console--Rollback Changes Button Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Perform System Rollback \"Rollback Changes\" screen includes \"Snapshots Taken\" display window includes Date/Time entries represent changes made current SOA Container. rollback state current SOA Container previous Date/Time, select Snapshot line item click Rollback Changes. Figure Admin Console--Installed Features (Rollback Changes) system displays \"Processing Request\" indicator, performs system rollback, provides prompt restart system. Figure Admin Console--Installed Features (Restart System after Rollback Message) Click restart, log back SOA Software Administration Console. System \"System\" tab provides summary SOA Software Platform process characteristics states. Information includes last start time process, memory details Total, Used, Free), listing associated system properties. System details used review system health troubleshooting purposes. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Chapter SOA Software Administration Console Restart Container restart current SOA Software Container instance associated bundles, click \"Restart.\" Note \"Restart\" applies standalone deployments Figure SOA Software Administration Console--System Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Start Stop Restart Container Instance Appendix Start Stop Restart Container Instance section provides instructions start stop container instance. START STOP CONTAINER INSTANCE following methods used start stop container instance. Start Stop Container Methods Start Stop Process Windows Start--Navigate sm60\\bin type startup <instance name> Stop--Close DOS Window type Ctrl-C Start Process Windows Service Start--Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Stop--Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Start Stop Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Stop--Send process KILL signal Ctrl-C Start Stop Process UNIX (Background) Start--Navigate sm60/bin type startup.sh <instance name> Stop--Navigate sm60/bin type shutdown.sh RESTART CONTAINER INSTANCE restart current SOA Software Container instance associated bundles, click \"Restart.\" Note \"Restart\" applies standalone deployments Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Start Stop Restart Container Instance Figure SOA Software Administration Console--System Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Database Drivers Appendix Database Drivers Database drivers deployed c:\\sm60\\instances\\<container instance>\\deploy SOA Software Platform Release directory. following database drivers supported: Database Type Oracle (SID, Service Name) Microsoft SQL Server IBM Universal Database MySQL Driver Requirement Requires database driver ojdbc5.jar, version Database driver included SOA Software Platform. Requires Universal JDBC Driver db2jcc.jar) specific installation. Requires database driver mysql-connector-java5.0.8-bin.jar, version Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Appendix Uninstalling SOA Software Platform OVERVIEW SOA Software Platform provides uninstall utility removing current product version. Uninstall process implemented using \"Uninstall SOA Software Wizard\" launched using \"Uninstall SOA Software Platform\" application sm60\\UnInstallerData folder SOA Software Platform release directory. run \"Uninstall SOA Software Platform Wizard\" uninstall SOA Software Platform version, feature related files removed designated SOA Software Platform directory. folder configuration files remain directory after Uninstall procedure completes its process. remaining folders files must manually deleted. Uninstall procedures provided SOA Software Platform Windows UNIX platform versions. BACKUP PROCEDURES SOA Software Platform uninstall process permanently removes SOA Software Platform feature files specified directory. Therefore, standard practice recommend complete backup copy most recent SOA Software Platform Installation Files Database. UNINSTALL SOA SOFTWARE PLATFORM (GUI) Uninstall SOA Software Platform (GUI) Step Procedure uninstall SOA Software Platform 6.1--Windows: Navigate sm60\\UninstallerData directory. Execute \"Uninstall SOA Software Platform\" launch \"SOA Software Platform Uninstall Wizard.\" uninstall SOA Software Platform 6.1--Linux Solaris: Navigate sm60\\UninstallerData directory. Execute Uninstall SOA Software Platform\" launch \"SOA Software Platform Uninstall Wizard.\" Note: uninstall SOA Software Platform via \"Console,\" \"Uninstalling SOA Software Platform--Console\" section. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Uninstall SOA Software Platform (GUI) Figure Start Uninstall--GUI \"Uninstall Software Platform Wizard\" cannot cancelled after Uninstall clicked. exit \"SOA Software Platform Uninstall Wizard,\" click Cancel. system displays \"Uninstall Not Complete\" message. Figure Cancel Installation--Uninstall Not Complete Message continue uninstall process, click Resume click Uninstall. following warning message displays providing key information pertaining uninstall process: Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Uninstall SOA Software Platform (GUI) Figure Uninstall Warning Message begin Uninstall process, click Figure Uninstalling SOA Software Platform--GUI uninstall process complete, \"Uninstall Complete\" screen displays presents list directories and/or files need physically deleted. Click Done exit \"SOA Software Platform Uninstall Wizard.\" Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Uninstall SOA Software Platform (GUI) Figure Uninstall Complete--GUI UNINSTALL SOA SOFTWARE PLATFORM (CONSOLE) section provides instructions uninstalling Linux Solaris version SOA Software Platform via console. Uninstall SOA Software Platform (Console) Step Procedure uninstall SOA Software Platform Linux Solaris via console, navigate sm60\\UninstallerData directory. Execute Uninstall SOA Software Platform launch \"SOA Software Platform Uninstall Wizard.\" \"Start Uninstall\" console screen displays. Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Uninstall SOA Software Platform (Console) Figure Start Uninstall--Console \"Uninstall SOA Software Platform Wizard\" cannot cancelled after Uninstall clicked. exit \"SOA Software Platform Uninstall Wizard,\" execute Cancel. system displays following message: \"Uninstall Not Complete. cancel uninstall SOA Software Platform not uninstalled. continue uninstall, click \"Resume.\" cancel uninstall, click \"Quit.\" begin Uninstall process, click Enter. \"Uninstalling SOA Software Platform\" screen displays, wizard begins uninstall process presents list features being uninstalled. Figure Uninstalling SOA Software Platform--Console Copyright SOA Software, Inc. SOA Software Platform Installation Guide Appendix Uninstalling SOA Software Platform Uninstall SOA Software Platform (Console) uninstall process complete, \"Uninstall Complete\" screen displays presents list directories and/or files need physically deleted. Copyright SOA Software, Inc. SOA Software Platform Installation Guide"},{"title":"Managing Policies with Policy Manager 7.x","url":"/ag/policy_management.htm","date":null,"type":"document","description":"Description of policy editor functions and tools for managing policy definitions.","categories":[],"body":"Description functions tools managing policy definitions. following policy management functions apply policy definitions Policies folder. available Policy Summary drop-down menu via Actions Portlet Policies Details page. back top Used add policy definitions used manage web service endpoints. Select Add Policy main Policies Summary page, select policy type, assign name description. Add Policy Wizard creates policy instance modify Policy Details page. back top Policies defined policies object Policies Folder) assigned organization, six different elements service. Each Policy assignment based business requirements defined policies supported each policy category Compliance, Operational, QoS) addition custom defined policies. Policy Attachments portlet Policy Details page attach policy select Manage. Select policy tree save configuration. back top Modify Policy Information Allows change name description policy. back top Allows move current policy configuration new \"Organization.\" back top Allows replicate policy definition assign new \"Policy Name\" \"Policy Key.\" Using function configure elements represent core functionality policy, replicate new policy, perform additional customization copy. back top Deletes selected policy definition. order delete policy, cannot \"Referenced\" attached more objects). number policy references indicated column Policies Summary page viewed selecting \"View Policy References.\" delete policy, must remove policy attachment via Policy Attachments Portlet. back top Provides method exporting policy definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Displays list objects current policy referencing. back top"},{"title":"Managing Processes with Policy Manager 7.x","url":"/ag/process_management.htm","date":null,"type":"document","description":"Description of  process editor functions and tools for managing process definitions.","categories":[],"body":"Description process editor functions tools managing process definitions. following table provides description each function used Process Palette. Process Palette available Processes (Common) section Processes folder), Services Operations Process Services Operations Fault section. Default Process service virtualized default process added each service operation. composed Receive Activity cannot deleted), Invoke Activity, Reply Activity. Edit Delete Activity Right-click Activity icon launch activities editor, update activity name, delete activity. Receive Activity Icon Part default process. Note: Activity type cannot deleted. Audit Activity Icon Launches Auditing Details Editor. Branch Activity Icon Launches Branch Details Editor. Insert Content Activity Icon Launches Insert Content Details Editor. Invoke Activity Icon Launches Invocation Details Editor Process Activity Icon Launches Process Selection Editor Reply Activity Icon Launches Reply Details Editor Script Activity Icon Launches Script Details Editor Transformation Activity Icon Launches Transformation Details Editor. Add View Activity Variables Launches Variable Details Editor. Save Process Database Saves current process database. process saved receive confirmation message indicating successfully saved. Note process must comply activity-specific input output criteria before saved. Delete Selected Object Deletes selected objects activity icons, connection arrows, etc.) Process Palette. Download Stored Process XML Format Allows save open process version currently stored database XML format. perform following actions. Reload Process Database Reloads last process saved database. Note updates current process not saved database lost. Process Help Icon Launches Policy Manager Online Help. back top following process management functions apply common process definitions Processes folder. available Process Summary drop-down menu via Actions Portlet Process Details page. back top Used add process instance. default process instance includes Receive Reply activity. Select Add Process main Process Summary page assign name description. Add Process Wizard creates process instance configure using Process palatte Process tab). Allows change name description process. back top Allows move current process configuration new \"Organization.\" back top Allows replicate process definition assign new \"Process Name\" \"Process Key.\" Using function configure elements represent core functionality process, replicate new process, perform additional customization copy. back top Deletes selected process definition. order delete process, cannot \"Referenced\" used more Process Activity definitions). number process references indicated column viewed selecting \"View Process References.\" delete process, must delete Process Activity process definition includes reference save process using \"Save Process Database\" function Process Palette Toolbar. back top Provides method exporting process definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Allows save open process version currently stored database XML format. perform following actions. back top Displays list service operations current process referencing Process Activity. back top"},{"title":"Process Reference for Policy Manager 7.x","url":"/ag/process_reference.htm","date":null,"type":"document","description":"Learn to create a process and use process activities in Policy Manager 7.x.","categories":[],"body":"Learn create process use process activities. process ordered graph activities performed container supports virtualization capability, Network Director. logic performed virtual service operation defined process. message received container, once virtual service operation identified, its process executed. dictated activities process, down-stream services may invoked. result process execution, response original message generated. example process default process virtual service operation. process message received using Receive Activity, Invoke Activity executed calls virtualized service operation, Reply responds response Invoke Activity. Processes more complex perform functions transformation content based routing. author process assemble activities achieve results Policy Manager allows creation processes two different contexts, implementation virtual service operation (Services Operation Process Services Operation Fault section), standalone process (Processes Folder) invoked another process achieve reusability. contexts, graphical editor provided construct process. Back top Process Editor allows create process graphical drag-and-drop environment. process ordered graph activities. process begins receiving message Receive Activity) process ends message returned Reply Activity) caller. Figure. Process Editor Activity Palette activities available called process available Activity Palette located upper left hand side editor graph. activity icon palette selected dragged process editor graph. Activities called order linked together directional connectors. link two activities select middle activity executed first. circle error appear. Figure. Starting Link Between Activities Drag mouse center activity executed next release. directional connector drawn linking two activities. Figure. Completing Link Between Activities series activities linked together called Sequence. sequence terminated either Branch Activity below) Reply Activity below). set linked activities Receive Activity Reply Activity may contain several sequences separated Branch Activities. entire set linked activities called Flow. Functions performed entire process available toolbar located lower left hand side editor graph. Figure. Process Editor Toolbar toolbar functions such saving process, editing variables used process Variable Editor), refreshing page, undoing last action. Back top Next Process Editor tab tab labeled Fault. tab define sequence activities executed fault encountered any point main process. main process once fault encountered, process execution immediately stops activity sequence Fault tab executed. Figure. Fault Sequence Editor Fault Sequence Editor works exactly main Process Editor except sequence does not need begin Receive Activity. Receive external client already executed main process. point just executing activities same process context. fault sequence executed, reserved variable name “fault” contain fault message triggering sequence. Activities reference variables use fault variable. fault sequence not required. fault sequence system simply return fault back client. sequence constructed, minimum Reply Activity must present end. Any activities activity palette used fault sequence including Branch activities. Each branch however must end Reply Activity. Reply Activity configured return fault message regular message controlled Fault field Reply Activity Editor Reply Activity section below). reserved fault name “CurrentFault” seen fault name pull-down indicates fault name content fault variable used as-is. name changed however any operation faults Binding Fault instead. allow perform fault mediation. Back top Variable Editor interface defining variables used process. Variables used different activities dictate behavior, such using variable identify endpoint service invoke. Variables used store output web service invocations provide input web service invocations. Figure. Variable Editor variable identified name defined type, syntax. types recognized system message (used input output web service invocation, request, reply activity), string, int, long, boolean, float, any hold any content). Activities support use variables configurations often restrict use variables based type. Optionally default value given variable. default, beginning process execution variable given value. Back top Receive Activity provides entry point process. caller invoke process providing message. message stored variable selected activity’s configuration screen. variables type message used. Receive activity process. Figure. Receive Activity Editor Back top Reply Activity provides exit point process. Every flow through process must Reply Activity. means multiple branches created Branch Activity, each branch must terminated Reply Activity. Reply activity return message caller. not required one-way operation processes. variables type message used. Figure. Reply Activity Editor addition specifying variable holding message return indicate message fault providing Fault Name. Faults fall two main categories, application faults binding faults. application fault defined WSDL document operation. Policies attached binding fault typically not referenced anywhere. Reply Activity Editor Fault Name pull-down provided contain application faults found WSDL document operation reserved fault name “BindingFault.” choose message being returned represents. option provided called “CurrentFault.” option available Fault Sequence Editor. requires reserved fault variable filled message its fault name already known used Figure. Fault Reply Activity Back top Invoke Activity invokes operation service registered system. operation invoked sending message specified input variable activity. response operation invocation stored output variable. input output variables both same variable. Figure. Invoke Activity Input Output Variables operation invoked specified either statically dynamically through use variables. statically identify operation invoke, first start searching service operation. Figure. Invoked Service Search search performed using QNames. Search button clicked system searches any service QName contains typed Service QName field. nothing entered services returned. Figure. Invoked Service Search Result search results listed Service pull-down. Once correct service selected interface pull-down populated interfaces defined selected service. once correct interface selected operations selected interface populate Operation pull-down. Finally operation selected. Figure. Static Operation Selection Variables used specifying service, interface, and/or operation. variable must string typed variable. service operation string must QName format {namespace}localpart. runtime any variable values not match registered Policy Manager invocation fail. mix static selections variables once variable used remaining selections must variables. example, use variable interface must use variable operation. Figure. Static Dynamic (Variable) Operation Selection default access point (endpoint) called invoking operation selected runtime container using its selection strategy. dictate access point called selecting Invoke Access Point Directly checkbox. Once selected either enter URL directly access point name. Just service, interface, operation, select access point its pull-down use string variable resolved runtime. Figure. Direct Access Point Invocation default identities used invoking operation dictated outbound identity configuration virtual service. possible change those identities individual Invoke activity selecting Custom Mapping radio button Identity section. Figure. Custom Identity Mapping Selection Once selected Next button activity wizard enabled. Select Next Outbound Identity Configuration page displayed. page works similarly Outbound Identity Configuration page virtual service. select source outbound subject categories create mappings. Figure. Custom Outbound Identity Configuration Auditing message sent wire access point achieved simply selecting Audit checkbox. virtual service operation invocation executing process must currently being audited use auditing policy downstream message audited. Back top Script Activity provides ability execute script point process activity connected. script written either JavaScript, Jython, BeanShell. Script Details Editor organized two separate areas, Imports Source. Source pull-down select script language. large source code editor text area. Figure. Script Activity Source Area Common functions may need perform scripts saved Script objects using Add Script function Scripts section each Organization Policy Manager Workbench. make use those common functions Script Activity Script objects defining those functions must imported. Imports area those scripts identified import. available scripts listed Available Scripts tree. Any number Scripts tree moved Imported Scripts list box. scripts match language type available selection tree. script does not return value. Figure. Script Activity Imports Area figure above json2 Script Registry Scripts folder imported. Any functions defined json2 used Script Activity source code. following pre-defined variables provided. more information refer Scripts API located \\sm70\\docs\\scriptDocs folder Policy Manager release folder. Click index.htm launch documentation: following script creates normalized copy message saves variable. line processContext used message variable named “message”. line normalized copy made message. Finally line processContext used save normalized copy variable named “copy” used activities execute after process. next script illustrates use msgFactory create normalized message. normalized message contains XML element referenced wsdl:Message element WSDL document. line msgFactory used create normalized message named temp. line content line set temp message content. line processContext used save new message variable named temp. Message creation not limited normalized messages. Protocol specific messages any content-type constructed using msgFactory. following example shows creation JSON message. Note line call msgFactory create message different, both function name need specifying content-type message, application/json case. Back top Branch Activity provides mechanism alternate process flows, branches, based boolean conditions. Drop Branch Activity Process page connect last activity executed before branch Branch Activity. Figure. Adding Branch Activity Branch Activity itself very little configuration. branch conditions themselves most information. double click Branch Activity list conditions most importantly establish expression language each branch condition use. branch conditions must use same language. supported languages XPath, JavaScript, Jython, BeanShell. Figure. Branch Activity Editor create branch add next activity performed process graph, select Branch Activity connect next activity. Figure. Creating Branch Branch Activity similar Java switch statement. support multiple branches. branch followed. branches boolean conditions defined either XPath expression script.  Each branch evaluated order. first evaluate true selected sequence activities associated branch performed. Branch conditions defined separately main Branch Activity Condition Details Editor. add branch condition adding new activity sequence Script Activity, Invoke Activity, etc. dragging connector main Branch Activity target activity. must always default branch selected branch conditions evaluate true. default branch condition named \"Otherwise\" must added set each Branch Activity configuration. branch condition written any languages drop-down, set Branch Details Editor changed language selected apply conditions branch. Note branch conditions defined choose change language source deleted.  recommended make copy source content prior changing language. After select language case conditions, save exit Branch Activity add connections. result condition must either true false. multiple conditions branch, order executed changed moving each condition down Case Conditions table. Note \"Otherwise\" condition does not display Case Conditions table must still defined. first branch created most cases become Otherwise branch although changed. change branch’s condition double click connector between Branch Activity next activity branch sequence. branch condition written either XPath, JavaScript, Jython, BeanShell. result condition must either true false. Figure. Branch Condition Editor figure above condition configured use XPath language boolean expression. expression checks first price element found content message named “message” its value greater condition met. Note namespace prefix defined bottom page. using XPath expression language field selecting message variable use context expression displayed. expression evaluated against variable’s content. variable’s content must XML error generated runtime. using script language script evaluated last line execution expected result boolean true false. context script provided subset variables described Script Activity above: following figure condition triggered value price variable greater Figure. JavaScript Branch Condition Back top Transformation Activity provides mechanism transforming XML message string content. transformation based XSLT. input activity message string variable. transformed content replace input variable content completion activity. Figure. Transformation Activity Example figure above, XSL Stylesheet remove BankId element prefix account each account bank message variable following content: After executing Transformation Activity content message variable Audit Activity provides mechanism auditing message. audited message content recorded displayed audited message content Auditing Policy. information displays Monitoring pages service Services Monitoring). input activity message variable. several options portion message variable content audited. Capture Details section Activity Editor two primary options; capture complete message portion message. Figure. Auditing Complete Message \"Capture complete message\" option selected record name, label, needs specified. \"Capture message following expressions\" option selected list expressions entered. Figure. Auditing Portions Message Each expression use different language. supported languages XPath, JSONPath, Regular Expression. XPath expressions used input content XML. JSONPath expressions used input content JSON. Regular Expressions used types content. Each expression its own Record Name, label. case content not viewable others audit log option masking content. Masked Elements section specify mask password, account number) list expressions identify content masked. Figure. Masking Audited Elements expressions Masked Elements section similar those Capture Details section. same languages supported masking same mapping message content type expression language. results expressions replaced mask string. look entire activity definition auditing just account elements/properties XML JSON messages masking account id’s mask Figure. Audit Activity Example Note XPath expressions require namespace prefix definitions specified bottom editor. Back top Insert Content Activity used fill content String Message variable. source content either statically defined content existing variable. section activity editor identifies source content. specify static content inserted select Static Content radio button. Once selected text area displayed content any type, XML, JSON, text, etc. entered. text field displayed must enter mime content type static content entered text area application/xml application/json). Figure. Static Content use content variable input select Variable radio button. Once selected Filter section displayed. Select Filter check box portion variable’s content inserted. insert entire content variable not select checkbox. filter defined using filter expression written selected language. languages supported XPath XML content), JSONPath JSON content), Regular Expression any content). result filter expression applied input variable inserted. possible filter expression results multiple elements properties being used input. Figure. Filtered Variable Content defining XPath filter expressions namespaces specified elements must included. done using namespace prefix expression. namespace prefixes must mapped namespace Namespace Prefixes table bottom activity page. Figure. Namespace Prefixes section activity identifies target content specified section. target inserted content must variable. content either initialize/replace content variable section inserted existing content target variable. replacing entire content variable variable not yet initialized initialized result activity. insert existing content target location must identified using filter similar described section. Based filter expression possible multiple target locations found. Once target location identified choice whether source content inserted/added location source content replace location needs made. choice made selecting either Append Replace radio button. Note, Replace option available using Regular Expression language. Figure. Filtered Content Target following figure illustrates use Insert Content initialize message static XML content. Figure. Static Content Example Since filter defined section static XML content replace content var1, var1 not yet initialized process static XML content used initialize var1. next figure illustrates using Insert Content Activity extract portion source variable append target variable specified location. Figure. Append Content Example account elements message variable appended accounts element var1. accounts element found root var1 error generated. activity perform runtime take following content message variable: following content var1 variable: result activity var1 following content: Back top Process Activity allows call process another create processes common activities call those processes appropriate point another process. processes common activities reusable organized Processes folder each Organization Policy Manager Workbench. Reusable processes themselves Process activities call reusable processes. configuration Process Activity simple. editor presents tree reusable processes Processes folder each Organization Policy Manager Workbench. simply select Figure. Process Activity Editor process called another process, calling process’s context passed called process. variables values calling process passed through. called process defines variables same names ones calling process, calling process’s variables used. Back top"},{"title":"API Gateway Reference","url":"/ag/reference.html","date":null,"type":"document","description":"API Gateway Reference Documents","categories":[],"body":"documents pages reference section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"Managing Scripts","url":"/ag/script_management.htm","date":null,"type":"document","description":"Tools for managing Script definitions in Policy Manager 7.x.","categories":[],"body":"Tools managing Script definitions. following script management functions apply scripts defined Scripts folder. available Script Summary, Script Summary drop-down menu, via Actions Portlet Script Details page. Allows define common functions may need perform scripts save Script objects. back top Allows change name description script. back top Allows move current script configuration new \"Organization.\" back top Allows replicate script definition assign new \"Script Name\" \"Script Key.\" Using function configure elements represent core functionality script, replicate new script, perform additional customization copy. back top Deletes selected script definition. order delete script, cannot \"Referenced\" used/imported more Script Activity definitions). number script references indicated column viewed selecting \"View Script References.\" delete script, must remove script list imported scripts Script Activity process definition. back top Provides method exporting script definition \"Package\" file. \"Package\" file imported different Policy Manager deployment using \"Import Package\" function. back top Allows update script definition. back top Displays processes QoS Policies using current script. back top"},{"title":"Policy Manager 7.x Scripting API","url":"/ag/scripting_api.html","date":null,"type":"document","description":"Provides a series of interfaces and classes you can use to build process related scripts.","categories":[],"body":"never display"},{"title":"SOLA Install Guide 6.1","url":"/ag/sola_install_guide_6.1.html","date":null,"type":"pdf","description":"The Install instructions for SOLA 6.1.","categories":[],"body":"SOLA Version Installation Guide SOLA CICS Container SOLA IMS Container SOLA Development Studio SOLA Resource Manager Revision Date: June Copyright SOA Software, Inc. SOLA Installation Guide Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. SOLA Installation Guide Table Contents INSTALLATION GUIDE PREFACE VII Before Begin vii Installation Components Overview SOLA Installation Process Guide System Requirements xii Customer Support xiv CHAPTER INSTALLING SOLA RUN-TIME Z/SERIES MAINFRAME Installation Requirements Considerations Driving System Requirements Target System Requirements Installation Instructions Overview SOLA z/OS installation Unzip distribution files Transmit distribution files mainframe.............................................. Create install library Customize WRKSHEET environment Receive distribution files Customize sample installation JCL Use SMP/E install sola z/OS CHAPTER CUSTOMIZING SOLA CICS CONTAINER Z/SERIES MAINFRAME (SOLA600) Customizing SOLA installation Customizing <tlibhlq>.SAMPLIB Creating Database DDLJCL Binding Plan Packages BINDJCL Creating <vsamUMT> <vsamCMT> files IDCAMJCL Define CICS CSD entries CSDJCL...................................................... Define CICS Analyzer use SOLA (Optional) TCPIPS Definition........................................................................................ RACF Authorizing SOLA Transactions (optional) Defining IMS components (optional) Setting IMS Message Processing Region (optional) Populating data sample application (Recommended) Migration SOLA6.1 SOLA5.1 (Optional) CHAPTER CUSTOMIZING SOLA IMS CONTAINER Z/SERIES MAINFRAME (SOLS600) Customizing SOLA installation Customizing <tlibhlq>.SAMPLIB Copyright SOA Software, Inc. SOLA Installation Guide iii Creating Database DDLJCL Binding Plan Packages BINDJCL RACF Authorization SOLA IMS Container APF Authorize SOLA Load Library (Recommended) Defining IMS components Setting IMS Message Processing Region (optional) Configuring SOLA IMS Container CHAPTER INSTALLING SOLA DEVELOPMENT STUDIO Overview Installing SOLA Development Studio WebSphere Installing SOLA Development Studio WebLogic Installing SOLA Development Studio Tomcat CHAPTER CUSTOMIZING SOLA Development Studio Customization worksheet Copyright SOA Software, Inc. SOLA Installation Guide Table Figures Figure Driving System Software Requirements Figure Mandatory Requisites Figure Functional Requisites Figure Total DASD space required SOLA z/OS Figure WebSphere Application Server Logon page Figure WebSphere Application Server Integrated Solutions Console Figure WebSphere Application Server Install new Application Figure WebSphere Application Server Select sola.ear file Figure WebSphere Application Server Upload sola.ear file Figure WebSphere Application Server Select Installation Options Figure WebSphere Application Server Map modules servers Figure WebSphere Application Server Map virtual hosts web modules Figure WebSphere Application Server Summary Figure WebSphere Application Server Save Figure WebSphere Application Server Configure class loading policy Figure WebSphere Application Server Class loading Figure WebSphere Application Server General Properties Figure WebSphere Application Server Configuring SOLARoot Figure WebSphere Application Server Server Infrastructure Figure WebSphere Application Server Process Definition Figure WebSphere Application Server JVM Figure WebSphere Application Server JVM Properties Figure WebSphere Application Server JVM Properties Figure WebLogic Start-up Figure WebLogic Server Administration Console Figure WebLogic Server Home Figure WebLogic Deploy new application Figure WebLogic Install Update Application Figure WebLogic Choose file Figure-30: WebLogic File selected..................................................................... Figure WebLogic Deploy Application Figure WebLogic Deploy Figure WebLogic Successful Deployment Figure WebLogic Start WebLogic Script Figure WebLogic Start-up Figure Tomcat war file copy Figure Tomcat Edit server.xml Figure Tomcat server.xml Figure Tomcat Edit catalina.bat Figure Tomcat catalina.bat Figure Tomcat Start Tomcat Figure Tomcat Command Prompt Window Figure Login installation Figure Enter product Figure Read agree license agreement Figure Accept license agreement Figure Debugging XML Figure EndPoint Key Value pairs Figure endpoints changed Copyright SOA Software, Inc. SOLA Installation Guide Figure Figure Figure Figure Figure Figure Figure Figure Figure Figure Figure Figure Figure Selecting /Jobcard.txt........................................................................ Modifying /Jobcard.txt Creating Environments Adding SOLA Administrator........................................................... Creating Container group Container Choosing environment Login SOLA Administrator Create Container Group Create Container Group (IMS version) Container Group created successfully Create new container Create new container New Container created Copyright SOA Software, Inc. SOLA Installation Guide Preface Preface installation guide provides instructions installing, configuring, running SOLA Development Studio J2EE platform (WebSphere, WebLogic Tomcat), installing SOLA run-time z/OS using SMP/E. first half manual devoted SMP/E installation run-time second half addresses Development Studio installation. Note: manual documents installation multiple SOLA products. differentiate between two mainframe products, SOLA CICS Container (FMID: SOLA600) SOLA IMS Container (FMID: SOLS600), each product referenced its FMID, sections installation SOLA CICS Container identified SOLA600, while sections installation SOLA IMS Container identified SOLS600. BEFORE BEGIN SOLA installation process includes following mandatory pre-installation steps new upgrade installations: SOLA Pre-installation Requirements SOLA Installation Scenario SOLA Server Pre-installation Requirement J2EE Application Server: Before installing SOLA Development Studio J2EE application server must first install application server. SOLA supports installation SOLA Development Studio WebSphere, WebLogic Tomcat. Next need create installation directory file system J2EE server copy installation EAR WAR file(whichever appropriate) installation package directory. Cookies must enabled browser settings order use SOLA Development Studio Note: SOLA requires JRE (Java Runtime Environment) above. Client Web Browser z/OS Server need following systems and/or subsystems installed running destination machine: SOLA CICS Container (SOLA600): processor higher encryption required version greater MVS/ESA higher CICS greater CICS CWS CICS Sockets outbound support and/or IMS is/are required Bridge Linkable Bridge support transport required Copyright SOA Software, Inc. SOLA Installation Guide vii Version higher UDDI inquiry Dashboard functionality MVS FTP server must running development environment Integrated Cryptographic Service Facility (ICSF) XML Encryption, XML Signature outbound SSL required) Optional: IMS version greater, access IMS/TM transactions. Optional: IMS Connect version greater and/or OTMA/CI, access IMS/TM transactions. processor higher encryption required version greater MVS/ESA higher Version higher UDDI inquiry Dashboard functionality MVS FTP server must running development environment Integrated Cryptographic Service Facility (ICSF) XML Encryption, XML Signature outbound SSL required) IMS version greater, access IMS/TM transactions. IMS Connect version greater and/or OTMA/CI, access IMS/TM transactions. SOLA IMS Container (SOLS600): Copyright SOA Software, Inc. SOLA Installation Guide viii INSTALLATION COMPONENTS complete SOLA installation includes variety different components accommodate SOA creation, publishing, management monitoring needs. following table lists SOLA Installation Components: Installation Components SOLA Component Description SOLA CICS Container (SOLA600) z/Series mainframe CICS runtime component. component used backend SOLA Development Studio SOAP runtime engine provides SOAP capability z/Series mainframe. z/Series mainframe Started Task Address Space run-time component. component used backend SOLA Development Studio SOAP runtime engine provides SOAP capability IMS transactions execute z/Series mainframe. SOLA Development Studio J2EE application runs J2EE compliant server. use browser higher) access SOLA Development Studio create, publish, manage monitor services. SOLA Resource manager J2EE application runs J2EE compliant server. use browser higher) access SOLA Resource Manager manage SOLA resources. optional SOLA IMS component includes ability expose transactions subroutines run IMS/TM SOLA CICS Container. component requires installation sample subroutine driver programs transactions IMS/TM. SOLA IMS Container (SOLS600) SOLA Development Studio SOLA Resource Manager SOLA IMS enablement (optional SOLA CICS Container) Copyright SOA Software, Inc. SOLA Installation Guide OVERVIEW SOLA INSTALLATION PROCESS SOLA installation process designed handle following three scenarios: Install SOLA new customer installation Install SOLA upgrade SOLA Install SOLA SOLA installation. SOLA Directory redesigned, SOLA ships Migration manual series migration jobs migrate SOLA Directory new SOLA Directory. New customers safely ignore migration steps. Upgrade customers (SOLA need run migration process referenced Migration Guide. migration performed after mainframe install complete, before start SOLA Development Studio installation. SOLA testing sites need recycle SOLA Server after run migration batch jobs. first step installing SOLA install SOLA run-time container z/Series mainframe using SMP/E. Two run-time containers provided: SOLA CICS Container (SOLA600) SOLA IMS Container (SOLS600). Once mainframe components installed complete installation customizing running jobs SAMPLIB. Next install SOLA Development Studio J2EE application server, use SOLA Development Studio customize SOLA installation test complete installation running sample applications included SOLA installation. Finally install SOLA Resource Manager help manage SOLA resources (Service Level Agreements, Policies, run-time containers, etc). Note: z/Series mainframe installation must completed before starting SOLA Development Studio installation. GUIDE guide includes following chapters: Chapter \"Installing SOLA run-time z/Series mainframe\" provides list steps installing SOLA software components onto z/Series mainframe. Chapter \"Customizing SOLA CICS Container z/Series mainframe\" provides list steps customizing SOLA CICS Container software components z/Series mainframe. Copyright SOA Software, Inc. SOLA Installation Guide Chapter \"Customizing SOLA IMS Container z/Series mainframe\" provides list steps customizing SOLA IMS Container software components z/Series mainframe. Chapter \"\"Installing SOLA Development Studio\" provides list steps installing SOLA software components onto J2EE server. \"Installing SOLA Development Studio WebSphere\" provides list steps installing SOLA software components WebSphere Application Server. \"Installing SOLA Development Studio WebLogic\" provides list steps installing SOLA software components Weblogic Application Server. \"Installing SOLA Development Studio Tomcat\" provides list steps installing SOLA software components Tomcat Application Server. Chapter \"Customizing SOLA\" provides list steps installing customizing SOLA software components make SOLA ready use. Copyright SOA Software, Inc. SOLA Installation Guide SYSTEM REQUIREMENTS following table lists minimum system requirements running SOLA Component Name SOLA CICS Container (SOLA600) Requirement Hardware z/Series class machine processor higher encryption required) Operating System Z/OS Version Release higher z/OS Version Release higher CICS CICS CWS Sockets IMS CICS higher Version higher CICS Web Support CICS Sockets outbound support and/or IMS is/are required Bridge Linkable Bridge support transport required IMS version higher SOA enablement IMS transactions and/or subroutines required Version higher UDDI inquiry MVS FTP server Integrated Cryptographic Service Facility (ICSF) XML Encryption, XML Signature outbound SSL required) z/OS Conversion Services conversion Unicode UDDI SOLA Dashboard Development Studio support Encryption Codepage Conversion SOLA IMS Container (SOLS600) Hardware z/Series class machine processor higher encryption required) Operating System Z/OS Version Release higher z/OS Version Release higher Copyright SOA Software, Inc. SOLA Installation Guide xii Component Name Requirement IMS Version higher IMS version higher SOA enablement IMS transactions and/or subroutines Version higher UDDI inquiry MVS FTP server Integrated Cryptographic Service Facility (ICSF) XML Encryption, XML Signature outbound SSL required) z/OS Conversion Services conversion Unicode UDDI SOLA Dashboard Development Studio support Encryption Codepage Conversion SOLA Development Studio SOLA Resource Manager Client Documentation Any standard J2EE environment running JRE (Java Runtime Environment) above Any standard J2EE environment running JRE (Java Runtime Environment) above above SOLA product documentation published Portable Document Format (PDF) requires Acrobat Reader above. Copyright SOA Software, Inc. SOLA Installation Guide xiii CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone solasupport@soa.com. (PST) Documentation Updates Updates SOLA product documentation issued periodically, available submitting email request solasupport@soa.com. Copyright SOA Software, Inc. SOLA Installation Guide xiv Chapter Installing SOLA run-time z/Series mainframe Chapter Installing SOLA run-time z/Series mainframe INSTALLATION REQUIREMENTS CONSIDERATIONS following sections identify system requirements installing activating SOLA z/OS. following terminology used: Driving system: system used install program. Target system: system program installed. same system used both driving system target system. DRIVING SYSTEM REQUIREMENTS section describes environment driving system required install SOLA z/OS. Machine Requirements driving system run any hardware environment supports required software. Programming Requirements Program Number Any following: Any following: SMP/E Version Release higher SMP/E z/OS Version Release higher Version Release higher z/OS Version Release higher Product Name Minimum VRM/Service Level Figure Driving System Software Requirements Copyright SOA Software, Inc. SOLA Installation Guide SOLA z/OS uses REXX language ISPF edit macros during installation. REXX language ISPF edit macros require Version Release higher z/OS Version Release higher. Copyright SOA Software, Inc. SOLA Installation Guide TARGET SYSTEM REQUIREMENTS section describes environment target system required install use SOLA z/OS. SOLA z/OS installs MVS SREL. Machine Requirements target system run any hardware environment supports required software. Programming Requirements Mandatory Requisites mandatory requisite defined product required without exception; product either not install not function unless requisite met. includes products specified REQs PREs. Program Number Any following: following: IBM UDB Server Version higher High Level Assembler Version higher Version Release higher z/OS Version Release higher Product Name Minimum VRM/Service Level Figure Mandatory Requisites Copyright SOA Software, Inc. SOLA Installation Guide Functional Requisites functional requisite defined product not required successful installation product basic function product, needed run time specific function product work. Program Number Product Name Minimum VRM/Service Level CICS Version Release higher ISPF Version higher Version Cryptographic Services fixes APAR z/OS Communications Server Version Release Function SOLA CICS Container Installation WS-Security Development Studio Sockets COMMAREA programs COMMAREA programs transport UDDI Inquiry SOLA Dashboard SOLA IMS Container and/or IMS transactions programs IMS transactions programs Unicode conversions IBM COBOL PL/I MVS WebSphere z/OS IBM UDB Server Version higher IBM Information Management System (IMS), IMS Connect z/OS Conversion Services (part base z/OS) Figure Functional Requisites Toleration/Coexistence Requisites toleration/coexistence requisite defined product must present sharing system. systems systems multi-system environment (not necessarily sysplex), shared DASD environment (such test production), systems reuse same DASD different time intervals. SOLA z/OS toleration/coexistence requisites. Copyright SOA Software, Inc. SOLA Installation Guide Incompatibility (Negative) Requisites negative requisite identifies products must not installed same system product. negative requisites SOLA z/OS. Installing SOLA any program product zones not result overlaying listed modules. Copyright SOA Software, Inc. SOLA Installation Guide DASD Storage Requirements SOLA z/OS libraries reside supported DASD types. Figure lists total space required each type library. Library Type Target Distribution Directory Statistics Total Space Required tracks tracks Bytes (Estimated) Bytes (Estimated) Figure Total DASD space required SOLA z/OS FMIDs Deleted Installing SOLA z/OS result deletion previous SOLA versions FMIDs SOLA100 SOLA501). Special Considerations SOLA z/OS special considerations target system. Copyright SOA Software, Inc. SOLA Installation Guide INSTALLATION INSTRUCTIONS chapter describes installation method step-by-step procedures install SOLA z/OS. next chapter describes further step-by-step procedures customizing functions SOLA z/OS. SOLA z/OS distributed assumption installed separate SMP/E zone. installed existing SMP/E zone restrictions described above. SMP/E installed SOLA z/OS, refer Customizing SOLA installation page testing activating SOLA z/OS. components SOLA z/OS SOLA z/OS comprises two products: SOLA CICS Container (SOLA600) SOLA IMS Container (SOLS600) Each product required features optional features. explained Required features: SOLA CICS Container (SOLA600) Base base comprises basic functions SOLA z/OS SOAP Stack). SOLA CICS Container base includes BMS support, COMMAREA support, Channels Containers support, Callable support, Dynamic SQL support, Stored Procedure support outbound support. VSAM support not included release. SOLA IMS Container (SOLS600) Base base comprises basic functions SOLA z/OS SOAP Stack). SOLA IMS Container base includes IMS Transaction support, IMS Subroutine support outbound support. Optional Features IMS support optional feature SOLA CICS Container (SOLA600). Copyright SOA Software, Inc. SOLA Installation Guide OVERVIEW SOLA Z/OS INSTALLATION section covers installation SOLA CICS Container (SOLA600) SOLA IMS Container (SOLS600), referred section jointly SOLA z/OS. Begin choosing product(s) you're installing z/OS, installation process differs slightly between SOLA CICS Container SOLA IMS Container. installation process SOLA z/OS uses SMP/E RECEIVE, APPLY, ACCEPT commands place SOLA z/OS appropriate system libraries. need more information given document, refer full description SMP/E IBM SMP/E User's Guide SMP/E Reference books. SMP/E used apply preventive corrective service after SOLA z/OS installed. section covers following topics. advised read sections before start install SOLA z/OS. Installation summary SOLA z/OS page Prepare install SOLA z/OS page Unzip distribution files page Transmit distribution files mainframe page Installation summary SOLA z/OS steps installing SOLA z/OS summarized below. Sample JCL provided steps except Before installing SOLA z/OS, must choose names values number parameters. names values depend standards apply z/OS environment. need decide whether install any optional features. Review sample installation worksheet provided distribution FTP site customize names values chosen above used modify required JCL. Set SMP/E environment. environment must tailored SOLA z/OS. Add DDDEF statements SMP/E environment define target distribution libraries SMP/E installing existing SMP/E zone). Allocate target distribution libraries. Unzip distribution files distribution FTP site. Transmit distribution files mainframe using FTP. Run SMP/E RECEIVE job unload required features distribution files. Copyright SOA Software, Inc. SOLA Installation Guide Run SMP/E APPLY job apply FMIDs. Run SMP/E ACCEPT job accept product. SOLA z/OS installed, use SMP/E install preventative corrective service required. Prepare install SOLA z/OS Before install SOLA z/OS, must make following decisions preparations. decisions make affect customization sample JCL provided SOLA z/OS. write down appropriate values work through section. applicable, space provided note values assigned. Decide parts SOLA z/OS wish install; parts available described components SOLA z/OS page Ensure correct prerequisite products installed. information prerequisite products, levels products required install use SOLA z/OS, System Requirements page xii. Plan environment install SOLA z/OS need decide: Space requirements \"DASD Storage Requirements\" page High-level qualifiers use \"High-level qualifiers\" page SMP/E environment: creating new using existing SMP/E environment \"SMP/E environment\" page High-level qualifiers must customize installation JCL specify high-level qualifiers used SOLA z/OS. Use attached worksheet (WKSHEET.doc) assist task make changes SOLAEDT edit macro. Any high-level qualifiers not already exist must defined RACF any security product using, ALIAS definitions master catalog. SMP/E environment must decide whether install SOLA z/OS new existing SMP/E environment. Remember installing new release SOLA z/OS same SMP/E zones existing release cause earlier level deleted both SMP/E zones existing release data sets. install same SMP/E zones, preserve current release while installing testing new release. achieve copying existing release data sets data sets different names. not rename delete current data sets need available SMP/E delete processing during installation new release. not available, APPLY ACCEPT steps fail return code After running successful ACCEPT SOLA z/OS products, previous release data sets longer required deleted testing new release completed. Copyright SOA Software, Inc. SOLA Installation Guide use existing SMP/E data sets, need know names target zone distribution zone, data set name global CSI. Note: installing existing zones: PEMAX options entry must least left default. DSSPACE options entry must specify least directory blocks. must decide upon names SMP/E zones WKSHEET.doc). Copyright SOA Software, Inc. SOLA Installation Guide UNZIP DISTRIBUTION FILES root directory distribution package contains five directories: zSeries directory contains two sub directories, SOLA CICS Container SOLA IMS Container. Each sub directory contains smpe.zip, contains distribution files need SOLA's SMP/E install. SOLA CICS Container, unzipping smpe.zip file create following files: $putfiles.cmd $putfiles.scp SOLA600.F1.XMI SOLA600.F2.XMI SOLA600.F3.XMI SOLA600.F4.XMI SOLA600.F5.XMI SOLA600.SMPPTFIN.XMI SOLA600.INSTLIB.XMI SOLA600.JCL.XMI SOLA600.TXT installation jobs first two installation jobs+WORKSHEET first installation job windows bat file start ftp transfer contains ftp commands upload files Note: .XMI files TSO XMITted PDS data sets. SOLA IMS Container, unzipping smpe.zip file create following files: $putfiles.cmd $putfiles.scp windows bat file start ftp transfer contains ftp commands upload files Copyright SOA Software, Inc. SOLA Installation Guide SOLS600.F1.XMI SOLS600.F2.XMI SOLS600.F3.XMI SOLS600.F4.XMI SOLS600.F5.XMI SOLS600.SMPPTFIN.XMI SOLS600.INSTLIB.XMI SOLS600.JCL.XMI SOLS600.TXT installation jobs first two installation jobs+WORKSHEET first installation job Note: .XMI files TSO XMITted PDS data sets. Copyright SOA Software, Inc. SOLA Installation Guide TRANSMIT DISTRIBUTION FILES MAINFRAME Transmit distribution files mainframe (SOLA600) Edit $putfiles.cmd using Windows Notepad file editor: file contains single record, follows: ftp <MainFrameFTPServerName> $putfiles.scp Change <MainFrameFTPServerName> mainframe ftp server FQDN. example, mainframe FTP Server FQDN MF.TESTSVR.COM change <MainFrameFTPServerName> MF.TESTSVR.COM. Make sure remove characters. After changes record ftp MF.TESTSVR.COM $putfiles.scp Edit $putfiles.scp using Windows Notepad file editor: file contents shown below: user <userName> <passWord> type image QUOTE SITE REC=FB BLK=3120 put 'SOLA600.f1.xmi' put 'SOLA600.f2.xmi' put 'SOLA600.f3.xmi' put 'SOLA600.f4.xmi' put 'SOLA600.f5.xmi' '<xmihlq>.SOLA600.f1.xmi' '<xmihlq>.SOLA600.f2.xmi' '<xmihlq>.SOLA600.f3.xmi' '<xmihlq>.SOLA600.f4.xmi' '<xmihlq>.SOLA600.f5.xmi' put 'SOLA600.INSTLIB.xmi' '<xmihlq>.SOLA600.INSTLIB.xmi' put 'SOLA600.JCL.xmi' '<xmihlq>.SOLA600.JCL.xmi' put 'SOLA600.SMPPTFIN.xmi' '<xmihlq>.SOLA600.SMPPTFIN.xmi' ASCII QUOTE SITE REC=FB BLK=27920 put 'SOLA600.txt' '<xmihlq>.SOLA600.txt' Change <userName> <passWord> valid RACF userid password. fields not case sensitive. Make sure remove characters. Change references <xmihlq> transmit(xmit) high-level-qualifier chose wrksheet.doc). Make sure remove characters. Copyright SOA Software, Inc. SOLA Installation Guide Transfer files distribution package mainframe executing $putfiles.cmd manually transmitting Note: may beneficial pre-allocate datasets <xmihlq>.SOLA600.* mainframe before starting FTP. choose manually transmit files, need Allocate .XMI files DCB attributes LRECL=80, BLKSIZE=3120 transmit binary Allocate <xmihlq>.SOLA600.TXT DCB attributes LRECL=80 transmit ASCII. recommend create alias high level qualifier (hlq) SOLA V6R0M0 installation files. catalog files USER ICF catalog. Customize sample job define such alias: //STEP010 EXEC PGM=IDCAMS //SYSPRINT SYSOUT=* //SYSOUT SYSOUT=* //SYSIN DEFINE ALIAS(NAME(disthlq) RELATE(your.user.catalog))CATALOG(your.master.catalog/password) Note \"disthlq\" correspond parameter <disthlq>, set installation worksheet later. choose not create catalog alias select value <disthlq> write access Copyright SOA Software, Inc. SOLA Installation Guide Transmit distribution files mainframe (SOLS600) Edit $putfiles.cmd using Windows Notepad file editor: file contains single record, follows: ftp <MainFrameFTPServerName> $putfiles.scp Change <MainFrameFTPServerName> mainframe ftp server FQDN. example, mainframe FTP Server FQDN MF.TESTSVR.COM change <MainFrameFTPServerName> MF.TESTSVR.COM. Make sure remove characters. After changes record ftp MF.TESTSVR.COM $putfiles.scp Edit $putfiles.scp using Windows Notepad file editor: file contents shown below: user <userName> <passWord> type image QUOTE SITE REC=FB BLK=3120 put 'SOLS600.f1.xmi' put 'SOLS600.f2.xmi' put 'SOLS600.f3.xmi' put 'SOLS600.f4.xmi' put 'SOLS600.f5.xmi' '<xmihlq>.SOLS600.f1.xmi' '<xmihlq>.SOLS600.f2.xmi' '<xmihlq>.SOLS600.f3.xmi' '<xmihlq>.SOLS600.f4.xmi' '<xmihlq>.SOLS600.f5.xmi' put 'SOLS600.INSTLIB.xmi' '<xmihlq>.SOLS600.INSTLIB.xmi' put 'SOLS600.JCL.xmi' '<xmihlq>.SOLS600.JCL.xmi' put 'SOLS600.SMPPTFIN.xmi' '<xmihlq>.SOLS600.SMPPTFIN.xmi' ASCII QUOTE SITE REC=FB BLK=27920 put 'SOLS600.txt' '<xmihlq>.SOLS600.txt' Change <userName> <passWord> valid RACF userid password. fields not case sensitive. Make sure remove characters. Change references <xmihlq> transmit(xmit) high-level-qualifier chose wrksheet.doc). Make sure remove characters. Transfer files distribution package mainframe executing $putfiles.cmd manually transmitting Copyright SOA Software, Inc. SOLA Installation Guide Note: may beneficial pre-allocate datasets <xmihlq>.SOLA600.* mainframe before starting FTP. choose manually transmit files, need Allocate .XMI files DCB attributes LRECL=80, BLKSIZE=3120 transmit binary Allocate <xmihlq>.SOLS600.TXT DCB attributes LRECL=80 transmit ASCII. recommend create alias high level qualifier (hlq) SOLA SOLS600 installation files. catalog files USER ICF catalog. Customize sample job define such alias: //STEP010 EXEC PGM=IDCAMS //SYSPRINT SYSOUT=* //SYSOUT SYSOUT=* //SYSIN DEFINE ALIAS(NAME(disthlq) RELATE(your.user.catalog))CATALOG(your.master.catalog/password) Note \"disthlq\" correspond parameter <disthlq>, set installation worksheet later. choose not create catalog alias select value <disthlq> write access Copyright SOA Software, Inc. SOLA Installation Guide CREATE INSTALL LIBRARY Create install library (SOLA600) Customize SOLA600.TXT. job TSO RECEIVE <xmihlq>.SOLA600.JCL.XMI create installation library <disthlq>.SOLA600.JCL. <disthlq>.SOLA600.JCL contain members: DEFALIAS optional job define ALIAS <disthlq> (used distribution files cataloged outside MASTER CATALOG) TSORECVE TSO RECEIVE job job unpack XMITted distribution files. WRKSHEET list parameters customized installation standards. Create install library (SOLS600) Customize SOLS600.TXT. job TSO RECEIVE <xmihlq>.SOLS600.JCL.XMI create installation library <disthlq>.SOLS600.JCL. <disthlq>.SOLS600.JCL contain members: DEFALIAS optional job define ALIAS <disthlq> (used distribution files cataloged outside MASTER CATALOG) TSORECVE TSO RECEIVE job job unpack XMITted distribution files. WRKSHEET list parameters customized installation standards. Copyright SOA Software, Inc. SOLA Installation Guide CUSTOMIZE WRKSHEET ENVIRONMENT Customize WRKSHEET environment (SOLA600) Review customize WRKSHEET <disthlq>.SOLA600.JCL comply installation standards. Parameter Name sample WRKSHEET provided <jobcrd0> <jobcrd1> <smpehlq> Description Job card information line) Job card information line) SMP/E high level qualifier SMP/E target zone high level qualifier SMP/E distribution zone high level qualifier SMP/E xmit high level qualifier Temporary distribution high level qualifier (used TSO RECEIVE) Notes/Examples Values \"SOLA.GLOBAL\" result \"SOLA.GLOBAL.CSI\" \"SOLA.SOLA600.TZN\" result \"SOLA.SOLA600.TZN.CSI\" \"SOLA.SOLA600.DZN\" result \"SOLA.SOLA600.DZN.CSI\" \"SOLAXMI\" result \"SOLAXMI.SOLA600.F1.XMI\" etc. Must single hlq. Cannot compound hlq example SYSE.SOLA not allowed SMP/E). \"SOLA\" result \"SOLA.SOLA600.F1\" \"SOLA.V6R0M1\" result \"SOLA.V6R0M1.LOADLIB\" SOLA.V6R0M1 result \"SOLA.V6R0M1.AMODLIB\" SOAP00 SOAP00 SOAP00 SOLA.SMPTLIB result \"SOLA.SMPTLIB.SOLA600.F1\" Optional Optional Optional <smptzhlq> <smpdzhlq> <xmihlq> <disthlq> <tlibhlq> Target library high level qualifier Distribution library high level qualifier Target library VOLSER Distribution library VOLSER SMP/E library VOLSER SMP/E Rel Files prefix Data class (optional) Management class (optional) Storage class (optional) datasets blksize <dlibhlq> <tlibvol> <dlibvol> <smpevol> <smptlbpr> <dclas> <mclas> <sclas> <tgtdblks> Copyright SOA Software, Inc. SOLA Installation Guide Parameter Name sample WRKSHEET provided <diskunit> <smpetlib> <smpedlib> <sceelked.dsnm> <sezatcp.dsnm> <scsfmod0.dsnm> <csslib..dsnm> <db2SDSNLOAD> <db2RunLoad> <subSystem> <collection> <plan> <qualifier> <Oldqualifier> <indexBP> <tableBP> <BP32K2> <stoGroup> <vCat> <group> <list> <cicsLOAD> Description Disk unit name SMP/E Target Zone name SMP/E Distribution Zone name library TCP/IP library ICSF library CSS Library SDSNLOAD Library Run load module library Subsystem Package collection PLAN name Qualifier SOLA Qualifier (Migration Index Buffer Pool Tablespace BufferPool BufferPool Stogroup VCAT (used create stogroup) RDO Group name List name CICS LOAD library (SOLA CICS Container CICS CSD File (SOLA CICS Container UMT VSAM File name (used SOLA CICS Container CMT VSAM File (used SOLA CICS Container Identity mapping) Volume VSAM file allocated Notes/Examples SYSDA SOLATGT SOLADIS SYS1.SCEELKED SYS1.SEZATCP SYS1.SCSFMOD0 SYS1.CSSLIB SYSAPF.DBMS.DB2GR0Q.SDSNL OAD DB2GR0Q.RUNLIB.LOAD GR0Q XML XMLPLAN SOLA600 SOLAQUAL BP32K2 SGXMLSMS SOLA SOLAGRP SOLA CICS.TEST.WQ62.SDFHLOAD Values <csdFile> TVWQCICS.CICSTS22.DFHCSD <vsamUMT> SOLA.VSAM.MONTR.QCICST <vsamCMT> SOLA.VSAM.MAPPING.QCICST <vol> SOAP00 Copyright SOA Software, Inc. SOLA Installation Guide Customize WRKSHEET environment (SOLS600) Review customize WRKSHEET <disthlq>.SOLS600.JCL comply installation standards. Parameter Name sample WRKSHEET provided <jobcrd0> <jobcrd1> <smpehlq> Description Job card information line) Job card information line) SMP/E high level qualifier SMP/E target zone high level qualifier SMP/E distribution zone high level qualifier SMP/E xmit high level qualifier Temporary distribution high level qualifier (used TSO RECEIVE) Notes/Examples Values \"SOLA.GLOBAL\" result \"SOLA.GLOBAL.CSI\" \"SOLA.SOLS600.TZN\" result \"SOLA.SOLS600.TZN.CSI\" \"SOLA.SOLS600.DZN\" result \"SOLA.SOLS600.DZN.CSI\" \"SOLAXMI\" result \"SOLAXMI.SOLS600.F1.XMI\" etc. Must single hlq. Cannot compound hlq example SYSE.SOLA not allowed SMP/E). \"SOLA\" result \"SOLA.SOLS600.F1\" \"SOLA.SOLS600\" result \"SOLA.SOLS600.LOADLIB\" SOLA.SOLS600 result \"SOLA.SOLS600.AMODLIB\" SOAP00 SOAP00 SOAP00 SOLA.SMPTLIB result \"SOLA.SMPTLIB.SOLS600.F1\" Optional Optional Optional SYSDA SOLATGT SOLADIS <smptzhlq> <smpdzhlq> <xmihlq> <disthlq> <tlibhlq> Target library high level qualifier Distribution library high level qualifier Target library VOLSER Distribution library VOLSER SMP/E library VOLSER SMP/E Rel Files prefix Data class (optional) Management class (optional) Storage class (optional) datasets blksize Disk unit name SMP/E Target Zone name SMP/E Distribution Zone name <dlibhlq> <tlibvol> <dlibvol> <smpevol> <smptlbpr> <dclas> <mclas> <sclas> <tgtdblks> <diskunit> <smpetlib> <smpedlib> Copyright SOA Software, Inc. SOLA Installation Guide Parameter Name sample WRKSHEET provided <sceelked.dsnm> <sezatcp.dsnm> <scsfmod0.dsnm> <csslib..dsnm> <db2SDSNLOAD> <db2RunLoad> <subSystem> <collection> <plan> <qualifier> <Oldqualifier> <indexBP> <tableBP> <BP32K2> <stoGroup> <vCat> <TCPAddressSpace> <TCPPort> Description library TCP/IP library ICSF library CSS Library SDSNLOAD Library Run load module library Subsystem Package collection PLAN name Qualifier SOLA Qualifier (Migration Index Buffer Pool Tablespace BufferPool BufferPool Stogroup VCAT (used create stogroup) TCPIP jobname TCPIP Port Number (SOLA Started Task Listener Port). digit number prefixed Zeroes Character SYSID SOLA Started task Character Subsystem Max Character SOLA Request Queue Notes/Examples SYS1.SCEELKED SYS1.SEZATCP SYS1.SCSFMOD0 SYS1.CSSLIB SYSAPF.DBMS.DB2GR0Q.SDSNL OAD DB2GR0Q.RUNLIB.LOAD GR0Q XML XMLPLAN SOLA600 SOLAQUAL BP32K2 SGXMLSMS SOLA TCPIP Values <SOLASysid> SOL1 Must unique Sysplex CSQ7 SOLA.REQUEST.QUEUE <Qmgr> <MQRequestQ> Copyright SOA Software, Inc. SOLA Installation Guide RECEIVE DISTRIBUTION FILES Receive distribution files (SOLA600) Customize JOBCARD, <disthlq> <xmihlq> parms <xmihlq>.SOLA600.txt dataset submit job. receive following datasets: <disthlq>.SOLA600.JCL Inside dataset member named TSORECVE. job TSO RECEIVE distribution files. Customize JCL receive remaining distribution files. following datasets created: <disthlq>.SOLA600.F1 <disthlq>.SOLA600.F2 <disthlq>.SOLA600.F3 <disthlq>.SOLA600.F4 <disthlq>.SOLA600.F5 <disthlq>.SOLA600.SMPPTFIN <disthlq>.SOLA600.INSTLIB Copyright SOA Software, Inc. SOLA Installation Guide Receive distribution files (SOLS600) Customize JOBCARD, <disthlq> <xmihlq> parms <xmihlq>.SOLS600.txt dataset submit job. receive following datasets: <disthlq>.SOLS600.JCL Inside dataset member named TSORECVE. job TSO RECEIVE distribution files. Customize JCL receive remaining distribution files. following datasets created: <disthlq>.SOLS600.F1 <disthlq>.SOLS600.F2 <disthlq>.SOLS600.F3 <disthlq>.SOLS600.F4 <disthlq>.SOLS600.F5 <disthlq>.SOLS600.SMPPTFIN <disthlq>.SOLS600.INSTLIB Copyright SOA Software, Inc. SOLA Installation Guide CUSTOMIZE SAMPLE INSTALLATION JCL Customize sample installation JCL (SOLA600) Editing SOLAEDT macro Customize SOLAEDT <disthlq>.SOLA600.INSTLIB values WRKSHEET created Customize WRKSHEET environment (SOLA600)on page SOLAEDT Rexx Exec. Ensure single quotes double quotes not altered. Adding edit macro SOLAEDT sysproc concatenation SOLAEDT Rexx Exec. Rexx Execs excute either SYSPROC SYSEXEC. Copy SOLAEDT dataset SYSPROC SYSEXEC concatenation. find datasets allocated SYSPROC SYSEXEC TSO session issue TSO ISRDDN command ISPF command line find SYSPROC SYSEXEC DDname column. Choose dataset authorized write copy SOLAEDT <disthlq>.SOLA600.INSTLIB dataset. Executing SOLAEDT macro Customize <disthlq>.SOLA600.SMPPTFIN(SOLA600) executing SOLAEDT edit macro. SOLAEDT executed typing SOLAEDT command line while editing dataset ISPF edit. example, customize dataset <disthlq>.SOLA600.SMPPTFIN(SOLA600) type SOLAEDT command line while editing <disthlq>.SOLA600.SMPPTFIN(SOLA600) using ISPF edit. following jobs <disthlq>.SOLA600.INSTLIB customized executing SOLAEDT edit macro while ISPF edit. SMPECSI SMPALLOC RECVFUNC APPLFUNC ACCPFUNC SOLAEDT fill any user defined values defined WRKSHEET specified Transmit distribution files mainframe (SOLA600)on page Copyright SOA Software, Inc. SOLA Installation Guide Customize sample installation JCL (SOLS600) Editing SOLAEDT macro Customize SOLAEDT <disthlq>.SOLS600.INSTLIB values WRKSHEET created Customize WRKSHEET environment (SOLS600) page SOLAEDT Rexx Exec. Ensure single quotes double quotes not altered. Adding edit macro SOLAEDT sysproc concatenation SOLAEDT Rexx Exec. Rexx Execs excute either SYSPROC SYSEXEC. Copy SOLAEDT dataset SYSPROC SYSEXEC concatenation. find datasets allocated SYSPROC SYSEXEC TSO session issue TSO ISRDDN command ISPF command line find SYSPROC SYSEXEC DDname column. Choose dataset authorized write copy SOLAEDT <disthlq>.SOLS600.INSTLIB dataset. Executing SOLAEDT macro Customize <disthlq>.SOLS600.SMPPTFIN(SOLS600) executing SOLAEDT edit macro. SOLAEDT executed typing SOLAEDT command line while editing dataset ISPF edit. example, customize dataset <disthlq>.SOLS600.SMPPTFIN(SOLS600) type SOLAEDT command line while editing <disthlq>.SOLS600.SMPPTFIN(SOLS600) using ISPF edit. following jobs <disthlq>.SOLS600.INSTLIB customized executing SOLAEDT edit macro while ISPF edit. SMPECSI SMPECSI1 SMPALLOC SMPALLC1 RECVFUNC APPLFUNC ACCPFUNC SOLAEDT fill any user defined values defined WRKSHEET specified Customize WRKSHEET environment (SOLS600)on page Copyright SOA Software, Inc. SOLA Installation Guide USE SMP/E INSTALL SOLA Z/OS Use SMP/E Install SOLA CICS Container (SOLA600) Installing SMP/E Environment Run jobs <disthlq>.SOLA600.INSTLIB following order: Job SMPECSI SMPALLOC RECVFUNC Description create SMP/E database SOLA software create target distribution SMP/E files SMP/E RECEIVE function SOLA600 (SOLA V6R0M0) GLOBAL zone. Expect SMP/E APPLY CHECK SOLA function. Remove CHECK keyword satisfied APPLY CHECK processing order update libraries. Expect SMP/E ACCEPT CHECK SOLA function. Remove CHECK keyword satisfied ACCEPT CHECK processing order update libraries. Expect APPLFUNC ACCPFUNC Installing Additional SMP/E Maintenance SOLA distributed preventive corrective maintenance developed after base function packaging. maintenance distributed <disthlq>.SOLA600.SMPPTFIN. strongly recommend implementing additional maintenance. distribution package contain following two JCLs: \"Receive PTFs.txt\" \"Apply PTFs.txt\". Customize two JCLs usi SOLAEDT Macro submit receive apply PTFs. SOLA600 PTFs follow naming convention: SFXyxxx SOLA version number xxx PTF number, example, SFX6001 SOLA CICS Container PTF number may reference <disthlq>.SOLA600.SMPPTFIN data set read technical description each PTF decide particular PTF applicable environment. Copyright SOA Software, Inc. SOLA Installation Guide Receiving Additional SMP/E Maintenance RECVPTF <disthlq>.SOLA600.INSTLIB provided SMP/E receive any additional/future preventative maintenance distributed base function. Customize job executing SOLAEDT macro while ISPF edit mode. Applying Additional SMP/E Maintenance APPLYPTF <disthlq>.SOLA600.INSTLIB provided apply any additional/future preventative corrective maintenance. job SMP/E APPLY CHECK any maintenance SOLA function. Remove CHECK keyword you're satisfied APPLY CHECK processing order update libraries. Copyright SOA Software, Inc. SOLA Installation Guide Use SMP/E Install SOLA IMS Container (SOLS600) Installing SMP/E Environment Run jobs <disthlq>.SOLS600.INSTLIB following order: Job SMPECSI SMPECSI1 Description Create SMP/E database SOLA software dedicated SMP/e Env site already installed SOLA CICS Container install SOLA IMS Container same Global zone use JCL alter SMPE Database SOLA IMS Container Create target distribution SMP/E files dedicated SMP/e Env site already installed SOLA CICS Container install SOLA IMS Container same Global zone use JCL allocate new SOLA IMS Container target/distribution libraries SMP/E RECEIVE function SOLS600 (SOLA SOLS600) GLOBAL zone. Expect MP/E APPLY CHECK SOLA function. Remove CHECK keyword satisfied APPLY CHECK processing order update libraries. Expect SMP/E ACCEPT CHECK SOLA function. Remove CHECK keyword satisfied ACCEPT CHECK processing order update libraries. Expect SMPALLOC SMPALLC1 RECVFUNC APPLFUNC ACCPFUNC Copyright SOA Software, Inc. SOLA Installation Guide Installing Additional SMP/E Maintenance SOLA distributed preventive corrective maintenance developed after base function packaging. maintenance distributed <disthlq>.SOLS600.SMPPTFIN. strongly recommend implementing additional maintenance. distribution package contain following two JCLs: \"Receive PTFs.txt\" \"Apply PTFs.txt\". Customize two JCLs using SOLAEDT Macro submit receive apply PTFs. SOLS600 PTFs follow naming convention: SFSyxxx SOLA version number xxx PTF number, example, SFS6001 SOLA IMS Container PTF number may reference <disthlq>.SOLS600.SMPPTFIN data set read technical description each PTF decide particular PTF applicable environment. Receiving Additional SMP/E Maintenance RECVPTF <disthlq>.SOLS600.INSTLIB provided SMP/E receive any additional/future preventative maintenance distributed base function. Customize job executing SOLAEDT macro while ISPF edit mode. Applying Additional SMP/E Maintenance APPLYPTF <disthlq>.SOLS600.INSTLIB provided apply any additional/future preventative corrective maintenance. job SMP/E APPLY CHECK any maintenance SOLA function. Remove CHECK keyword you're satisfied APPLY CHECK processing order update libraries. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA CICS Container z/Series mainframe (SOLA600) Chapter Customizing SOLA CICS Container z/Series mainframe (SOLA600) CUSTOMIZING SOLA INSTALLATION following sections describe steps necessary customize sample members jobs <tlibhlq>.SAMPLIB run those jobs Customize SAMPLIB Run jobs SAMPLIB Create SOLA database Bind plan packages SOLA collection Create VSAM file used SOLA logger Define CICS table entries CICS CSD. Optional: Define CICS Analyzer use SOLA. needed special security requirement (more details later section). Optional: upgrading SOLA need refer SOLA Migration Guide help migrating SOLA Directory new SOLA Directory. CUSTOMIZING <TLIBHLQ>.SAMPLIB Refer #README member <tlibhlq>.SAMPLIB. Run SOLAEDT macro following members <tlibhlq>.SAMPLIB: Member BIND, BIND1 BINDMIG Description Plan Package bind commands Package bind commands SOLA5.1->SOLA6.1 Migration Programs. Not required new installations. Copyright SOA Software, Inc. SOLA Installation Guide Member BINDJCL BINDJCLM CSD, CSD1, CSD2 CSDJCL DCL DDL DDLMIG Description JCL bind plan packages JCL bind SOLA5.1->SOLA6.1 Migration packages. Not required new installations. SOLA CICS Container PPT, PCT, FCT, TDQ RCT/DB2 Entry definitions SOLA executables SOLA CICS Container JCL define CSD entries Grant statements DDL create STOGROUP (optional), database, tablespaces, tables, indexes aliases. DDL create SOLA5.1 table aliases used SOLA5.1->SOLA6.1 migration. Not required new installations. JCL create entries JCL create SOLA5.1 table alias entries SOLA5.1->SOLA6.1 migration. Not required new installations. SOLA CICS Container JCL define VSAM files used SOLA logger identity mapping functionality. Job populate table TBXMLMFD identity mapping. Macro instructions define IMS subroutine driver sample transactions. Macro instructions define PSBs subroutine driver programs sample program. DDLJCL DDLJCLM IDCAMJCL IMAPLOAD IMSGEN PSBGEN CREATING DATABASE DDLJCL create SOLA directory running job DDLJCL. job requires database privileges may need run DBA. order successfully run job must appropriate authority create STOGROUP (optional), DATABASE (DBXML002), TABLESPACE, TABLE, INDEX ALIAS. SOLA directory defined single database DBXML002. create database its own STOGROUP use existing STOGROUP. use STOGROUP specifically DBXML002 uncomment \"CREATE STOGROUP\" statement beginning member DDL. Copyright SOA Software, Inc. SOLA Installation Guide SOLA Database DBXML002 consists least tables. Each table created its own unique tablespace. least indexes. least ALIASes defined. Job DDLJCL execute return code zero. BINDING PLAN PACKAGES BINDJCL bind SOLA packages plan running jobs BINDJCL. person running jobs must appropriate authority select, update, insert delete tables DBXML002 database. least package bind cards member BIND. packages bound single collection <collection>. single plan bind statement plan <plan> member BIND1 includes packages PKLIST <collection>. Job BINDJCL execute return code zero. CREATING <VSAMUMT> <VSAMCMT> FILES IDCAMJCL SOLA CICS Container uses CICS Data Tables caching; User Maintained Data Table (UMT) CICS Maintained Data Table (CMT). define UMT CMT running job IDCAMJCL. UMT used buffer execution statistics collected SOLA run-time engine. statistics flushed <vsamUMT> file background task periodically reads file copies data table <qualifier>.TBXMLMON. CMT used store User Identity mapping data database used SOLA Analyzer (runtime component). background task periodically checks updates mapping data database reflects changes CMT. Job IDCAMJCL execute return code zero. Note: Each TOR/WOR region SOLA runtime dedicated XMLKSMAP CMT VSAM file. Sharing XMLKSMAP VSAM file not supported. POPULATE IDENTITY MAPPING TABLE USING JOB IMAPLOAD Use job IMAPLOAD populate table TBXMLMFD. following details data stored TBXMLMFD: Copyright SOA Software, Inc. SOLA Installation Guide TOR_SYS_ID: char(4), SYSID WOR region. ID_MAP_TYP: char(1), type mapping value identity mapping. SUBJECT_ID: varchar(255),subject RACF_USR_ID: char(8), RACF mainframe user TRN_ID: transid optional, override XML transaction. TMPLT_ID: template optional, override identity mapping template XML#DAN, future use. DEPLOY_TS: entry created table. DEFINE CICS CSD ENTRIES CSDJCL create SOLA CICS CSD entries running job CSDJCL. SOLA CICS Container executes CICS region requires CICS table entries (PCT, PPT, TDQ, RCT FCT). CICS CSD entries shipped default entries customized based setup. PCT definitions delivered samplib member CSD1 default TRANCLASS(DFHTCL00). needs customized based installation standards. job CSDJCL creates entries. Jobs CSDJCL execute return code zero. DEFINE CICS ANALYZER USE SOLA (OPTIONAL) default SOLA CICS Container runs default CICS Analyzer DFHWBADX. analyzer, runs under transaction CWXN, isn't possible run user transactions under SAF (such RACF, ACF2 Top-Secret controlled Ids). security reasons SOLA Development Studio uses WS-Security specification pass user credentials between Development Studio SOLA CICS Container back-end. order run back-end transactions under SAF that's passed SOAP message need use SOLA XMLPCAN Analyzer, detailed below: XMLPCAN: run user transaction under SAF passed WS-Security Header. order use special purpose analyzer, need alter TCPIPS definition CICS follows done CICS administrator CEDA access region). ALTER TCPIPS(<name>) G(<groupName>) URM(XMLPCAN) order create new TCPIPS definition following command used. DEFINE TCPIPS(<name>) G(<groupName>) URM(XMLPCAN) PORTNUMBER(nnnn) PROTOCOL() IIOP, ECI TRANSACTION(CWXN) TSQPREFIX(xxxxxx) Copyright SOA Software, Inc. SOLA Installation Guide SSL() AUTHENTICATE() Note: customization optional installation doesn't enforce transactions must run appropriate SAF not needed. TCPIPS DEFINITION you're planning run SOLA CICS Container CICS above, there's modification TCPIPS definition you'll need make allow SOLA communicate properly CICS. Use CEDA transaction equivalent) update field MAXDATALEN value greater equal number specified kilobytes). MAXDATALEN specifies maximum length data may received TCP/IP service, SOLA increases size messages communicate. example MAXDATALEN set kilobytes. TCPIPS STATUS: RESULTS OVERTYPE MODIFY Tcpips(TOREXT Ope Por(01743) Ssl Tra(CWXN) Con(00000) Bac( Max( Urm( XMLPCAN Sup RACF AUTHORIZING SOLA TRANSACTIONS (OPTIONAL) environment requires transactions run authorized RACF similar facility), those transactions must run under RACF user, need use XMPLCAN analyzer, defined section \"Define CICS Analyzer use SOLA (Optional)\" page run SOLA's main transaction default transaction XML) under RACF extracted WS-Security header XMLPCAN. list transactions used SOLA need RACF authorized: XML: requestor's RACF need authorized run transaction. XML3: SOLA's runtime UDDI interface. open nature UDDI interface transaction can't run under RACF requestor. XML8: SOLA's background task spool metrics information CICS metrics UMT table. XML5, XML7 XML9: transactions used SOAP requests responses carried DEFINING IMS COMPONENTS (OPTIONAL) SOLA CICS Container includes optional ability invoke IMS-TM transactions subroutines reusable web services. need use standard IMS procedures define transaction PSB SOLA uses invoke IMS Copyright SOA Software, Inc. SOLA Installation Guide subroutines. IMS transactions PSBs required use SOLA IMS transactions, required wish use sample transactions. IMS macro instructions contained members IMSGEN define IMS subroutine driver sample transactions) PSBGEN define PSBs subroutine driver programs define sample program). definitions sample program transaction required installation verification. SETTING IMS MESSAGE PROCESSING REGION (OPTIONAL) Before use SOLA invoke IMS transactions subroutines need add SOLA Runtime Library STEPLIB concatenation IMS Message Processing Region (MPR). POPULATING DATA SAMPLE APPLICATION (RECOMMENDED) SOLA CICS Container package includes sample application used debug verify installation. order run application SAMPLIB contains two members used populate tables used sample application. tables created part customization. Members INSWGT INSRTUAP SAMPLIB dataset contain SQL insert data done using SPUFI any facility. MIGRATION SOLA6.1 SOLA5.1 (OPTIONAL) Customers already SOLA5.1 refer SOLA Migration Guide, documents following process data migration. steps involved Customize migration jobs, etc SOLAEDT Run job DDLJCLM create alias entries SOLA5.1 tables. job requires database privileges may need run DBA. Bind SOLA Migration Program packages running job BINDJCLM Run migration Jobs following sequence** Job MIGJOB1 MIGJOB2 MIGJOB3 Description Verify SOLA5.1 Directory check any potential migration issues Prepare SOLA6.1 Directory clean migration SOLA5.1 Directory Migrates SOLA Directory Project, Program MAX Copyright SOA Software, Inc. SOLA Installation Guide MIGJOB4 MIGJOB5 related data Migrates SOLA Directory User, Access related data Migrates SOLA Directory data migration process repeated repeating above jobs starting MIGJOB1 SOLA test customer you've already installed SOLA Server, need restart SOLA Server after migration batch jobs completed. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA IMS Container z/Series mainframe (SOLS600) Chapter Customizing SOLA IMS Container z/Series mainframe (SOLS600) CUSTOMIZING SOLA INSTALLATION following sections describe steps necessary customize sample members jobs <tlibhlq>.SAMPLIB run those jobs Customize SAMPLIB Run jobs SAMPLIB Create SOLA database Bind plan packages SOLA collection CUSTOMIZING <TLIBHLQ>.SAMPLIB Refer #README member <tlibhlq>.SAMPLIB. Run SOLAEDT macro following members <tlibhlq>.SAMPLIB: Member BIND, BIND1 BINDJCL DCL DDL DDLJCL IMSGEN PSBGEN Description Plan Package bind commands JCL bind plan packages Grant statements DDL create STOGROUP (optional), database, tablespaces, tables, indexes aliases. JCL create entries Macro instructions define IMS subroutine driver sample transactions. Macro instructions define PSBs subroutine driver programs sample program. Copyright SOA Software, Inc. SOLA Installation Guide Member SOLA Description SOLA Started Task Job Sample. Customize JCL copy started task library SOLAPRM SOLA Started Task Job Parms Customize parmlib copy parm library SOLAMQ SOLA Started Task Job Sample. Customize JCL copy started task library SOLAMQPR SOLA Started Task Job Parms Customize parmlib copy parm library CREATING DATABASE DDLJCL create SOLA directory running job DDLJCL. job requires database privileges may need run DBA. order successfully run job must appropriate authority create STOGROUP (optional), DATABASE (DBXML002), TABLESPACE, TABLE, INDEX ALIAS. SOLA directory defined single database DBXML002. create database its own STOGROUP use existing STOGROUP. use STOGROUP specifically DBXML002 uncomment \"CREATE STOGROUP\" statement beginning member DDL. SOLA Database DBXML002 consists least tables. Each table created its own unique tablespace. least indexes. least ALIASes defined. Job DDLJCL execute return code zero. BINDING PLAN PACKAGES BINDJCL bind SOLA packages plan running jobs BINDJCL. person running jobs must appropriate authority select, update, insert delete tables DBXML002 database. least package bind cards member BIND. packages bound single collection <collection>. single plan bind statement plan <plan> member BIND1 includes packages PKLIST <collection>. Job BINDJCL execute return code zero. Copyright SOA Software, Inc. SOLA Installation Guide RACF AUTHORIZATION SOLA IMS CONTAINER accorance site security requirements, define <SOLAStartedTaskName> RACF 'Started' Class assign STC userid under job must run. Make sure STC Userid assign: OMVS UID defined access SOLA libaries Granted EXECUTE SOLA DB2Plan (Refer member DCL samplib). APF AUTHORIZE SOLA LOAD LIBRARY (RECOMMENDED) allow SOLA IMS Container validate Security credentials passed through SOAP request, SOLA Loadlibrary must APF authorized. z/OS Administrator adding <tlibhlq>.LOADLIB system parmlib PROGxx dynamically activating parm SET PROG=xx. DEFINING IMS COMPONENTS SOLA IMS Container includes ability invoke IMS-TM transactions subroutines reusable web services. need use standard IMS procedures define transaction PSB SOLA uses invoke IMS subroutines. IMS transactions PSBs required use SOLA IMS transactions, required wish use sample transactions. IMS macro instructions contained members IMSGEN define IMS subroutine driver sample transactions) PSBGEN define PSBs subroutine driver programs define sample program). definitions sample program transaction required installation verification. SETTING IMS MESSAGE PROCESSING REGION (OPTIONAL) Before use SOLA invoke IMS transactions subroutines need add SOLA Runtime Library STEPLIB concatenation IMS Message Processing Region (MPR). Copyright SOA Software, Inc. SOLA Installation Guide CONFIGURING SOLA IMS CONTAINER SOLA IMS Container runs z/OS started task. Started task setup based SOLA server. incorporates many features SOLA CICS Container, runs without CICS several parameters need specified make work. parameters specified PARMLIB dataset that's made available Started Task specifying statement Started Task JCL. Started Task JCL following sample JCL provided SOLA SAMPLIB. Customize JCL conform installation requirements. JCL customized using SOLAEDT Rexx Edit Macro customized during installation SOLA. SOLA STC Proclib SOLA STARTED TASK //LISTEN EXEC PGM=XMLPC125, REGION=<RegionSize>,DYNAMNBR=20 //STEPLIB DISP=SHR,DSN=<tlibhlq>.LOADLIB DISP=SHR,DSN=<DB2.SDSNLOAD> DISP=SHR,DSN=<Db2.SDSNEXIT> //SOLALIB DISP=SHR,DSN=<tlibhlq>.LOADLIB DISP=SHR,DSN=<Application Template Libary> //SYSUT1 DSN=&UT1, SPACE=(1700,(400,50)), UNIT=SYSDA //SYSPRINT SYSOUT=* //SYSOUT SYSOUT=* //*DSNTRACE SYSOUT=* //SYSTSPRT SYSOUT=* //CEEDUMP SYSOUT=*,SPIN=UNALLOC,FREE=CLOSE //PARMLIB DISP=SHR,DSN=<Parmlib(SOLAPRMS)> <RegionSize> region size that's required run SOLA STC computed follows: Base Region size needed Each SOLA Thread consume setup SOLA Started task process maximum threads region size required Copyright SOA Software, Inc. SOLA Installation Guide <Application Template Library(Libraries)> Concatenate application template library(libraries) SOLALIB card. datasets load libaries generated SOLA template loadmodule artefacts stored <Parmlib(SOLAPRMS)> DTYP=HTTP TRCE=0 SYST=SOL1 PLAN=XMLCLNT DB2S=DB9G PROT=000 MAXT=200 FCTM=02000 TIME=00100 MTSQ=09999 IDLE=86400 Server PORT=01449 TCPN=TCPIP Server QMGR=<Qmgr> REQQ=<MQRequestQ> Specify each parameter exactly shown. Each parameter must start separate line begin column Don't abbreviate numeric fields; each field must requisite number digits, specified below. SYST: Mandatory alphanumeric characters. SOLA System (equivalent CICS SYSID) assigned SOLA Started Task instance. PORT: Mandatory Server**) numeric digits. SOLA Started Task Listener TCPIP Port Number DB2S: Mandatory alphanumeric characters. Subsystem SOLA directory created PLAN: Mandatory alphanumeric characters. Plan used TRCE: Optional numeric digit. Sets trace Level debugging SOLA Started Task. Values Default: Trace) PROT: Optional numeric digits. Specifies number protected threads created. Copyright SOA Software, Inc. SOLA Installation Guide Default: protected threads created start-up SOLA STC instance) MAXT: Optional numeric digits. Specifies maximum number concurrent threads supported SOLA STC instance TCPN: Optional Server**) alphanumeric characters. TCPIP address space name system SOLA connect Default: TCPIP FCTM: Optional numeric digits. Specifies number SOLA Internal Logging File Control records handled SOLA STC instance. Default: MTSQ: Optional numeric digits. SOLA STC caches runtime metadata internal memory areas called TSQs. parameter defines number TSQs supported specific SOLA STC instance. Default: TIME: Optional numeric digits. SOLA internal control parameter indicates long milliseconds listener wait before incoming socket connection taken subtask. Default: IDLE: Optional numeric digits. SOLA STC thread manager uses value specified parm control IDLE thread released. value specified parm indicates number seconds after Inactive(Idle) SOLA thread needs terminated Default: QMGR: Mandatory Server**) alphanumeric characters. Subsystem SOLA server connects. Please note CSD Definition XML# definition TRANCLASS shipped default DFHTCL00 used, must customized setup. REQQ: Mandatory Server**) Max character SOLA Request Queue Name. Queue applications route soap requests processed SOLA Server. Please note CSD Definition XML# definition TRANCLASS shipped default DFHTCL00 must customized setup. Copyright SOA Software, Inc. SOLA Installation Guide Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Chapter Installing SOLA Development Studio OVERVIEW SOLA Installation includes host application server installation components. installation package contains both .ear file .war file. start choosing whether install .ear .war, begin copying installation .ear .war file install directory. SOLA installed WebSphere, WebLogic Tomcat. Please follow instructions appropriate chapter environment. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio INSTALLING SOLA DEVELOPMENT STUDIO WEBSPHERE section provides instructions installing SOLA Development Studio WebSphere Application Server environment. SOLA Development Studio requires WebSphere greater. order begin installation SOLA Development Studio, must administrator privileges computer you're doing installation Installing SOLA WebSphere Step Procedure Log WebSphere's Admin console. Figure WebSphere Application Server Logon page Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Applications\" navigation area expand link. Figure WebSphere Application Server Integrated Solutions Console Click \"Install New Application\" navigation area. Figure WebSphere Application Server Install new Application Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Browse...\" button content area select location sola.ear application file. Figure WebSphere Application Server Select sola.ear file Click \"Next\" button content area. step uploads sola applic ation ear file server may take several minutes complete. Figure WebSphere Application Server Upload sola.ear file Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Make any choices specific installation Click \"Next\" continue default settings. Figure WebSphere Application Server Select Installation Options Make any choices specific installation Click \"Next\" continue default settings. Figure WebSphere Application Server Map modules servers Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Make any choices specific installation Click \"Next\" continue default settings. Figure WebSphere Application Server Map virtual hosts web modules Make any choices specific installation Click \"Finish\" complete application installation. Figure WebSphere Application Server Summary Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Save\" link content area finalize installation. Figure WebSphere Application Server Save Click \"Enterprise Application\" application just installed. Unless explicitly changed SOLA application named \"sola\". Click link configure class loading policy required using WebSphere Application Server. Figure WebSphere Application Server Configure class loading policy Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Class loading update detection\" link content area. Figure WebSphere Application Server Class loading Select \"Classes loaded application class loader first\" \"Class loader each WAR file application\" click button. Figure WebSphere Application Server General Properties Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Enterprise Application\" application just installed. Unless explicitly changed SOLA application named \"sola\". Click link configure location \"SOLARoot\" directory SOLA stores customizable information.. Figure WebSphere Application Server Configuring SOLARoot Click \"Java Process Management\" expand link. Figure WebSphere Application Server Server Infrastructure Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Process Definition\" link. Figure WebSphere Application Server Process Definition Next click \"Java Virtual Machine\" link allow enter root directory contain SOLA's configuration info. Figure WebSphere Application Server JVM Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click \"Custom Properties\" link Figure WebSphere Application Server JVM Properties content section contains panel allow enter system property represents SOLA's root directory contain configuration info). After set property named \"com.soa.sola.root\" root location config data stored click example below, \"/was-as1/apps/wasuser\" file system SOLA use. create new directory use SOLA. Note: authority JVM must read/write/execute access directory folder. Figure WebSphere Application Server JVM Properties Proceed chapter customization. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio INSTALLING SOLA DEVELOPMENT STUDIO WEBLOGIC section provides instructions installing SOLA Development Studio WebLogic Application Server environment. SOLA Development Studio requires BEA WebLogic Server greater. order begin installation SOLA Development Studio, must administrator privileges WebLogic computer you're doing installation Installing SOLA WebLogic Step Procedure Point SOLA installation package. Change /ide/ear/ directory. Start Weblogic Server invoking startup script shown below. Figure WebLogic Start-up Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Once server started successfully, load Administration console screen using following URL: http://localhost:7001/console Figure WebLogic Server Administration Console Sign successful sign navigate user screen shown below Figure WebLogic Server Home Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click `Deploy new Application' link screen screen shown below Figure WebLogic Deploy new application Click `upload file(s)' link page screen shown below. Figure WebLogic Install Update Application Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Click Browse select .ear file. Select .ear file `Choose file' window click `Open' button. Figure WebLogic Choose file Once file selected, click `Upload' button upload `ear' file Weblogic server. Figure-30: WebLogic File selected Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Check radio button screen against `AppSOLA.ear' file name click `Continue' button. Figure WebLogic Deploy Application Click `Deploy' button screen. Figure WebLogic Deploy Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure successful deployment, Status shows `Success', shown below. application deployed Logout screen. Figure WebLogic Successful Deployment StartWeblogic script find domain directory Web logic installed), add new line code shown below: set JAVA_OPTIONS=%JAVA_OPTIONS% -Dcom.soa.sola.root=\"<fileSystem>\" <fileSystem> directory SOLA store its files. example: created new directory \"C:\\SOLAFiles\", add following code. set JAVA_OPTIONS=%JAVA_OPTIONS% -Dcom.soa.sola.root=\"C:\\SOLAFiles\" Save close file Figure WebLogic Start WebLogic Script Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Restart server shown below. Figure WebLogic Start-up Proceed chapter customization. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio INSTALLING SOLA DEVELOPMENT STUDIO TOMCAT section provides instructions installing SOLA Development Studio Tomcat Application Server environment. SOLA Development Studio requires Apache Tomcat greater. order begin installation SOLA Development Studio, must administrator privileges Tomcat computer you're doing installation Installing SOLA Tomcat Step Procedure Insert SOLA installation package. Change /ide/war/ directory. Copy /ide/war/AppSOLA.war package CATALINA_HOME/webapps/AppSOLA.war shown below: (CATALINA_HOME Tomcat installed) Figure Tomcat war file copy Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Edit server.xml file (available CATALINA_HOME\\conf) include new entry Context follows. may use notepad any xml editor edit server.xml. Figure Tomcat Edit server.xml Root Context added inside <Host> element tag follows: <Context path=\"/sola\" docBase=\"/AppSOLA\" Make sure Context starts uppercase docBase uppercase AppSOLA folder under CATALINA_HOME\\webapps contains code. Save close file. Figure Tomcat server.xml Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Next, edit catalina.bat file (available CATALINA_HOME\\bin) add new variable SOLARoot modify, add, JAVA_OPTS variable shown below. \"SOLARoot\" property dictates SOLA keeps files its own use. Figure Tomcat Edit catalina.bat Add SOLARoot follows: set SOLARoot=-Dcom.soa.sola.root=\"<fileSystem>\" specify SOLA store product related files. example, already directory created called c:\\SOLAFiles specify SOLARoot follows: set SOLARoot= -Dcom.soa.sola.root \"c:\\SOLAFiles\" not already directory store SOLA related files first create Note: authority JVM runs under must read/write/execute file system Next, add following lines catalina.bat set JAVA_OPTS=%JAVA_OPTS% %SOLARoot% Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager Figure Tomcat catalina.bat Save close file. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Step Procedure Start Tomcat Server invoking startup script shown below. Figure Tomcat Start Tomcat new command prompt window pop server starts. Figure Tomcat Command Prompt Window Proceed chapter customization. Client recently completed installation successfully quoted: set sola root /SOLARoot directory. didn't put Context path step installation causing startup error. didn't rename war file instead left named sola.war named upon download SOA Support Site.\" Copyright SOA Software, Inc. SOLA Installation Guide Chapter Installing SOLA Development Studio Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Chapter Customizing SOLA section provides instructions customizing SOLA use SOA development run-time platform. customization steps performed through browser using newly installed Development Studio Resource Manager. Development Studio turn customize SOLA run-time. Begin entering values installation Development Studio Customization worksheet next page. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA DEVELOPMENT STUDIO CUSTOMIZATION WORKSHEET Parameter Name sample WRKSHEET provided Description address SOLA Web-site accessible Supplied product key Mainframe FTP FQDN FQDN SOLA Container provides mainframe backend SOLA Development Studio. container SOLA CICS Container append \"/CICS/XML/XMLPC000\" end FQDN CICS listening. container SOLA IMS Container append \"/XMLPC000\" end FQDN SOLA listening. region may may not same OpenAccessEndPoint FQDN. queue name SOLA use receipt SOAP messages. value optional. FQDN SOLA Container. region accessible anyone website. may may not same SOLASoapAddress FQDN container SOLA CICS Container append \"/CICS/XML/XMLPC000\" end FQDN CICS listening. container SOLA IMS Container append \"/XMLPC000\" end FQDN SOLA Website productKey FTPSite Notes/Examples http://sola.web.com:9203/sola/index.html index page available under context sola. Hence, append /sola/index.jsp server FQDN. A3zUx8iLqprTm0 DEVMF.SYSPLEX.COM Values http://cicsFQDN:3067/CICS/XML/XMLPC000 SOLA CICS Container http://SOLAFQDN:3067/XMLPC000 SOLA IMS Container SOLASoapAddress MQTestEndPoint (repeat each endpoint) http://cicsFQDN:3067/CICS/XML/XMLPC000 SOLA CICS Container http://SOLAFQDN:3067/XMLPC000 SOLA IMS Container OpenAccessEndPoint (repeat each SOLA Container) Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA SOLA listening. RestrictedAccessEndPoint (repeat each SOLA Container) Address/FQDN: FQDN SOLA Container. region accessible authorized users Development Studio. container SOLA CICS Container append \"/CICS/XML/XMLPC000\" end FQDN CICS listening. container SOLA IMS Container append \"/XMLPC000\" end FQDN SOLA listening.. hostname Address TCPIP stack IMS Connect connects port IMS Connect listening Datastore name corresponding configuration parameter \"DATASTORE\" configuration statement IMS Connect. name TCPIP stack IMS Connect connects Max number connections enabled IMS Connect. parameter ignored release. IMS XCF Group name defined parm GRNAME IMS subsystem. name IMS XCF group (specified parm OTMNAM IMS subsystem). Unique user defined name OTMA client defined OTMA connection characters) character prefix Transaction Pipe enabled OTMA sessions. http://cicsFQDN:3067/CICS/XML/XMLPC000 SOLA CICS Container http://SOLAFQDN:3067/XMLPC000 SOLA IMS Container Port Data Store IMSCON TCP/IP Stack Name MVSTCP Number Sessions IMS Group Name IMSTST1 OTMA Name IMSTST1 OTMA Client Name IMSOTMA OTMA TPipe Prefix IMS1 Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Num Sessions Max number concurrent sessions enabled OTMA connection. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Next follow steps below customize SOLA installation make ready use SOA development run-time platform. Note z/Series mainframe installation must completed before customize SOLA Development Studio. Note existing SOLA customer upgrading SOLA SOLA customer), migration process copied SOLA configuration information won't need follow customization steps chapter. migration process documented SOLA Migration Guide. Note SOLA customer, restart SOLA Server point complete installation steps. Step Procedure Enter http://servername:port/sola/install.html browser servername port refer server (WebSphere, WebLogic Tomcat) installed SOLA Development Studio. display following page. Enter solain UserName solain password. Figure Login installation Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA prompted product key. Please type product key prompt shown below. product key provided separately. Figure Enter product Read agree license agreement. Figure Read agree license agreement Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Accept license agreement SCROLLING BOTTOM selecting accept terms license agreement\" click \"Submit. Figure Accept license agreement Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA customization panel displayed, beginning debugging.xml file. debugging.xml properties not automatically displayed, Property Editor choose /inst /system /debugging.xml three dropdown boxes. Properties Allowable Values installationPassword Encrypted value pre-filled not modify page, changing installation password done separate page. InstallationUserid* Optional. Enter valid SAF SOLA use run back end transactions support Development Studio. optional property defined completed optional step described section Define CICS Analyzer use SOLA (Optional) page consoleFile Debug YES creates append stderror.txt stdout.txt error warning messages. sends messages server console. Log informative, warnings Errors Log warnings error messages Log error Messages. Value default recommended. SOLA's product key. prefilled based key entered previously. productKey Figure Debugging XML Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA need set endpoints SOLA run-time manage. shown screen shot below, click drop down box below \"Filename\" heading choose \"/endpoints.xml\". Figure EndPoint Key Value pairs key-value pairs change reflect values endpoints.xml file. screen need specify FQDN following key-value pairs endpoints.xml file. Key Value FTPMode ACTIVE PASSIVE. Determines FTP mode SOLA Development Studio use communication mainframe FTP server retrieving storing datasets. ACTIVE recommended. FTPSite SOLA Development Studio communicates z/OS two ways via SOLA web services directory access via FTP access z/OS datasets, JES output JES scheduler. value need specify address z/OS FTP server. SOLASoapAddress FQDN SOLA Container. region provides mainframe backend SOLA Development Studio. region may may not same OpenAccessEndPoint FQDN. OpenAccessEndPoint FQDN SOLA Container. region developers test services. region may may not same SOLASoapAddress FQDN. MQTestEndPoints Optional. queue name SOLA use receipt SOAP messages. value optional. RestrictedAccessEndPoint Optional. FQDN secured SOLA Container. region services executed. administrators able value endpoint dropdown. value optional. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA dataSource property allows customers control SOLA Developer Resource Manager store retrieve internal meta data. two possible values: SOLA default property not specified). Web services calls SOLA's mainframe execution environment made store retrieve data Database option use local file system store retrieve meta data. ftp_verify Optional. default value property property allows customers control user logons IDE verified against RACF equivalent. default SOLA mainframe runtime processes logon request. SOLA CICS Container leave default SOLA IMS Container (Started Task) adjust value follows started task configured run Authorized state [Refer \"Chapter Customizing SOLA IMS Container z/Series mainframe\", Section: APF AUTHORIZE SOLA LOAD LIBRARY (Recommended)] leave property default started task configured run Unauthorized state set value FTP mechanism used verify user credentials logon Optional. FQDN central UDDI registry publishing SOLA Services. Release SOLA supports Service Manager SOA Software. Optional. UserId use connect UDDIServer. Optional. password associated UDDI UserId. UDDIServerAddress UDDIUser UDDIPassword Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA screen below we've entered value FTPMode, FTPSite, SOLASoapAddress, OpenAccessEndPoint dataSource. gave SOLASoapAddress \"Property Descr\" SOLA Development Studio OpenAccessEndPoint \"Property Descr\" TEST. values used endpoint URL drop down. Figure endpoints changed example RestrictedEndPoint, UDDIServerAddress, UDDIUser UDDIPassword properties not filled. must delete properties clicking trash bin Icon right don't intend use values. add back any time. Click Update button update file propagate changes. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Next you'll need verify, optionally modify JCL Jobcard SOLA use submit jobs assemble Templates (SOLA's runtime metadata). File Editor choose \"/inst\" Cntx Root dropdown, \"/system\" Path Name dropdown \"/Jobcard.txt\" File Name dropdown. Figure Selecting /Jobcard.txt Modify accounting, CLASS MSGCLASS parameters meet installation's requirements. Figure Modifying /Jobcard.txt Click Update button update file propagate changes. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Next you'll need create environments conform Software Development Life Cycle. recommend create least three environments (test), (stage) (production) sequences respectively. Figure Creating Environments next step add administrator. Click Add User icon enter RACF SOLA Administrator, click Create button. Figure Adding SOLA Administrator Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA next step configure each endpoints entered endpoints.xml file. use SOLA Resource Manager configure endpoints. Enter following url: http://<yourservername>:<port>/sola/ResourceMgr.html. Figure Creating Container group Container Pick environment create Container group Let's assume create new container group environment already listed top selected don't need anything special. right mouse click container directory pick create tor group menu Figure Choosing environment Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA You'll prompted login RACF Use SOLA Administrator just created. Figure Login SOLA Administrator Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA \"Create Container group\" page displayed. Figure Create Container Group called our new group `SOLA Test1 Regions'. blue background part screen contains settings group containers. change settings, moment recommend leave default settings. bottom half screen (white background) split two parts. upper part contains default policy settings group. recommend leave default settings. lower part contains IMS connection information, used define SOLA container connect IMS optional IMS component. Defining IMS connection information covered below. Press create button create Container Group. SOLA package includes optional IMS component need complete lower part screen choose whether SOLA use IMS Connect OTMA/CI connect IMS. Note: IMS transactions need run under RACF need choose IMS Connect. isn't possible pass credentials CICS IMS whe using OTMA/CI. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Figure Create Container Group (IMS version) Choose connect IMS dropdown. complete either IMS Connect information OTMA information, not both. fields IMS Connect Address/FQDN: hostname/IP Address TCPIP stack IMS Connect connects Port: port IMS Connect listening Data Store Datastore name corresponding configuration parameter \"DATASTORE\" configuration statement IMS Connect. TCP/IP Stack Name: name TCPIP stack IMS Connect connects Number Sessions: Max number connections enabled IMS Connect. parameter ignored release. fields OTMA IMS Group Name: IMS XCF Group name defined parm GRNAME IMS subsystem. OTMA Name: Specified name IMS XCF group (specified parm OTMNAM IMS subsystem). OTMA Client Name: Unique user defined name OTMA client defined OTMA connection characters) OTMA TPipe Prefix: character prefix Transaction Pipe enabled OTMA sessions. Num Sessions: Max number concurrent sessions enabled OTMA connection. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Press create button create Container Group. new group `SOLA Test1 Regions' created, shown directory tree directory pane. Figure Container Group created successfully next step create SOLA Container member group. Right click new group select \"Create New TOR\". Before creating new TOR (container), make sure URL SOLA region ready accept requests mainframe. Figure Create new container Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA Fill region specific details. Figure Create new container following description fields: Sysid: character system region. TOR System Name: name SOLA region. EndPoint: soap end point SOLA region. obtain information, ask system administrator URL required access region. address uses following format: SOLA CICS Container: http://mainframe address FQDN:portnumber/CICS/XML/XMLPC000 SOLA IMS Container: http://mainframe address FQDN:portnumber/ XMLPC000 provided necessary information, click insert create listener group region. prompted confirmation dialog box. Description: free-form description SOLA region. provided necessary information, click Create create TOR. Copyright SOA Software, Inc. SOLA Installation Guide Chapter Customizing SOLA SOLA attempt create SOLA runtime container TOR. SOLA able connect region create container confirmation message displayed. Figure New Container created SOLA ready use. Please close browser window open new instance, logging Admin just created. Test installation executing samples shipped product, find information executing samples through tutorials SOLA User Guide. Copyright SOA Software, Inc. SOLA Installation Guide"},{"title":"WCF Install Guide","url":"/ag/wcf_install_guide.html","date":null,"type":"pdf","description":"The Install instructions for WCF.","categories":[],"body":"Service Manager Agent WCF Installation Guide Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Table Contents SERVICE MANAGER AGENT WCF INSTALLATION GUIDE Preface......................................................................................................................... Guide.......................................................................................................................................... System Requirements............................................................................................................................ Agent WCF Program Group Customer Support.................................................................................................................................. Chapter Installing Agent WCF........................................................................ Overview Agent WCF Editions Installing Agent WCF Chapter Configuring Agent WCF.................................................................. Overview Configuring Agent WCF............................................................................................................ Agent Metabase File Configuring Service Client Endpoints SOA Binding Chapter Troubleshooting Agent WCF Installation Overview Troubleshooting Configuration Wizard Errors Troubleshooting Agent WCF during Runtime Operation................................................................ Uninstalling Agent WCF Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Table Figures Figure Welcome Agent WCF Setup Wizard Figure License Agreement................................................................................................................... Figure Select Installation Folder Figure Confirm Installation................................................................................................................... Figure Installing Agent WCF--Progress Indicator.......................................................................... Figure Installation Complete Figure Agent WCF Configuration Wizard--Welcome Figure Agent WCF Configuration Wizard--Manage Containers Figure Agent WCF Configuration Wizard--Add Container (Configure Delegate Container) Figure Agent WCF Configuration Wizard--Add Container (User Name Password Identity) Figure Agent WCF Configuration Wizard--Add Container (Username, Password, Domain). Figure Agent WCF Configuration Wizard--Add Container (Certificate Identity) Figure Agent WCF Configuration Wizard--Add Container (Certificate)......................................... Figure Agent Configuration Wizard--Add Container (Complete Operation) Figure Agent WCF Configuration Wizard--Add Container (Configure Agent Container) Figure Agent WCF Configuration Wizard--Add Container (Configure Monitoring Data Delivery Mechanism) Figure Agent WCF Configuration Wizard--Add Container (Configure Web Service Transport Figure Agent WCF Configuration Wizard--\"Container not registered\" Warning Figure Agent WCF Configuration Wizard--Containers Summary Figure Agent WCF Configuration Wizard--Select Container Type.............................................. Figure Agent WCF Configuration Wizard--Specify Metadata Import Options Figure Agent WCF Configuration Wizard--X.509 Certificate Not Trusted Figure Agent WCF Configuration Wizard--Specify Container Details Figure Agent WCF Configuration Wizard--Completion Summary Figure Agent WCF Configuration Wizard--Add Container (Save Container Configuration) Figure Agent WCF Configuration--Agent WCF Properties Figure Agent Configuration Wizard--Add Container (Configuration Finalization) Figure Modify Service Discover Options............................................................................................ Figure Configure Service Client Endpoints SOA Binding--Service QName Figure Configure Service Client Endpoints SOA Binding--Modify Access Point Figure Configure Service Client Endpoints SOA Binding--WDSL Port Name Figure Explicitly Configured Binding Figure Microsoft Service Configuration Editor--Configure SOA Binding Figure system.diagnostics section machine.config file Figure Enable \"Verbose\" Trace Mode Figure Control Panel--Add Remove Programs (Select) Figure Control Panel--Add Remove Programs (Change/Remove) Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Preface Preface \"Service Manager Agent WCF Installation Guide\" provides instructions installing configuring \"Service Manager Agent WCF\" supported Windows platforms. GUIDE guide includes following chapters: Chapter \"Installing Agent WCF\" provides list steps installing \"Agent WCF\" using \"Agent WCF Setup Wizard.\" Prerequisites preinstallation steps must performed prior beginning installation provided. Chapter \"Configuring Agent WCF\" provides steps configuring \"Agent WCF\" using \"Agent WCF Configuration Wizard.\" Chapter \"Troubleshooting Agent WCF Installation\" provides troubleshooting information assist configuration maintenance Agent WCF. SYSTEM REQUIREMENTS Agent WCF \"Agent WCF\" supports following configurations: Platform Support Windows Server editions, Windows Server editions, Windows Server Windows Database Support Microsoft SQL Server above, Oracle above. Policy Manager prerequisite, \"Agent WCF\" requires installation configuration Policy Manager outlined \"Policy Manager Installation Guide Windows UNIX Platforms\" required updates. Note: Refer \"Service Manager Agent WCF Release Notes\" information Policy Manager Updates installed. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Preface following table lists minimum system requirements running Policy Manager Windows UNIX platforms. Component Name Policy Manager Host Requirement Hardware Single CPU, 2Ghz, RAM Operating System Windows Windows Service pack Windows Service pack Windows Windows Client Browser accessing Policy Manager User Interface above Netscape above Mozilla Firefox above Oracle Microsoft SQL Server Note: database usually not reside computer hosting Policy Manager. base install, configuration data, consumes initial space. Each detailed transaction log consumes approximately bytes database storage space. Typically, however, transactions logged manner. means database storage space consumed every transactions. transaction rate used test 1250TPS database storage space consumed rate per hour. Assume average recorded message size Typically, however, transactions logged manner. Alerts, performance data SLA Rollup data add approximately per transactions. Database Management Systems Database Sizing Guidelines Memory Configuration default maximum heap size SOA Software Containers Java processes) subset Policy Manager product documentation published Portable Document Format (PDF) requires Acrobat Reader above. Documentation Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Preface AGENT WCF PROGRAM GROUP \"Agent WCF\" Program Group complete installation includes following menu options: Menu Option Configuration Tools Documentation (Guides PDF format) Agent WCF Function Configure Agent WCF Action Launches \"Agent WCF Configuration Wizard.\" Service Manager Agent WCF Installation Guide Service Manager Agent WCF Release Notes Managing WCF Services Policy Manager Microsoft Visual Studio Add-in Users Guide Installation View Release Notes Use Cases Plug-In CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. Updates Policy Manager product documentation issued periodic basis available submitting email request support@soa.com. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF Chapter Installing Agent WCF OVERVIEW chapter provides instructions installing \"Service Manager Agent WCF\" using \"Agent WCF Setup Wizard.\" AGENT WCF EDITIONS \"Agent WCF\" comes four editions target different Microsoft.NET Framework versions Windows platform architectures. Agent WCF version editions manage services client applications developed respective Microsoft .NET Framework runtimes, version following Microsoft.NET version editions available: AgentForWCF.3.5.msi Agent WCF Microsoft .NET platform AgentForWCF.3.5.x64.msi Agent WCF Microsoft .NET platform AgentForWCF.msi Agent WCF Microsoft .NET platform AgentForWCF.x64.msi Agent WCF Microsoft .NET platform selecting edition must installed computer, select platform edition first, select Microsoft .NET version edition second. install both .NET .NET editions same machine side-by-side long platform editions match computer platform. INSTALLING AGENT WCF section provides instructions performing GUI installation Service Manager Agent WCF supported Windows platforms using \"Agent WCF Setup Wizard.\" Note: \"Agent WCF Setup Wizard\" installs \"Microsoft Visual Studio Add-in.\" optional component provides registry browse, service reference, service publish capabilities. more information, refer \"Microsoft Visual Studio Add-in Users Guide\" Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF available through \"Service Manager Agent WCF\" program group. begin installation process, must Administrator privileges computer. Install Agent WCF Step Procedure begin installation \"Agent WCF,\" launch installation file \"AgentForWCF.msi.\" installation process does not begin automatically, locate AgentForWCF.msi file inside Windows folder double-click \"Welcome Agent WCF Setup Wizard\" displays. Figure Welcome Agent WCF Setup Wizard Click Next. \"License Agreement\" screen displays. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF Install Agent WCF Figure License Agreement agree license terms, click Agree\" radio button, Next continue. \"Select Installation Folder\" screen displays. Figure Select Installation Folder Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF Install Agent WCF install default folder, click Next. Otherwise, click Browse, select installation folder, click determine disk space requirements, click Disk Cost continue folder selection. \"Install Agent WCF yourself, anyone uses computer\" option populates Program Group menu \"Agent WCF\" application. Click radio button represents Program Group generated Everyone, Just default \"Just Note: Agent must installed unique folder outside Policy Manager release directory. Attempting overwrite existing Policy Manager installation not recommended compromise Policy Manager configuration files lead unexpected results. After configured installation folder, click Next continue. \"Confirm Installation\" screen displays. Figure Confirm Installation wish make any changes, click Back navigate screen update. begin installation process, click Next. \"Agent WCF being installed.\" progress indicator displays. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF Install Agent WCF Figure Installing Agent WCF--Progress Indicator After \"Agent WCF\" installation complete \"Installation Complete\" screen displays. Figure Installation Complete Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Installing Agent WCF Install Agent WCF exit \"Agent WCF Setup Wizard,\" click Close. view Release Notes, Program Group click SOA Software Agent WCP Documentation View Release Notes. After exited \"Agent WCF Setup Wizard\" perform following tasks: Register \"Agent WCF\" Policy Manager \"Management Console.\" Configure \"Agent WCF\" using \"Agent WCF Configuration Wizard.\" Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Chapter Configuring Agent WCF OVERVIEW \"Agent WCF\" uses concept \"Container.\" container logical unit groups set services client endpoints controlled dedicated \"controller\" instance Policy Manager product). container its own unique identifier (key). \"Agent WCF\" treats \"Agent\" containers \"Delegate\" containers differently. Agent container manages more WCF services hosted same machine, not necessarily services hosted same process .NET application domain. Delegate container manages client-side endpoints used call services registered Policy Manager. Agent containers must registered Policy Manager, Delegate containers cannot registered Policy Manager. multiple Service Delegate Containers \"hosted\" single \"Agent WCF\" installation. containers, however, manage services clients running same machine. chapter describes process configuring \"Agent WCF.\" CONFIGURING AGENT WCF following procedure illustrates configure \"Agent WCF\" using \"Agent WCF Configuration Wizard.\" configuration process provides three different \"Configuration Types\" selected based specific deployment scenario. Configure Agent WCF Step Procedure Windows Start menu select SOA Software Agent WCF Configure Agent WCF launch \"Agent WCF Configuration Wizard.\" \"Welcome Agent WCF Configuration Wizard\" screen displays. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Welcome Review information click Next continue. \"Manage Containers\" screen displays. Click Add Container... link create new container. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Manage Containers Configure Delegate Container \"Add Container\" window, select \"Delegate Container\" \"Container Type\" dropdown, enter arbitrary \"Container Key\" provide URL Workbench metadata Exchange Service. URL uniquely identifies Workbench instance. Policy Manager Version select version (default value). option, allows container configured against Service Manager instance backward compatibility. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Configure Delegate Container) optionally associate Delegate Container user certificate identity. allow \"Agent WCF\" present client credentials service automatically client authentication User Name token certificate required. Note \"Agent WCF\" not override security credentials specified client application configuration file. configure User Name Password user account Click \"User Account\" field under \"Identities\" category click Enter User Name Password information. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (User Name Password Identity) iii. Click save account information. credentials data encrypted stored Agent metabase. configure Windows user account Click \"Windows Account\" field under \"Identities\" category. click Enter User name, Password, Domain information. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Username, Password, Domain) Click save account information. credentials data encrypted stored Agent metabase. configure client certificate Click Certificate\" field under \"Identities\" category. click Select certificate list certificates Local Machine's personal store. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Certificate Identity) iii. open \"Certificate\" dialog double-clicking any certificate list: Figure Agent WCF Configuration Wizard--Add Container (Certificate) Click associate selected certificate Delegate container. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Click continue wait operation complete. Figure Agent Configuration Wizard--Add Container (Complete Operation) Configuring Agent Container \"Add Container\" window, select \"Agent Container\" \"Container Type\" dropdown list box, enter \"Container Key\" registered Policy Manager \"Workbench,\" provide URL Workbench metadata Exchange Service. URL uniquely identifies Workbench instance. Policy Manager Version select version (default value). option, Policy Manager allows container configured against Service Manager instance backward compatibility. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Configure Agent Container) Configuring monitoring data delivery mechanism currently two monitoring data delivery methods: Database Web Service. Both methods support sending monitoring recording data Workbench, data examined. Both methods support synchronous asynchronous operations. Database transport uses direct connection Workbench database (currently supported database engines Microsoft SQL Server Oracle Database); Web Service transport uses Workbench Web Service API. configure Database transport, select \"Database\" \"Delivery Transport\" drop-down list box, select appropriate server type SQL\" \"Oracle\"), specify server name, database name, database user account permissions write database, user password. Note: option does not support Windows Authentication. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Configure Monitoring Data Delivery Mechanism) additional properties tuned control database transport behavior: SQL Command Timeout--Sets timeout database commands (statements) issued against Workbench database. Rollup Data Caching Time--Sets common metrics accumulation time interval. interval expires, accumulated data written database. Asynchronous--Enables monitoring data delivered Workbench asynchronously. Max Asynchronous Queue Size--Sets maximum number transactions accumulated queue before discarding new transactions. parameter set queue limited available memory Max Asynchronous Threads--Sets maximum number threads used delivery operations. Dispose Timeout--Sets internal worker threads dispose timeout. configure Web Service transport, select \"Web Service\" \"Delivery Transport\" dropdown. address service discovered automatically. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Add Container (Configure Web Service Transport Advanced properties transport allow following configuration options: Max Upload Message Size--Sets maximum size single upload message sent through Workbench Web Service API. data accumulated service process sent Workbench SOAP message reaches size; Max Upload Delay Time--Sets maximum time complete formation single upload message. data accumulated service process sent Workbench oldest transaction older value; Note: Both \"Max Upload Message Size\" \"Max Upload Delay Time\" parameters work simultaneously. Asynchronous--Enables monitoring data delivered Workbench asynchronously; Max Asynchronous Queue Size--Sets maximum number transactions accumulated queue before starting discarding new transactions. parameter set queue limited available memory Max Asynchronous Threads--Sets maximum number threads used delivery operations; Dispose Timeout--Sets internal worker threads dispose timeout. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF \"Agent WCF\" requires certificate identity assigned Agent type container. communication between Agent Policy Manager secured using certificates both Agent Policy Manager. \"Agent WCF Configuration Wizard\" run first time, same steps described above Delegate type container must followed assign required certificate Agent type container. Click \"Agent WCF Configuration Wizard\" run first time Agent container not yet registered Policy Manager. configuration wizard identifies registration status through communication Policy Manager presents following warning: Figure Agent WCF Configuration Wizard--\"Container not registered\" Warning warning shows local path container metadata file must imported Policy Manager \"Management Console\" complete container registration. Copy metadata file path clipboard. Launch Policy Manager login screen log Policy Manager \"Management Console.\" Expand Organization Tree select \"Containers\" folder. \"Containers Summary\" screen displays. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Containers Summary Click \"Add Container.\" \"Select Container Type\" screen displays. Figure Agent WCF Configuration Wizard--Select Container Type Select \"SOA Container\" option click Next continue. \"Specify Metadata Import Options\" screen displays. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Agent WCF Configuration Wizard--Specify Metadata Import Options Click \"Metadata Path\" radio button, \"Browse.\" \"Chose File Upload\" screen paste full path metadata file copied clipboard Step \"File name\" text box click Next. container certificate not trusted Policy Manager Certificate Not Trusted\" screen displays. Figure Agent WCF Configuration Wizard--X.509 Certificate Not Trusted \"Yes\" option selected default. Click Next continue. \"Specify Container Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Details\" screen displays. Figure Agent WCF Configuration Wizard--Specify Container Details Enter container \"Instance Name\" optional \"Description.\" Click Finish continue. \"Completion Summary\" screen displays. Click Close. Figure Agent WCF Configuration Wizard--Completion Summary Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Return \"Agent WCF Configuration Wizard\" (Step click warning presented container registered Policy Manager configuration wizard returns \"Manage Containers\" screen. Figure Agent WCF Configuration Wizard--Add Container (Save Container Configuration) successfully created Delegate Agent Container. Click Next continue \"Agent WCF Configuration Wizard.\" Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF configure \"Agent WCF\" installation service discovery runtime, select \"True\" \"Services Discovery Enabled\" option located \"Configuration\" section. Note Service Discovery must enabled \"Containers\" section Policy Manager \"Management Console\" function operational. Figure Agent WCF Configuration--Agent WCF Properties Advanced Configuration Options following advanced configuration options available: Cache Interval--Sets time interval retaining endpoint configurations memory cache before triggering auto update; Authorization Interval--Sets time interval retaining authorization results memory cache; Synchronization Lock Timeout--Sets time interval wait lock common configuration file before throwing error; Minimum Memory Threshold--Sets minimum amount available physical memory (bytes) allows queuing asynchronous operations. Service mode exposes following additional configuration options: Execution Time Interval--Sets often Agent Service checks endpoint configuration updates; Auto Recycle Web Applications--A flag permits Agent Service Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF automatically restart Web Applications endpoint configuration changed. Complete Configuration \"Agent WCF\" configuration complete, click Next continue, Finish \"Configuration Finalization\" screen. Verify steps completed without errors. Figure Agent Configuration Wizard--Add Container (Configuration Finalization) Click Close exit \"Agent WCF Configuration Wizard.\" \"Agent WCF\" fully configured operational. \"Services Discovery Enabled\" option set \"True\" Step proceed \"Container Details\" screen Policy Manager \"Management Console.\" Click \"Modify Service Discovery Options\" click \"Discover services radio button. \"Agent WCF\" does not support \"Discover automatically manage services\" option. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Agent WCF Figure Modify Service Discover Options AGENT METABASE FILE \"Agent WCF\" stores its configuration Soa.WcfMP.config metabase file. default file located Agents installation folder. path file controlled via registry setting HKLM\\SOFTWARE\\SOA Software, Inc\\WCFMP\\InstallDir. Sometimes may necessary store metabase file another more secure) location. done moving Soa.WcfMP.config file another folder updating registry setting. Note: Always make backup computer's registry before making any changes. CONFIGURING SERVICE CLIENT ENDPOINTS SOA BINDING make existing WCF client service endpoint managed Workbench \"Agent WCF\" container, binding endpoint must replaced SOA Binding. binding extension registered machine.config file \"soaBinding. following procedure assumes client service application uses configuration file configure its WCF endpoints. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Service Client Endpoints SOA Binding Step Procedure Open application web configuration file using any text editor Notepad, Visual Studio, etc). Find endpoint managed \"Agent WCF.\" Find \"Service QName\" \"Endpoint Name\" Policy Manager \"Management Console.\" Open Policy Manager \"Management Console.\" Find web service associated physical endpoint. Find service QName \"Details\" tab. Figure Configure Service Client Endpoints SOA Binding--Service QName Click \"Access Points\" tab find endpoint Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Service Client Endpoints SOA Binding manage. Figure Configure Service Client Endpoints SOA Binding--Modify Access Point \"Actions\" drop-down list box, select \"View Access Point Details.\" Access Point \"Details\" tab find \"WSDL Port Name\" property endpoint name. Figure Configure Service Client Endpoints SOA Binding--WDSL Port Name Replace standard binding \"soaBinding\" add configuration new binding. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Service Client Endpoints SOA Binding following information required SOA Binding operate properly: containerId--Specifies container manages endpoint. Remember service endpoints must managed Agent container client endpoints must managed Delegate container. serviceQName--QName service registered Policy Manager \"Workbench.\" portName--Service endpoint name registered Policy Manager \"Workbench.\" addition required properties listed above, following advanced properties configured SOA Binding: openTimeout, closeTimeout, sendTimeout, receiveTimeout--Set standard timeouts communication channel. dynamicRoutingEnabled--A flag enables dynamic routing feature client endpoint. flag enabled allows client endpoint dynamically assign physical address service Workbench registry (Default True). useDefaultWebProxy--A flag instructs HTTPS transports use system proxy configuration (Default True). maxBufferSize--Sets maximum size any buffer pools used transport. maxReceivedMessageSize--Sets maximum allowable message size received. maxBufferPoolSize--Sets maximum size any buffer pools used transport. readerQuotas element--A standard Reader Quotas configuration element allows configuration constraints complexity SOAP messages processed endpoint. following example illustrates explicitly configured binding: Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Configuring Agent WCF Configure Service Client Endpoints SOA Binding Figure Explicitly Configured Binding Note: Bindings configured using Microsoft Service Configuration Editor included Microsoft Windows SDK .NET Framework (http://www.microsoft.com/downloads/details.aspx?FamilyId=F26B1AA4741A-433A-9BE5-FA919850BDBF&displaylang=en). Refer Microsoft documentation details. following figure illustrates MSCE Tool configuring SOA Binding: Figure Microsoft Service Configuration Editor--Configure SOA Binding Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Troubleshooting Agent WCF Installation Chapter Troubleshooting Agent WCF Installation OVERVIEW chapter provides troubleshooting information assist configuration maintenance \"Agent WCF.\" TROUBLESHOOTING CONFIGURATION WIZARD ERRORS \"Agent WCF Configuration Wizard\" writes errors occurred during configuration process text log file. log file located \"Agent WCF\" Installation folder. log filename starts Soa.WcfMP.ConfigurationWizard.exe prefixed date time error. Common scenarios cause configuration process fail include: \"Agent WCF\" fails update \"Agent WCF\" metabase file does not exist specified location current user does not permissions perform updates. Incorrect database connection credentials specified database delivery adapter. invalid Metadata Exchange Service URI provided. case error, examine log file attempt mitigate problem providing valid Metadata Service URI database user credentials). TROUBLESHOOTING AGENT WCF DURING RUNTIME OPERATION \"Agent WCF\" utilizes standard tracing features .NET Framework. trace source information stored system.diagnostics section machine.config file. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Troubleshooting Agent WCF Installation Figure system.diagnostics section machine.config file default, \"Agent WCF\" configured write messages severities Information, Warning, Error application event log. reduce number messages size log file restricting severity level \"Warning\" \"Error.\" times may necessary collect higher volume information error. case, severity level listener switched \"Verbose.\" change produce larger volume data, changing trace listener \"Event Log\" \"Text File\" recommended. following example illustrates enable \"Verbose\" trace mode. Figure Enable \"Verbose\" Trace Mode UNINSTALLING AGENT WCF Uninstall Agent WCF Step Procedure uninstall \"Agent WCF\" computer, open Windows Control Panel (Start Settings Control Panel). Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Troubleshooting Agent WCF Installation Uninstall Agent WCF Click \"Program Features\" icon Windows Server \"Add/Remove Programs\" Windows Server Figure Control Panel--Add Remove Programs (Select) Select \"Agent WCF\" program click Remove. Figure Control Panel--Add Remove Programs (Change/Remove) Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide Chapter Troubleshooting Agent WCF Installation Uninstall Agent WCF Click Yes uninstall \"Agent WCF\" computer. Copyright SOA Software, Inc. Service Manager Agent WCF Installation Guide"},{"title":"WCF Management Guide","url":"/ag/wcf_management_guide.html","date":null,"type":"pdf","description":"The Management instructions for WCF.","categories":[],"body":"Managing WCF Services Policy Manager Guide Copyright SOA Software, Inc. Managing WCF Services Policy Manager Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machinereadable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Table Contents MANAGING WCF SERVICES POLICY MANAGER GUIDE PREFACE What's Guide? Documentation................................................................................................................................4 Customer Support.....................................................................................................................................5 CHAPTER AGENT WCF ARCHITECTURE Overview Architecture...............................................................................................................................................6 CHAPTER MANAGING WCF SERVICES POLICY MANAGER SECURITY POLICIES Overview AnonymousForCertificate MutualCertificateSignEncrypt MutualCertificateSignOnly................................................................10 MutualCertificateSymmetricBinding........................................................................................................11 UsernameForCertificate..........................................................................................................................12 UsernameOverTransport CertificateOverTransport.........................................................................................................................14 KerberosOverTransport SAMLOverTransport Configuring SOA Software WS-Auditing Policies Usage Data Monitoring CHAPTER POLICY MANAGER CONFIGURATIONS WCF COMMON SECURITY SCENARIOS Overview Configure Services..................................................................................................................................25 Transport Security Basic Authentication Message Security Windows Client Message Security Windows Client NET.TCP Message Security User Name Client Transport Security Windows Authentication HTTPS...............................................................41 Message Security Certificate Client Configuring WCF Scenarios CHAPTER CONFIGURING WCF POLICIES NETWORK DIRECTOR Overview Configuring Virtual Service Inbound Policies..........................................................................................49 Configuring Virtual Service Outbound Policies.......................................................................................53 Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide iii Preface Preface WHAT'S GUIDE? Managing WCF Services Policy Manager Guide provides overview Service Manager Agent WCF architecture, information policy configuration common security scenarios. includes following chapters: Chapter Agent WCF Architecture, provides overview Agent WCF solution its three major components: soaBinding, SOA Agent Windows Service, Centralized Internal Metabase. Chapter Managing WCF Services Policy Manager Security Policies, describes Operational sample policies supported Agent WCF provides configuration details. Chapter Policy Manager Configurations WCF Common Security Scenarios, describes typical Intranet Internet scenarios described variations Microsoft WCF wsHttpBinding netTcpBinding configurations. Chapter Configuring WCF Policies Network Director, describes typical policy configurations supported Policy Manager WCF services virtualized through Network Director. DOCUMENTATION effectively use guide, access working knowledge concepts outlined following Policy Manager product documentation: Policy Manager Installation Guide Windows UNIX Platforms Policy Manager Online Help Service Manager Agent WCF Installation Guide Microsoft Visual Studio Addin Users Guide Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Preface CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. Updates Policy Manager product documentation issued monthly basis available submitting email request support@soa.com. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Agent WCF Architecture Chapter Agent WCF Architecture OVERVIEW Service Manager Agent WCF built top Microsoft Windows Communication Foundation (WCF) technology fully leverages Microsoft .NET Framework WCF. services enabled SOA Software manageability remain native WCF services. Agent WCF drives underlying WCF mechanism dynamically enforce and/or implement security standard interoperable WCF specific policies. Additionally Agent WCF extends WCF functionality not readily available outofthebox Microsoft WCF services monitoring, centralized messages recording, auditing, declarative authorization, etc.). native WCF solution, Agent WCF built using extensibility points WCF technology. Specifically, Agent WCF leveraging WCF notion extensible WCF channels defined WCF binding(s). ARCHITECTURE core Agent WCF solution custom developed soaBinding, new WCF binding configuration element introduced WCF design runtime soon Agent installed. fundamental difference between soaBinding any standard WCF binding soaBinding not configured specific policies, text encoders transport channel attributes, instead carries short links service endpoint registered SOA Software UDDI Registry. WCF Service Host started during runtime, soaBinding dynamically builds standard WCF channel stack according policies defined UDDI Registry database. most cases soaBinding extends WCF channel stack additional channels provided SOA Software, implements functionality unique Agent WCF product. diagram below shows Agent WCF highlevel architecture. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Agent WCF Architecture Figure Agent WCF Architecture Agent WCF solution includes three major components: soaBinding binding replaces standard WCF binding application configuration files web.config). SOA Agent Windows Service service responsible communication Policy Manager instance(s) behalf soaBindings available given computer. Centralized Internal Metabase persistent cache actual current soaBinding configurations. soaBinding contains standard WCF binding functionality, used service endpoints client endpoints. symmetry results two possible Agent container types single Agent WCF installation configured include Agent Delegate container types. Agent containers manage service endpoints, Delegate containers manage client endpoints. Each container logical grouping either service client WCF endpoints given computer. Figure illustrates hypothetical setup service application(s) deployed IIS/WAS environment (bottom left computer) BizTalk Server environment (bottom right computer). top left computer hosts client applications call SOA Software managed services. Client applications shown managed SOA Software soaBinding. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Agent WCF Architecture not requirement place both client service applications under management. managed independently, not managed. Figure illustrates Agent WCF leverages WCF channel stack placing dynamically configuring standard WCF channels, injecting custom built Intercepting channels. Figure Agent WCF Communication Stack Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Chapter Managing WCF Services Policy Manager Security Policies OVERVIEW Policy Manager shipped series predefined sample policies illustrate common interoperable security scenarios. policies located Root Organization Policy Manager Management Console used base policy customized meet requirements. Sample policies typically constructed using Policy Manager Aggregate policy include two more added referenced policies. chapter describes Operational sample policies supported Agent WCF provides configuration details. Each section provides following information: description Policy Manager sample policy (Aggregate associated policies). Notation indicating policy supported Agent WCF. WCF binding configuration matches Policy Manager sample policy. Additional information policy requires configuration beyond illustrated WCF binding configuration. ANONYMOUSFORCERTIFICATE AnonymousForCertificate policy Aggregate Policy includes following policies: AnonymousForCertificate_part1 (WSSecurity Symmetric Binding Policy) AnonymousForCertificate_part2 (WSSecurity Message Policy) policy, client anonymous service authenticated using certificate. WCF binding used instance Symmetric Binding. SOAP body signed encrypted derived keys. Supported Agent WCF Yes WCF Configuration <customBinding> <binding name=\"AnonymousForCertificate\"> <security defaultAlgorithmSuite=\"TripleDesRsa15\" authenticationMode=\"AnonymousForCertificate\" Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies requireDerivedKeys=\"true\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" requireSignatureConfirmation=\"false\" messageProtectionOrder=\"SignBeforeEncryptAndEncryptSignature\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\" <textMessageEncoding messageVersion=\"Soap12\" <httpTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> AnonymousForCertificate policy requires client configured service's certificate. accomplished using endpoint behavior: <endpointBehaviors> <behavior name=\"ClientBehavior\"> <clientCredentials> <serviceCertificate> <defaultCertificate findValue=\"[certificate hash value]\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\"/> </serviceCertificate> </clientCredentials> </behavior> </endpointBehaviors> MUTUALCERTIFICATESIGNENCRYPT MUTUALCERTIFICATESIGNONLY MutualCertificateSignEncrypt policy Aggregate Policy includes following policies: MutualCertficateSignEncrypt_part1 (WSSecurity Asymmetric Binding Policy) MutualCertifcateSignEncrypt_part2 (WSSecurity Message Policy) policy, client authenticates using certificate appears SOAP layer initiator token. service authenticated using certificate. SOAP body signed optionally encrypted. MutualCertificateSignOnly policy Aggregate Policy includes following policies: MutualCertficateSignOnly_part1 (WSSecurity Asymmetric Binding Policy) MutualCertifcateSignOnly_part2 (WSSecurity Message Policy) policy, client authenticates using certificate appears SOAP layer initiator token. service authenticated using certificate. SOAP body signed. Supported Agent WCF Yes Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies WCF Configuration <customBinding> <binding name=\"MutualCertificateDuplex\"> <security defaultAlgorithmSuite=\"TripleDesRsa15\" authenticationMode=\"MutualCertificateDuplex\" requireDerivedKeys=\"false\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" messageProtectionOrder=\"SignBeforeEncrypt\" messageSecurityVersion=\"WSSecurity10WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\" requireSignatureConfirmation=\"false\" <textMessageEncoding messageVersion=\"Soap12\" <httpTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> MutualCertficateSignEncrypt MutualCertificateSignOnly policies require client configured service's certificate. accomplished using endpoint behavior: <endpointBehaviors> <behavior name=\"ClientBehavior\"> <clientCredentials> <serviceCertificate> <defaultCertificate findValue=\"[certificate hash value]\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\"/> </serviceCertificate> </clientCredentials> </behavior> </endpointBehaviors> MUTUALCERTIFICATESYMMETRICBINDING MutualCertificateSymmetricBinding policy Aggregate Policy includes following policies: MutualCertificateSymmetricBinding_part1 (WSSecurity Symmetric Binding Policy) MutualCertificateSymmetricBinding_part2 (WSSecurity Message Policy) MutualCertificateSymmetricBinding_part3 (WSSecurity Supporting Tokens Policy) policy, client authenticates using certificate endorsing supporting token. service authenticated using certificate. binding used symmetric binding protection token being key generated client, encrypted public key service. SOAP body signed encrypted derived keys. Supported AGENT WCF Yes WCF Configuration <customBinding> <binding name=\"MutualCertificate\"> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies <security defaultAlgorithmSuite=\"TripleDesRsa15\" authenticationMode=\"MutualCertificate\" requireDerivedKeys=\"true\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" messageProtectionOrder=\"SignBeforeEncryptAndEncryptSignature\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\" requireSignatureConfirmation=\"false\" <textMessageEncoding messageVersion=\"Soap12\" <httpTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> MutualCertificateSymmetricBinding policy requires client configured service's certificate its own certificate. accomplished using endpoint behavior: <endpointBehaviors> <behavior name=\"ClientBehavior\"> <clientCredentials> <clientCertificate findValue=\"[certificate hash value]\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\" <serviceCertificate> <defaultCertificate findValue=\"e0202fe0253d76c587c52bc96811357d46a010da\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\"/> </serviceCertificate> </clientCredentials> </behavior> </endpointBehaviors> USERNAMEFORCERTIFICATE UsernameForCertificate policy Aggregate Policy includes following policies: UsernameForCertificate_part1 (WSSecurity Symmetric Binding Policy) UsernameForCertificate_part2 (WSSecurity Message Policy) UsernameForCertificate_part3 (WSSecurity Supporting Tokens Policy) policy, client authenticates service using Username Token appears SOAP layer signed supporting token. service authenticates client using certificate. binding used symmetric binding protection token being key generated client, encrypted public key service. SOAP body signed encrypted derived keys. Supported Agent WCF Yes WCF Configuration <customBinding> <binding name=\"UserNameForCertificate\"> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies <security defaultAlgorithmSuite=\"TripleDesRsa15\" authenticationMode=\"UserNameForCertificate\" requireDerivedKeys=\"true\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" requireSignatureConfirmation=\"false\" messageProtectionOrder=\"SignBeforeEncryptAndEncryptSignature\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\" <textMessageEncoding messageVersion=\"Soap12\" <httpTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> UsernameForCertificate policy requires client configured service's certificate. accomplished using endpoint behavior: <endpointBehaviors> <behavior name=\"ClientBehavior\"> <clientCredentials> <serviceCertificate> <defaultCertificate findValue=\"[certificate hash value]\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\"/> </serviceCertificate> </clientCredentials> </behavior> </endpointBehaviors> client must provide username/password credentials. accomplished proxy class: EchoServiceClient client new EchoServiceClient(\"Endpoint\"); client.ClientCredentials.UserName.UserName \"Tester\"; client.ClientCredentials.UserName.Password \"password\"; USERNAMEOVERTRANSPORT UsernameOverTransport policy Aggregate Policy includes following policies: UsernameOverTransport_part1 (WSSecurity Transport Binding Policy) UsernameOverTransport part2 (WSSecurity Supporting Tokens Policy) policy, client authenticates Username Token appears SOAP layer signed supporting token always sent initiator recipient. service authenticated using certificate transport layer. binding used transport binding. Supported Agent WCF Yes WCF Configuration <customBinding> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies <binding name=\"UserNameOverTransport\"> <security defaultAlgorithmSuite=\"Default\" authenticationMode=\"UserNameOverTransport\" requireDerivedKeys=\"true\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\"/> <textMessageEncoding messageVersion=\"Soap12\" <httpsTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> client must provide username/password credentials. accomplished proxy class: EchoServiceClient client new EchoServiceClient(\"Endpoint\"); client.ClientCredentials.UserName.UserName \"Tester\"; client.ClientCredentials.UserName.Password \"password\"; CERTIFICATEOVERTRANSPORT CertificateOverTransport policy Aggregate Policy includes following policies: CertificateOverTransport_part1 (WSSecurity Transport Binding Policy) CertificateOverTransport part2 (WSSecurity Supporting Tokens Policy) policy, client authenticates using certificate appears SOAP layer endorsing supporting token always sent initiator recipient. service authenticated using certificate transport layer. binding used transport binding. Supported Agent WCF Yes WCF Configuration <customBinding> <binding name=\"CertificateOverTransport\"> <security defaultAlgorithmSuite=\"Default\" authenticationMode=\"CertificateOverTransport\" requireDerivedKeys=\"true\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\"/> <textMessageEncoding messageVersion=\"Soap12\" <httpsTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> client must configured its own certificate. accomplished using endpoint behavior: Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies <endpointBehaviors> <behavior name=\"ClientBehavior\"> <clientCredentials> <clientCertificate findValue=\"9cbdd7b964f2113cc0182765c7293891b52591b4\" storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\" </clientCredentials> </behavior> </endpointBehaviors> KERBEROSOVERTRANSPORT KerberosOverTransport policy Aggregate Policy includes following policies: KerberosOverTransport_part1 (WSSecurity Transport Binding Policy) KerberosOverTransport part2 (WSSecurity Supporting Tokens Policy) policy, client authenticates service using Kerberos ticket. Kerberos token appears SOAP layer endorsing supporting token. service authenticated using certificate transport layer. binding transport binding. Supported Agent WCF Yes WCF Configuration <customBinding> <binding name=\"KerberosOverTransport\"> <security defaultAlgorithmSuite=\"Basic128\" authenticationMode=\"KerberosOverTransport\" requireDerivedKeys=\"false\" securityHeaderLayout=\"Lax\" includeTimestamp=\"true\" keyEntropyMode=\"CombinedEntropy\" messageSecurityVersion=\"WSSecurity11WSTrustFebruary2005WSSecureConversationFebr uary2005WSSecurityPolicy11BasicSecurityProfile10\"/> <textMessageEncoding messageVersion=\"Soap12\" <httpsTransport authenticationScheme=\"Anonymous\" </binding> </customBinding> client provide Windows credentials done either implicitly, using current process identity, explicitly proxy class: EchoServiceClient client new EchoServiceClient(\"Endpoint\"); client.ClientCredentials.Windows.ClientCredential.Domain \"DEV\"; client.ClientCredentials.Windows.ClientCredential.UserName \"testuser\"; client.ClientCredentials.Windows.ClientCredential.Password \"password\"; Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies SAMLOVERTRANSPORT SAMLOverTransport policy Aggregate Policy includes following policies: SAMLOverTransport_part1 (WSSecurity Transport Binding Policy) SAMLOverTransport_part2 (WSSecurity Supporting Tokens Policy) policy, client authenticates SAML Token appears SOAP layer signed supporting token always sent initiator recipient. service authenticated using certificate transport layer. binding used transport binding. Supported Agent WCF CONFIGURING SOA SOFTWARE WS-AUDITING POLICIES Policy Manager provides following policy types used configure monitoring recording service operations. WS-Auditing Service Policy WSAuditing Service Policy assigned binding binding operation, indicates usage monitoring recording applied intercepted message. following policy assignment scenarios apply: assigned binding, messages operations monitored. assigned operation, messages related operation monitored. policy deals envelopeabstract message. means SOAP message intercepted, provided XPath expressions evaluated starting first element inside <soap:Body/>. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Figure Modify WS-Auditing Service Policy Agent WCF supports following configuration options: Name Audit Messages Filter Messages Description checkbox enables auditing messages. checkbox enables ability filter messages based following Filter Settings: Exchanges resulting error--A radio button option enables ability audit request/response pairs include fault messages. Percentage exchanges--A radio button option enables ability audit message pairs random sample messages based specified percentage. option includes text box allows enter integer percentage between Messages XPath--A radio button option enables ability audit messages satisfy specified XPath. provided XPath executed against request message content (starting <soap:Body/>). expression evaluates True, message pair monitored. Audit Input Message checkbox enables recording request messages. option applies messages passed message filter defined \"Filter Messages\" section. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Name Audit Output Message Description checkbox enables recording response messages. option applies messages passed message filter defined \"Filter Messages\" section. checkbox enables recording fault messages. Audit Fault Message remaining policy options not applicable Agent WCF. WS-Auditing Message Policy WSAuditing Message Policy assigned message inside binding indicates message content recorded. policy applied message belonging operation WSAuditing Service Policy assigned, inside binding such policy. Figure Modify WS-Auditing Message Policy Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Agent WCF supports following configuration options: Name Label Entire Message Description text box allows enter name recorded content audit record. checkbox enables auditing messages. option audits message exchanges (carried inside <soap:Body/> element). checkbox enables ability filter subset messages based defined filter XPath expression). \"XPath Expression\" table allows specify more XPath expressions audited messages must satisfy. table includes \"XPath Expression\" table cell editable. table allows specify XPath audited messages must satisfy. \"Namespace Prefixes\" table allows enter more Namespace Prefix expressions filtering messages. table includes \"Prefix\" \"Namespace\" table cells. table cells editable. Filter Audited Content XPath Namespace Prefixes WS-Auditing SOAP Service Policy WSAuditing SOAP Service Policy similar WSAuditing Service Policy assigned binding binding operation. indicates usage monitoring recording applied intercepted message. following policy assignment scenarios apply: assigned binding, messages operations monitored. assigned operation, messages related operation monitored. contrast WSAuditing Service Policy, WSAuditing Service Policy works specifically SOAP bindings XPath expressions evaluated starting <soap:Envelope/> element. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Figure Modify WS-Auditing SOAP Service Policy set options WSAuditing SOAP Service Policy similar WSAuditing Service Policy options addition Phase property. option indicates message recording occur. set Application, messages recorded close service level after security header already processed message content decoded). Phase set Wire, messages recorded close transport before message content modified channel stack). Note, recording not enabled Audit Input Message Audit Output Message option, property affect message processing. WS-Auditing SOAP Message Policy WSAuditing SOAP Message Policy similar WSAuditing Message Policy assigned message inside binding. policy indicates SOAP message content recorded. contrast WSAuditing Message Policy, WSAuditing SOAP Message Policy works specifically SOAP bindings SOAP messages. XPath expressions evaluated starting <soap:Envelope/> element. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Agent WCF supports following configuration options: Name Audit SOAP Envelope Message Size Audit Transport Headers Description checkbox enables auditing SOAP envelope message size. message recorded, its size recorded. checkbox enables ability audit transport headers. message recorded, headers always recorded request messages. Headers--A radio button option enables ability audit transport headers. Specific Headers--A radio button option enables ability audit list transport headers. \"Transport Header\" table stores list transport header names audited. Transport headers added deleted. table includes \"Transport Header\" table cell editable. more \"Transport Headers\" entered filtering messages. \"Add\" button adds empty row \"Transport Header\" table. \"Remove\" button deletes row \"Transport Header\" table. Audit Wire Formatted Message Content checkbox enables auditing message content its wire format. Wire format encoded transport using protocol. incoming messages auditing occurs before SOAP headers processed. outgoing messages auditing occurs after SOAP headers applied. following options supported: Entire Message--A checkbox enables auditing messages. Filter Audited Content XPath--A checkbox enables ability filter subset messages based defined filter XPath expression). \"XPath Expression\" table allows specify more XPath expressions audited messages must satisfy. table includes \"XPath Expression\" table cell editable. XPath Expression--A table row allows specify \"XPath Expression\" used filtering. \"Add\" button adds empty \"XPath Expression\" row \"XPath Expression\" table. \"Remove\" button deletes row \"XPath Expression\" table. Audit Application Formatted Message Content checkbox enables auditing message content its application readable format. indicates message must recorded close service after security header already processed message content decoded. application independent protocol form application consumes. incoming messages auditing occurs after SOAP headers processed. scenario, SOAP envelope may remain. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Name Description outgoing messages auditing occurs before SOAP headers added. headers may present included application, service, itself. following options supported: Entire Message--A checkbox enables auditing messages. Filter Audited Content XPath--A checkbox enables ability filter messages based XPath expressions. \"XPath Expression\" table allows specify XPath audited messages must satisfy. table includes \"XPath Expression\" table cell editable. more XPath Expressions entered filtering messages. XPath Expression--A table row allows specify \"XPath Expression\" used filtering. \"Add\" button adds empty \"XPath Expression\" row \"XPath Expression\" table. \"Remove\" button deletes row \"XPath Expression\" table. Namespace Prefixes table allows map XML namespaces prefixes used XPath expressions audited messages must satisfy. \"Namespace Prefixes\" table allows enter more Namespace Prefix expressions filtering messages. table includes \"Prefix\" \"Namespace\" table cells. table cells editable. Prefix--A table row allows specify \"Prefix\" \"Namespace\" used XPath. Namespace--A table row allows specify \"Namespace\" associated \"Prefix.\" \"Add\" button adds empty \"Prefix\" \"Namespace\" row \"Namespace Prefixes\" table. \"Remove\" button deletes row \"Namespace Prefixes\" table. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies Figure Modify WS-Auditing SOAP Message Policy Figure Modify WS-Auditing SOAP Message Policy Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Managing WCF Services Policy Manager Security Policies USAGE DATA MONITORING Policy Manager includes two sample auditing policies assigned service bindings operations inside binding. Both policies based WSAuditing Service Policy types, deal message content inside SOAP body. Name BasicAuditing Description Provides basic auditing messages. Message metrics recorded viewable via Monitoring Logs tab. messages themselves not recorded. Provides detailed auditing messages. Message metrics recorded viewable via Monitoring Logs tab. policy, entire message each exchange recorded. DetailedAuditing Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Chapter Policy Manager Configurations WCF Common Security Scenarios OVERVIEW Microsoft WCF Common Security Scenarios (http://msdn.microsoft.com/en us/library/ms730301.aspx) define typical Intranet Internet scenarios described variations Microsoft WCF wsHttpBinding netTcpBinding configurations. chapter describes interoperable security Microsoftspecific use cases. CONFIGURE SERVICES configure services registered Policy Manager Microsoft WCF Common Security Scenarios, begin registering physical services Policy Manager. Services not policies attached. Each service must include SOAP binding. WCF service endpoint configuration may described following customBinding: <customBinding> <binding name=\"BasicHttpBindingSoap12\"> <textMessageEncoding messageVersion=\"Soap12\"/> <httpTransport/> </binding> </customBinding> start registering physical service SOAP endpoint binding instead endpoint configured default WCF basichttpBinding), WCF configurations still valid after applying procedures described below. effective WCF configurations equivalent variations WCF customBinding rather wsHttpBinding netTcpBinding. Alternatively, create new SOAP binding existing service using Add Binding function available Configure Registry Bindings section Policy Manager Management Console. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Binding Step Procedure Organization Tree Policy Manager \"Management Console\" select Configure Registry Bindings Tab. \"Bindings Summary\" displays. Click \"Add Binding.\" \"Add Binding Wizard\" launches \"Select Interfaces\" screen displays. Select interface click Next continue. \"Specify Binding Details\" screen displays. Enter \"Namespace URI\" \"Localpart\" elements optional \"Description\" binding definition. Select \"SOAP \"Binding Type\" drop-down list box. Click Next continue. \"SOAP Binding Details\" screen displays. Configure SOAP binding properties click Finish save binding. After saving binding, navigate \"Service Details\" screen service add binding \"Services Overview\" portlet, navigate \"Interfaces Bindings\" section click \"Manage.\" \"Manage Interfaces Bindings Wizard\" launches. \"Select Interfaces\" screen search select interface binding created using \"Add Binding Wizard\" copy \"Interfaces Assigned\" panel. Click Next continue. \"Select Binding\" screen displays. \"Select Binding\" screen, click checkbox binding name created using \"Add Binding Wizard.\" Click \"Finish\" add binding current service. delete existing binding, uncheck binding line item \"Select Binding\" screen. Refer \"Policy Manager Online Help\" more information specified Policy Manager functions. TRANSPORT SECURITY BASIC AUTHENTICATION following illustration shows Windows Communication Foundation (WCF) service client. server needs valid certificate used Secure Sockets Layer (SSL), clients must trust server's certificate (http://msdn.microsoft.com/en us/library/ms733775.aspx). Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Figure WCF Service Client Interoperability Yes WCF Configuration <wsHttpBinding> <binding name=\"BasicAuthOverHttps\"> <security mode=\"Transport\"> <transport clientCredentialType=\"Basic\" </security> </binding> </wsHttpBinding> Policy Manager Configuration following procedure illustrates configure Transport Security Basic Authentication. Configure Transport Security Basic Authentication Step Procedure Organization Tree Policy Manager \"Management Console\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" WCF Basic Authentication) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen XML Policy displays. \"XML Policy\" portlet, click \"Modify.\" \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"WSHttpBinding_BasicAuth\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Transport Security Basic Authentication <wsp:ExactlyOne> <wsp:All> <http:BasicAuthentication xmlns:http=\"http://schemas.microsoft.com/ws/06/2004/policy/http\"/> <sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:TransportToken> <wsp:Policy> <sp:HttpsToken RequireClientCertificate=\"false\"/> </wsp:Policy> </sp:TransportToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> </wsp:Policy> </sp:TransportBinding> <wsaw:UsingAddressing/> </wsp:All> </wsp:ExactlyOne> </wsp:Policy> following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy click checkbox more policies attach current binding. example, select XML Policy just created. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Confirm service Access Point address defined HTTPS Transport Schema. not, click \"Access Points\" tab current service. Access Point line item select \"Modify Access Point\" \"Actions\" drop-down list box. \"Specify Access Point Details\" screen click Next. \"Specify Details\" screen displays Access Point binding. Modify endpoint address click Finish. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Testing Service physical service managed Agent WCF tested WCF client application managed SOA Software WCF Delegate, reconfiguring either service client application not required both managed SOA Software. Note: service deployed IIS Server, confirm Basic Authentication enabled virtual directory hosts service. Basic Authentication not enabled, WCF service throw exception startup. testing service external tool not managed SOA Software Delegate, use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages, configurations relevant external tool. MESSAGE SECURITY WINDOWS CLIENT scenario default configuration wsHttpBinding uses message level security based SSPI Negotiation (NTLM/Kerberos) Secure Conversation protocols. Interoperability Yes WCF Configuration <wsHttpBinding> <binding name=\"Default\"/> </wsHttpBinding> Policy Manager Configuration following procedure illustrates configure Message Security Windows Client Configure Message Security Windows Client Step Procedure Organization Tree Policy Manager \"Management Console\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"Aggregate Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" WSHttp-Default) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Windows Client Aggregate Policy displays. \"Aggregate Policy\" portlet, click Add. \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" Binding Policy) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. \"XML Policy\" portlet, click Modify. \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"WSHttpBinding_Default\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" <wsp:ExactlyOne> <wsp:All> <sp:SymmetricBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> <sp:SecureConversationToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\"> <wsp:Policy> <sp:RequireDerivedKeys/> <sp:BootstrapPolicy> <wsp:Policy> <sp:SignedParts> <sp:Body/> <sp:Header Name=\"To\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"From\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"FaultTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"ReplyTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"MessageID\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"RelatesTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"Action\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> </sp:SignedParts> <sp:EncryptedParts> <sp:Body/> </sp:EncryptedParts> <sp:SymmetricBinding> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Windows Client <sp:SpnegoContextToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\"> <wsp:Policy> <sp:RequireDerivedKeys/> </wsp:Policy> </sp:SpnegoContextToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:Wss11> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> </wsp:Policy> </sp:BootstrapPolicy> </wsp:Policy> </sp:SecureConversationToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:Wss11 Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Windows Client xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10 xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> <wsaw:UsingAddressing/> </wsp:All> </wsp:ExactlyOne> </wsp:Policy> After XML Policy saved, select WsHttp-Default \"Aggregate Policy\" Policies Organizational Polices folder Organization Tree. \"Aggregate Policy Details\" screen displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"WSSecurity Message Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" Message Policy) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. After steps complete WsHttp-Default \"Aggregate Policy\" include two policies shown below: Figure WSHttp-Default Aggregate Policy--via Organization Tree following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Attach Policy Service Endpoint screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy, click checkbox more policies attach current binding. example, select Aggregate Policy just created. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Testing Service physical service managed Agent WCF tested WCF Client m2application managed SOA Software WCF Delegate, reconfiguring either service client application not required both managed SOA Software. Note: service deployed IIS Server, confirm Basic Authentication enabled virtual directory hosts service. Basic Authentication not enabled, WCF service throw exception startup. testing service external tool not managed SOA Software Delegate, use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages, configurations relevant external tool. MESSAGE SECURITY WINDOWS CLIENT NET.TCP scenario default configuration netTcpBinding uses transport level security based Windows Stream Security (NTLM/Kerberos) protocol. Interoperability Windows Communication Foundation WCF Configuration <netTcpBinding> <binding name=\"Default\"/> </netTcpBinding> Policy Manager Configuration following procedure illustrates configure Message Security Windows Client NET.TCP. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Windows Client NET.TCP Step Procedure Organization Tree Policy Manager \"Management Console\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"Aggregate Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" NetTcp-Default) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen Aggregate Policy displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" Binding Policy) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. \"XML Policy\" portlet, click \"Modify.\" \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"NetTcpBinding_Default\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" <wsp:ExactlyOne> <wsp:All> <msb:BinaryEncoding xmlns:msb=\"http://schemas.microsoft.com/ws/06/2004/mspolicy/netbinary1\"/> <sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:TransportToken> <wsp:Policy> <msf:WindowsTransportSecurity xmlns:msf=\"http://schemas.microsoft.com/ws/2006/05/framing/policy\"> <msf:ProtectionLevel>EncryptAndSign</msf:ProtectionLevel> </msf:WindowsTransportSecurity> </wsp:Policy> </sp:TransportToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Windows Client NET.TCP </sp:Layout> </wsp:Policy> </sp:TransportBinding> <wsaw:UsingAddressing/> </wsp:All> </wsp:ExactlyOne> </wsp:Policy> following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy, click checkbox more policies attach current binding. example, select XML policy just created. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Note: Microsoft WCF netTcpBinding NetTcp-Default policy (defined above) require endpoint net.tcp transport address rather HTTPS address. NetTcp-Default policy attached service endpoint binding, endpoint address must conform net.tcp:// transport schema, otherwise create new binding net.tcp schema (transport=http://schemas.microsoft.com/soap/tcp). Testing Service physical service managed Agent WCF tested WCF client application managed SOA Software WCF Delegate, reconfiguring either service client application not required both managed SOA Software. Note: service deployed IIS Server, confirm Basic Authentication enabled virtual directory hosts service. Basic Authentication not enabled, WCF service throw exception startup. testing service external tool not managed SOA Software Delegate, use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages, configurations relevant external tool. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios MESSAGE SECURITY USER NAME CLIENT following illustration shows Windows Communication Foundation (WCF) service client secured using messagelevel security. service authenticated certificate. client authenticates using user name password (http://msdn.microsoft.com/enus/library/ms731058.aspx). Figure (WCF) Service Client Secured using Message-level Security Interoperability Windows Communication Foundation WCF Configuration <wsHttpBinding> <binding name=\"MessageSecurityWithUsernameClient\"> <security mode=\"Message\"> <message clientCredentialType=\"UserName\"/> </security> </binding> </wsHttpBinding> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Policy Manager Configuration following procedure illustrates configure Message Security User Name Client. Configure Message Security User Name Client Step Procedure Organization Tree Policy Manager \"Management Console\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"Aggregate Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MessageSecurityWithUsernameClient) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen Aggregate Policy displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MessageSecurityWithUsernameClient-Binding) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. \"XML Policy\" portlet, click \"Modify.\" \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"WSHttpBinding_MessageSecurityWithUsernameClient\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" <wsp:ExactlyOne> <wsp:All> <sp:SymmetricBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> <sp:SecureConversationToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\"> <wsp:Policy> <sp:RequireDerivedKeys/> <sp:BootstrapPolicy> <wsp:Policy> <sp:SignedParts> <sp:Body/> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security User Name Client <sp:Header Name=\"To\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"From\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"FaultTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"ReplyTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"MessageID\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"RelatesTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"Action\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> </sp:SignedParts> <sp:EncryptedParts> <sp:Body/> </sp:EncryptedParts> <sp:SymmetricBinding> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> <mssp:SslContextToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\" xmlns:mssp=\"http://schemas.microsoft.com/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:RequireDerivedKeys/> </wsp:Policy> </mssp:SslContextToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:SignedSupportingTokens> <wsp:Policy> <sp:UsernameToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\"> <wsp:Policy> <sp:WssUsernameToken10/> </wsp:Policy> </sp:UsernameToken> </wsp:Policy> </sp:SignedSupportingTokens> <sp:Wss11> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security User Name Client <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> </wsp:Policy> </sp:BootstrapPolicy> </wsp:Policy> </sp:SecureConversationToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:Wss11 xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10 xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> <wsaw:UsingAddressing/> </wsp:All> </wsp:ExactlyOne> </wsp:Policy> After XML Policy saved, select MessageSecurityWithUsernameClient \"Aggregate Policy\" Policies Organizational Polices folder Organization Tree. \"Aggregate Policy Details\" screen displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security User Name Client \"Type\" drop-down list box select \"WS-Security Message Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MessageSecurityWithUsernameClient-Message) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. After steps complete MessageSecurityWithUsernameClient\" Aggregate Policy\" include two policies shown below: Figure MessageSecurityWithUsernameClient--via Organization Tree following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy, click checkbox more policies attach current binding. example, select MessageSecurityWithUsernameClient Aggregate Policy. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Testing Service Use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages configurations relevant external tool. Confirm service configured service behavior defines service certificate, example: <behavior name=\"ServiceBehaviorWithCertificate\"> <serviceCredentials> <serviceCertificate findValue=\"0000000000000000000000 storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\" </serviceCredentials> </behavior> </serviceBehaviors> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios service managed Agent WCF, behavior automatically added service definition. TRANSPORT SECURITY WINDOWS AUTHENTICATION HTTPS scenario using wsHttpBinding secure client service applications deployed domain Kerberos controller HTTPS transport. Figure Transport Security Windows Authentication HTTPS Interoperability Windows Communication Foundation WCF Configuration <wsHttpBinding> <binding name=\"TransportSecurityWithWindowsAuthenticationOverHttps\"> <security mode=\"Transport\"> <transport clientCredentialType=\"Windows\" </security> </binding> <wsHttpBinding> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Policy Manager Configuration following procedure illustrates configure Transport Security Windows Authentication HTTPS. Configure Transport Security Windows Authentication HTTPS Step Procedure Organization Tree Policy Manager \"Management Console\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"Aggregate Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" TransportSecurityWithWindowsAuthenticationOverHttps) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen Aggregate Policy displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" Binding Policy) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. \"XML Policy\" portlet, click \"Modify.\" \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"WSHttpBinding_TransportSecurityWithWindowsAuthenticationOverHttps xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" <wsp:ExactlyOne> <wsp:All> <http:NegotiateAuthentication xmlns:http=\"http://schemas.microsoft.com/ws/06/2004/policy/http\"/> <sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:TransportToken> <wsp:Policy> <sp:HttpsToken RequireClientCertificate=\"false\"/> </wsp:Policy> </sp:TransportToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Transport Security Windows Authentication HTTPS </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> </wsp:Policy> </sp:TransportBinding> <wsaw:UsingAddressing/> </wsp:All> </wsp:ExactlyOne> </wsp:Policy> following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy click checkbox more policies attach current binding. example, select XML Policy just created. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Confirm service Access Point address defined HTTPS Transport Schema. not, click \"Access Points\" tab current service. Access Point line item select \"Modify Access Point\" \"Actions\" drop-down list box. \"Specify Access Point Details\" screen click Next. details page Access Point binding displays. Modify endpoint address click Finish. Testing Service physical service managed Agent WCF tested WCF client application managed SOA Software WCF Delegate, reconfiguring either service client application not required both managed SOA Software. Note: service deployed IIS Server, confirm Basic Authentication enabled virtual directory hosts service. Basic Authentication not enabled, WCF service throw exception startup. testing service external tool not managed SOA Software Delegate, use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages, configurations relevant external tool. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios MESSAGE SECURITY CERTIFICATE CLIENT scenario shows Windows Communication Foundation (WCF) client service secured using message security mode. Both client service authenticated certificates. Interoperability Windows Communication Foundation WCF Configuration <wsHttpBinding> <binding name=\"MutualCertificateBinding\"> <security mode=\"Message\"> <message clientCredentialType=\"Certificate\"/> </security> </binding> </wsHttpBinding> Policy Manager Configuration following procedure illustrates configure Message Security Certificate Client. Configure Message Security Certificate Client Step Procedure Organization Tree Policy Manager \"Management Console,\" select Organization Policies Folder Operational Tab. Click \"Add Policy.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"Aggregate Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MutualSecurityWithCertificateClient) optional \"Description.\" save policy click Finish Close. \"Policy Details\" screen Aggregate Policy displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"XML Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MutualSecurityWithCertificateClient-Binding) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"XML Policy\" displays. \"XML Policy\" portlet, click \"Modify.\" \"Modify XML Policy\" screen displays. \"XML Policy Content\" text box insert following XML Policy definition click Apply save policy definition: <wsp:Policy wsu:Id=\"WSHttpBinding_MutualCertificateBinding\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis- Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Certificate Client 200401-wss-wssecurity-utility-1.0.xsd\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\" <wsp:ExactlyOne> <wsp:All> <sp:SymmetricBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> <sp:SecureConversationToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\"> <wsp:Policy> <sp:RequireDerivedKeys/> <sp:BootstrapPolicy> <wsp:Policy> <sp:SignedParts> <sp:Body/> <sp:Header Name=\"To\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"From\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"FaultTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"ReplyTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"MessageID\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"RelatesTo\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> <sp:Header Name=\"Action\" Namespace=\"http://www.w3.org/2005/08/addressing\"/> </sp:SignedParts> <sp:EncryptedParts> <sp:Body/> </sp:EncryptedParts> <sp:SymmetricBinding> <wsp:Policy> <sp:ProtectionToken> <wsp:Policy> <mssp:SslContextToken sp:IncludeToken=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/Inc ludeToken/AlwaysToRecipient\" xmlns:mssp=\"http://schemas.microsoft.com/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:RequireDerivedKeys/> <mssp:RequireClientCertificate/> </wsp:Policy> </mssp:SslContextToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Certificate Client </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:Wss11> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> </wsp:Policy> </sp:BootstrapPolicy> </wsp:Policy> </sp:SecureConversationToken> </wsp:Policy> </sp:ProtectionToken> <sp:AlgorithmSuite> <wsp:Policy> <sp:Basic256/> </wsp:Policy> </sp:AlgorithmSuite> <sp:Layout> <wsp:Policy> <sp:Strict/> </wsp:Policy> </sp:Layout> <sp:IncludeTimestamp/> <sp:EncryptSignature/> <sp:OnlySignEntireHeadersAndBody/> </wsp:Policy> </sp:SymmetricBinding> <sp:Wss11 xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportRefKeyIdentifier/> <sp:MustSupportRefIssuerSerial/> <sp:MustSupportRefThumbprint/> <sp:MustSupportRefEncryptedKey/> </wsp:Policy> </sp:Wss11> <sp:Trust10 xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"> <wsp:Policy> <sp:MustSupportIssuedTokens/> <sp:RequireClientEntropy/> <sp:RequireServerEntropy/> </wsp:Policy> </sp:Trust10> <wsaw:UsingAddressing/> Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Configure Message Security Certificate Client </wsp:All> </wsp:ExactlyOne> </wsp:Policy> After XML Policy saved, select MutualSecurityWithCertificateClient \"Aggregate Policy\" Policies Organizational Polices folder Organization Tree. \"Aggregate Policy Details\" screen displays. \"Aggregate Policy\" portlet, click \"Add.\" \"Add Policy Wizard\" launches \"Select Policy Creation Option\" screen displays. Click \"Add Policy\" radio button. \"Type\" drop-down list box select \"WS-Security Message Policy.\" Click Next. \"Specify Policy Details\" screen enter policy \"Name\" MutualSecurityWithCertificateClient Policy) optional \"Description. save policy click Finish Close. \"Policy Details\" screen \"WSSecurity Message Policy\" displays. After steps complete MutualSecurityWithCertificateClient\" Aggregate Policy\" include two policies shown below: Figure MutualSecurityWithCertificateClient--via Organization Tree following procedure illustrates attach policy service endpoint. Attach Policy Service Endpoint Step Procedure attach new policy service endpoint, Organization Tree Policy Manager \"Management Console\" select service attach policy \"Service Details\" screen displays. Select \"Bindings\" tab. Click binding \"Qualified Name.\" \"Binding Details\" screen displays. \"Operational Policy Attachments\" portlet click \"Manage.\" \"Manage Operational Policy Attachments\" screen displays. Navigate tree hierarchy click checkbox more policies attach current binding. example, select XML Policy just created. Click Apply. selected policies added \"Manage Operational Policy Attachments\" screen. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Policy Manager Configurations WCF Common Security Scenarios Testing Service Use service metadata URL (WSDL URL link) Service Overview portlet generate proxy, sample messages, configurations relevant external tool. Confirm service configured service behavior defines service certificate, example: <behavior name=\"ServiceBehaviorWithCertificate\"> <serviceCredentials> <serviceCertificate findValue=\"0000000000000000000000 storeLocation=\"LocalMachine\" storeName=\"My\" x509FindType=\"FindByThumbprint\" </serviceCredentials> </behavior> </serviceBehaviors> service managed Agent WCF behavior automatically added service definition. CONFIGURING WCF SCENARIOS Policy Manager preconfigured support WCF use case scenarios. create base policy support WCF binding configurations, review WSDL documents produced service deployed desired WCF binding configuration. WCF service WSDL include maximum two types wsp:Policy root elements. root elements applied binding level other(s) binding message level. WCF service includes both policy element types, create Aggregate Policy Policy Manager \"Management Console\" add XML policy WS-Security Message Policy. WCF service includes wsp:Policy root element, create single XML Policy. Configure XML Policy content root wsp:Policy element found service WSDL applied binding level. apply new Aggregate Policy service binding Policy Manager Management Console. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Chapter Configuring WCF Policies Network Director OVERVIEW Microsoft WCF services accessed WCF client applications through SOA Software Network Director. Services exposed WCF client applications through Network Director called virtual services. section describes typical policy configurations supported Policy Manager WCF services virtualized through Network Director. virtual service created Policy Manager Management Console hosted registered Network Director containers, two distinct policies associated virtual service: Virtual Service Outbound Policy--Policy physical service endpoint virtual service calling (virtualizing). Virtual Service Inbound Policy--Policy Network Director virtual service endpoint. endpoint client applications using communicate virtual service. Policy Manager shipped series preconfigured sample policies used WCF services (Refer Managing WCF Services Policy Manager Security Policies chapter). policies considered context Network Director virtual services, applied both virtual service Outbound Inbound Policies. allows policy virtual service endpoint different policy physical service virtualized. Note: Each procedure assumes logged Policy Manager Management Console Policy Manager Workbench tab selected. CONFIGURING VIRTUAL SERVICE INBOUND POLICIES Policies: AnonymousForCertificate, MutualCertificateSignEncrypt, MutualCertificateSignOnly, MutualCertificateSymmetricBinding, UsernameForCertificate AnonymousForCertificate, MutualCertificateSignEncrypt, MutualCertificateSignOnly, MutualCertificateSymmetricBinding, UsernameForCertificate policies require virtual service configured certificate. configure virtual service certificate perform following steps: Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Certificate Step Procedure Organization Tree, click \"Services\" folder select virtual service. \"Service Details\" screen displays. \"Actions\" portlet, click \"Manage PKI Keys.\" \"Select Key Management Option\" screens displays. configure virtual service certificate following options used: Generate PKI Keys Certificate--Used generate new certificate. Import Certificate--Used import existing certificate. generate new certificate: Select \"Generate PKI Keys Certificate\" radio button click Next continue. Figure Manage PKI Keys (Service Identities)--Select Key Management Option (Generate PKI Keys Certificate) \"Generate PKI Keys Certificate\" screen displays. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Certificate Figure Manage PKI Keys (Service Identities)--Generate PKI Keys Certificate Select \"Key Length,\" specify \"Certificate Details\" \"Validity Period.\" generate certificate, click Finish. import existing certificate: Select \"Import PKI Keys Certificate\" radio button click Next continue. Figure Manage PKI Keys (Service Identities)--Select Key Management Option (Import PKI Keys Certificate) Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Certificate \"Import Private Key Certificate Keystore\" screen displays. Figure Manage PKI Keys (Service Identities)--Import Private Key Certificate Keystore Configure \"Keystore Details\" follows: Keystore Type--Click \"PKCS12\" radio button. Keystore Path--To specify file location Certificate, click \"Browse.\" \"Choose File\" dialog displays. Navigate directory location certificate stored, select certificate file click Open. \"Keystore Path\" populated directory location Certificate. Keystore Password--Enter \"Keystore Password\" certificate confirm Key Alias-- Click \"Load Aliases.\" \"Key Alias\" drop-down list box populated list Key Alias entries defined specified keystore file. Select Key Alias import drop-down list box. Enter Key Password confirm import Private Key Certificate, click Finish. certificate imported Policy Manager data repository. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Policies: CertificateOverTransport, KerberosOverTransport UsernameOverTransport CertificateOverTransport, KerberosOverTransport UsernameOverTransport policies require HTTPS transport endpoints) configured virtual service. CONFIGURING VIRTUAL SERVICE OUTBOUND POLICIES Policies: AnonymousForCertificate, MutualCertificateSignEncrypt, MutualCertificateSignOnly, MutualCertificateSymmetricBinding, UsernameForCertificate AnonymousForCertificate, MutualCertificateSignEncrypt, MutualCertificateSignOnly, MutualCertificateSymmetricBinding, UsernameForCertificate policies require physical service configured certificate. Use same procedures described above virtual services assign certificate physical service. cannot use Generate PKI Keys Certificate option exporting generated certificate along its private key not available. Policies: CertificateOverTransport, MutualCertificateSignEncrypt, MutualCertificateSignOnly MutualCertificateSymmetricBinding CertificateOverTransport, MutualCertificateSignEncrypt, MutualCertificateSignOnly MutualCertificateSymmetricBinding policies require virtual service configured outbound identity. Configure Virtual Service Outbound Policies (Specify Outbound Identities) Step Procedure Organization Tree, click \"Services\" folder select virtual service. \"Service Details\" screen displays. \"Actions\" portlet, click \"Manage Outbound Identities.\" \"Manage Outbound Identities Wizard\" launches \"Manage Outbound Identities\" screen displays. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Outbound Policies (Specify Outbound Identities) Figure Manage Outbound Identities Wizard--Manage Outbound Identities (Specify Outbound Identities selected) Perform following steps: Click \"Specify Outbound Identities\" radio button. \"Specify Outbound Identities\" section, click \"Add.\" \"Add Outbound Identity\" screen displays. Figure Manage Outbound Identities Wizard--Add Outbound Identity \"Source Subject Category\" section click \"Service\" radio button. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Outbound Policies (Specify Outbound Identities) \"Outbound Subject Category\" section click \"End-User\" radio button. Click Finish continue. \"Manage Outbound Identities\" screen displays. \"Specify Outbound Identities\" radio button selected. Click \"Use Service Identity Outbound HTTPS\" checkbox. Click Apply. \"Manage Outbound Identities Wizard\" closes saves identity configuration. Figure Manage Outbound Identities Wizard--Manage Outbound Identities (Specify Outbound Identities configured) Policies: UsernameForCertificate UsernameOverTransport UsernameForCertificate UsernameOverTransport policies require username token provided virtual service calls physical service. Network Director use username/password receives its inbound side its impersonated identity used its outbound side. Impersonation enabled selecting Use Incoming Identities Outbound Identities option Manage Outbound Identities screen. Configure Virtual Service Outbound Policies (Use Incoming Identities Outbound Identities) Step Procedure Organization Tree, click \"Services\" folder select virtual service. \"Service Details\" screen displays. \"Actions\" portlet, click \"Manage Outbound Identities.\" \"Manage Outbound Identities Wizard\" launches \"Manage Outbound Identities\" screen displays. Click \"Use Incoming Identities Outbound Identities\" radio button. Click Apply. Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide Chapter Configuring WCF Policies Network Director Configure Virtual Service Outbound Policies (Use Incoming Identities Outbound Identities) \"Manage Outbound Identities Wizard\" closes saves identity configuration. Figure Manage Outbound Identities Wizard--Manage Outbound Identities (Use Incoming Identities Outbound Identities selected) Copyright SOA Software, Inc. Managing WCF Services Policy Manager Guide"},{"title":"Getting Started with Community Manager","url":"/cm/getting-started.html","date":null,"type":"document","description":"The Getting Started Guide For CM","categories":[],"body":"Refer our Quick Start procedures App Developer API Provider running quickly. need become member, refer Basics section."},{"title":"SOA Software Community Manager","url":"/cm/index.html","date":null,"type":"document","description":"The Community Manager landing page","categories":[],"body":"Community Manager sophisticated developer community product help enterprises develop API portal attract, manage, support developers build Apps using APIs."},{"title":"Learning about Community Manager","url":"/cm/learning.html","date":null,"type":"document","description":"The Community Manager Learning Landing Page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"Access APIs","url":"/cm/learnmore/access_apis.htm","date":null,"type":"document","description":"Request API access for your app and manage API access requests.","categories":[],"body":"App Developer, connect App API Sandbox Production environment, test use Request API access app manage API access requests. Connect App API manage Connections. Access API documentation. Learn API versions access specific API version. Learn access API legal agreement."},{"title":"Community Manager API Access","url":"/cm/learnmore/access_apis_api_access.htm","date":null,"type":"document","description":"Learn how to use Community Manager to access APIs","categories":[],"body":"Set API access contracts app manage API access requests. After defined app platform chosen more APIs include functionality use app, next step connect app API requesting API access. Note: Before make call API must add credentials app. app credentials work? details. general points relating API access: homepage API connect click Access link top right corner, API Access Wizard launched. Depending options set specific API you're connecting API Access Wizard include three more following tabs: Depending API set access requested, status API access request following: API Access Request processed, \"API Access Request\" ticket posted App Board related app \"Pending\" status. ticket identified contract request icon. API visible APIs Used section Apps page. pending requests, Access Request posted APIs Apps Connections App APIs Connection pages status Pending Request. Upon approval API Provider, API Access Request status changes Activated. Access API granted API visible APIs Used section Apps Details page. manage API connections? live production environment? Contract Generation Approval: After API access request completed, contract post created request submitted Admin Team approval. points note: Notes: Back top requesting access API offers different licenses, you'll able choose license most suits needs part API Access Wizard. specific licenses offered each API determined API owner. Once you've selected license completed API access request, still modify request while it's pending approval. Once it's approved, can't modify request; you'd cancel contract request new Note: API offers licenses, need specify license before API access. license defines terms API access contract. API Access Wizard allows proceed without specifying license time, request not approved until you've chosen license. occurs, you'll able back modify pending request later. more information modifying pending request, edit license API access request? Back top make API access request, Licenses tab API Access Wizard includes summary licenses available. generally includes brief description each license. more detailed information, check documentation API. documentation include details different licenses available API terms each license. can't locate information need, contact API Administrator. Back top license updated, any pending approved API access requests automatically updated. Back top cancel API access request, follow instructions below. cancel API access request after it's submitted, post comment API Access Request Board item requesting API Administrator cancel request. more information, ask answer questions relating post ticket? Back top app developer change license specific API access request prior request being approved API Administrator. variety different scenarios require changing license. example, API offers different license better suits needs, modify request. Note: update license configuration any time prior API Access Request being approved API Administrator. Once API Access Request approved, Edit Scope function disabled. Back top disconnect app API consuming either Sandbox Production environment using Cancel Suspend functions. Apps, choose app, left pane click APIs. more information, update approved API access requests? Back top delete app version App Details page. Note: delete old version add new version, add new version first. delete version, app deleted. add new version, delete older version. Back top version app, delete entire app deleted. more version, delete app, must delete each version separately. Back top"},{"title":"Connections","url":"/cm/learnmore/access_apis_connections.htm","date":null,"type":"document","description":"Connect your app to an API and manage connections.","categories":[],"body":"Connect app API manage connections. Connection relationship subscription between Resources (API, App, Group, Contract, User) system. Connection Resource established, Connection appear appropriate collection point both Resources. Connections established sending Connection Request. Each Connection Request follows specific workflow process series management tools provided control lifecycle Connection. user creates Connection Resource, Resource administrators notified pending request, Connection Connections Collection Resource. Users Connection personal Connections Collection. example, API Access requested more Apps, entry API App appear API Details Apps App Details APIs pages. activities relate specific Users considered Resources), feed entries associated activities added Board Dashboard both API App owner. several types connections: Functions: Access link API Details Approvals: Approved API Admin via APIs Apps page. Functions: Follow App Details Follow API Details App Followers API Followers page displays list users currently following. Use Cancel remove follower. Back top APIs Apps page provides high level summary workflow status apps requested access current API using API Access function. Each listing includes: following table shows App Status App Management Tasks apps requested access current API using API Access function: Back top API Access Request submitted: Back top Existing API Access Requests cannot modified. following rules apply: Back top"},{"title":"API Documentation","url":"/cm/learnmore/access_apis_documentation.htm","date":null,"type":"document","description":"Access API documentation.","categories":[],"body":"Access API documentation. Each API includes set reference documentation available via APIs API Name Documents tab. specifics terms documentation offered vary API API. cases, certain APIs, portions restricted visibility. those cases, need invited visibility those properties associated documentation. However, many cases, API documentation publicly shared. locate using Search feature platform. typical API documentation set might include following sections: Back top Back top"},{"title":"Legal Agreements","url":"/cm/learnmore/access_apis_legal_agreements.htm","date":null,"type":"document","description":"Learn about API legal agreements and how to access them.","categories":[],"body":"Learn access API Legal Agreement. request access API, might required accept legal agreement such end-user license agreement, developer agreement, service legal agreement. Legal agreements typically pertain API usage requirements, limitations, liability, service level expectations. API provider responsible providing enforcing legal agreement. Back top access API legal agreement: Back top"},{"title":"API Versioning","url":"/cm/learnmore/access_apis_versioning.htm","date":null,"type":"document","description":"Learn about API versioning and how to access the right version for you.","categories":[],"body":"Learn access API version. API composed more versions accessible Version menu API Resource Title Bar. Note: API Administrators designated team members authorized create API version. Back top Details page each API includes Version drop-down menu, top right, allows view API versions. After selecting API version, view API documentation configuration details version. components APIs section? Back top you've chosen API version use, API version page, explained view API version? above. click Access top right page start API Access Wizard. full instructions initiating API access request, using API Access Wizard, refer API access app? Back top"},{"title":"App Security","url":"/cm/learnmore/app_security.htm","date":null,"type":"document","description":"Learn about how to set up and manage app security.","categories":[],"body":"default authentication SOA Software Open custom authentication mechanism, Shared Secret authentication. It's important set authentication messages app sends API you’re using. Authentication protects sender, receiver, message itself. It’s important security strong enough third party couldn’t pose sender, pose receiver, and/or view change message content. Authentication security particularly important money sensitive personally identifiable information involved. Once app registered, it's important set authentication app use API process messages securely. SOA Software Open, part setting app, you’ll need choose security mechanism you’ll use authentication messages. two choices: Note: topic provides information setting authentication any API hosted SOA Software Open. implementation information examples specific API you're using, refer documentation API. Both approaches very secure. Both use secret key combined hashing encoding, both sent via HTTPS. Shared Secret approach, default, easier implement since don't generate public private keys. PKI approach little more secure, although both approaches very secure. PKI approach more complex implement. Back top register app, AppID Shared Secret automatically generated. Shared Secret binary hashed value, generated secure environment SOA Software Open known SOA Software Open. Security Credentials section App Details screen you'll Shared Secret option default security mechanism. Shared Secret approach follows WS-Security digest authentication mechanism. Shared Secret, generated SOA Software Open, 40-character alphanumeric value acts key. example shown below. combine Shared Secret two values, hash result using SHA-1 secure hashing algorithm, encode hashed value using Base64 encoding scheme. URL-encode result, isn't required. result sent Authorization message header value atmosphere_secret_digest parameter. API verifies each incoming request using Shared Secret. choose Shared Secret security mechanism, Authorization header must include values shown below. More information shared secret approach given sections: process flow diagram below shows overview API request authentication shared secret security mechanism. Below example Authorization header app authentication parameters, use shared secret approach. sequence parameters isn't significant, parameters must present valid values. Note: value realm determined www-Authenticate header. Make sure value set Authorization: SOA Software Open header matches value received attribute server. nonce random string uniquely generated each request. nonce allows API providers verify request never made before. nonce sent message header both Shared Secret PKI security mechanisms. Shared Secret mechanism, same nonce value sent message header used creating Secret Digest. way create nonce depend development environment. Most programming languages include method creating nonce. Below example generating nonce value Java: timestamp request sent message header, both Shared Secret PKI security mechanisms. Shared Secret mechanism used creating Secret Digest. timestamp must Unix epoch time, expressed number milliseconds since January GMT. timestamp must positive integer must greater equal timestamp used previous requests. most implementations, timestamp taken host server. It's important timestamp message accurate; timestamp message might rejected. more information Unix epoch time, examples implementation timestamp different programming languages, http://www.epochconverter.com (scroll down). SHA-1 cryptographic hash function, broadly used trusted. hash value SHA-1, hash function returns 160-bit string. message digest. value hashed sent message; receipt point, value hashed again, two hash values compared. two hash values match, secure, reliable indication message hasn't changed; message receipt point accurate duplication message send point. you're using Shared Secret security mechanism, concatenate nonce, timestamp, Shared Secret, hash combined value using SHA-1. encode result, send message header value atmosphere_secret_digest parameter. formula computing hash Below example hashed base string: concatenate nonce, timestamp, app secret base string hashed, you'll need make sure concatenated value byte value before hashing. hashing algorithm requires input parameter bytes. Depending app, might need use encoding byte value. use UTF-8 encoding. Below example using Java. Note: example above part larger Java sample specific API. more information, refer implementation examples API you're using. Base64 encoding scheme converts binary data ASCII string. you're using Shared Secret security mechanism, must encode binary hash value created using SHA-1 secure hash algorithm. Encoding turns ASCII string format. It's common practice encode data make sure remains intact without modification during transport HTTPS. Once hash encoded, next step send encoded value message header value atmosphere_secret_digest parameter. there's problem HTTPS header, might error messages shown below. any reason know suspect app's Shared Secret might compromised, must generate new Shared Secret replace old generate new Shared Secret Community Platform Note: might take five minutes new key take effect. During time, messages sent using new key fail. It's best wait five minutes before sending messages new key. Below example create atmosphere_secret_digest value Java. Back top register app SOA Software Open, Security Credentials section App Details you'll Shared Secret option default. use Public Key Infrastructure (PKI) secure message signing, click button choose Public Key Integration. You'll need public/private key pair upload public key SOA Software Open, explained later document. custom app code sign API requests using private key. API verifies each incoming request using public key. More information authenticating PKI given sections: process flow diagram below shows overview API request authentication PKI. use OpenSSL open source product produce public/private key pair. more information OpenSSL, refer www.openssl.org. developing application using Microsoft Windows adaptation OpenSSL Windows platform following location: http://code.google.com/p/openssl-for-windows/downloads/list. Note: Anything empty bracket set not required. Below example might command-line window. process creates public/private key pair c:\\openssl folder. key pair includes files shown below. Make sure save copy private key safe place. lose key need generate new key pair. sign request using private key. more information, Composing Signature. Important: Upload file csr.csr SOA Software Open portal. Java developer worked cryptography Java, might familiar concept keystore. keystore file used store deploy certificates private keys single package. create keystore using OpenSSL explained above. However, Java developer, probably far more convenient use keytool, key certificate management utility that's distributed part Java Development Kit (JDK). use keytool create both keystore CSR associated private key keystore. Once you've created CSR, upload SOA Software Open just any CSR. Java code reads private key, used signing base string used API request headers, keystore file create. Since keytool utility part JDK, don't download anything create Java keystore. Just follow steps below. Note: procedure below assumes JDK bin directory Windows system path. keytool -genkey -alias <keystorealias> -keyalg RSA -keystore <keystore_filename>.p12 -storetype PKCS12 -keypass <password> -keysize keytool -certreq -alias <keystorealias> -keystore <keystore_filename>.p12 -file <csr_filename>.csr -storetype PKCS12 illustration below shows steps create keystore called keystore.p12 alias mykeystore password changeme. illustration below shows create CSR called csr.csr keystore.p12. Note: implementation examples, check authentication documentation specific API you're using. IMPORTANT Upload file CSR.csr SOA Software Open portal. signature process follows similar approach OAuth standard. platform uses Extension header support its app authentication scheme. Extension header named Atmosphere (not case-sensitive). uses standard Authorization header WWW-Authenticate response header pass app-related authentication parameters. query string used pass authentication data cases app cannot directly manipulate headers. API providers indicate support extension returning SOA Software Open WWW-Authenticate header response app requests protected resources. Below example: Apps send credentials Authorization header. choose Public Key Integration approach app security, Authorization header must include values shown below. Important: sequence header attributes critical must exactly match order below. Below example Authorization header app authentication parameters. Make sure list parameters sequence shown below. Note: value realm determined www-Authenticate header. Make sure value set Authorization: SOA Software Open header matches value received attribute server. Below example Authorization header API doesn't require authentication: Note: case client, such Ajax client browser Android app, cannot set Authorization header, set required SOA Software Open authorization header parameters query string. several steps composing signature: first step composing digital signature create content. Once that's done, data signed using signature algorithm. Note: atmosphere_signature parameter must excluded Signature Base String. Below example Signature Base String. Once Signature Base String constructed, next step signing: Back top example below shows same message header created each approach. parameters common both approaches: example below, message header uses Shared Secret approach, Shared Secret value 1008877afabf32efb31f9c974dbeaa688bed0769. atmosphere_secret_digest value hashed value nonce timestamp shared secret. example below, message header uses PKI approach. atmosphere-signature value signed value signature base string signature base string). Back top"},{"title":"Basics","url":"/cm/learnmore/basics.htm","date":null,"type":"document","description":"Learn about platform basics such as signup, account management, navigating, and getting support.","categories":[],"body":"Become member platform, manage user account, obtain support, learn key terminology navigate site. Account signup available options. Manage platform user account, configure notifications, password support. Navigation elements used platform, App API component overview, platform search option. Platform browser support support contact information. Key terminology used platform."},{"title":"Account Management","url":"/cm/learnmore/basics_account_management.htm","date":null,"type":"document","description":"Manage your platform user account, configure notifications, and get password support.","categories":[],"body":"Manage platform user account, configure notifications, password support. After create new account, profile created. top navigation includes Profile link view edit account User Details User Settings pages left navigation. back top password used along email address sign change user account password User Settings page. back top User Name displays posts, tickets, notifications. initially sign specify User Name Personal Info page. update User Name, change User Details page. back top Notifications sent contact email address. send notifications different email address, change contact email address User Settings page. back top user profile pic displays user name Logged User area, App Board, API Board, Dashboard posts. upload profile pic image site via Profile Details page. Profile pic upload options include performing direct file upload uploading file Gravatar. supported file requirements follows: back top configure account receive email notifications certain activities occur. Notifications updated User Settings page. default state notifications enabled. back top optionally upload icon uniquely identify objects APIs, Apps, Teams, Groups, APIs, Apps). action performed Icon section adding editing objects. back top forget password, submit password reset request. back top log using Logout link top navigation. back top"},{"title":"Glossary of Terms","url":"/cm/learnmore/basics_glossary.htm","date":null,"type":"document","description":"Definitions for some of the terms used on the platform.","categories":[],"body":"Key terminology used platform. back top"},{"title":"Navigation","url":"/cm/learnmore/basics_navigation.htm","date":null,"type":"document","description":"Information about navigation elements used in the platform, App and API component overview, and platform search option.","categories":[],"body":"Navigation elements used platform, App API component overview, platform search option. following table provides brief summary navigation elements. Pre-configured search options include APIs, Highest Rated, Most Followers, Recently Added, Last Updated, Most Connections, Most Volume. back top Apps interface provides functionality allows define manage apps, APIs use, app development team whom collaborate. monitor app performance data during testing production monitor app performance?). Apps section organized following functional areas: Apps Page Apps page displays summary listing apps defined currently following. After logged page accessible clicking Apps Navigation Icon. Summary information presented includes App Name, Description, link Details page, incremental counters Followers APIs Connected, Average Rating (based Peer Reviews). App Details Details page provides following summary information functionality: App Board Board page provides collaboration tool includes both discussion board ticket management system. Developers Team Members access privileges APIs Apps collaborate posting discussion topics, raise issues specific API App creating ticket. Comments posted board items tickets. Dev Console Dev Console page provides test tool sending sample requests. Monitor Monitor page provides API performance health monitoring traffic, events, alerts comments, tickets, etc.) relating consumers API. Chart presentations include Chart Usage Log views. monitor app performance? Team Team page includes Invite function allows send invitations individuals join development team current app. Existing team members displayed summary listing. Each summary listing includes bio Team Member Contact email address. APIs APIs page displays listing APIs current App requested access Sandbox Production columns display status Sandbox Production access requests. Followers Followers page allows users subscribe apps interested clicking Follow button. Subscribing app allows users receive news updates relating app personal Dashboard. back top APIs interface provides functionality allows developers view available APIs configuration details, view download API documentation. New potential members review existing APIs read documentation determine APIs include functionality included app. APIs section organized following functional areas: API Details API Name selected, Details page displays presents feature overview documentation selected API. select different API versions using Version menu. endpoints available API presented Sandbox, Production). Each API includes Peer Reviews view, Similar APIs section provides listing APIs include similar functionality. API Board API Board collaboration tool includes both discussion board ticket management system. API Administrators Developers Team Members access privileges APIs Apps collaborate posting discussion topics, raise issues specific API App creating ticket, post alerts API news, maintenance announcements, etc.). manage display API activity posted Dashboard newsfeed using Follow Unfollow functions. Documents Documentation page displays reference documentation current API. Each API includes API Overview topics each API Method. typical organization might include Uses Cases, URI, Syntax, Sample Request, Request Parameters, Response Parameters, Sample Response, Error Codes, Related Topics sections. API Providers utilize File Manager upload manage documentation. Content Development Guidelines details. Legals Legal page provides listing legal agreements associated current API. agreements typically pertain API usage requirements, limitations, liability, service level expectations. API Provider responsible providing enforcing legal agreements. users visibility rights API view legal agreements. API Providers upload manage legal agreements using File Manager. Groups Groups page provides method creating common interest groups around APIs defined private visibility. Group accounts created, member invitations sent managed API Provider assigned API Administrator. API Administrators create Private API Groups. Admins Admins page provides functionality allows API Providers send invitations individuals grant administration privileges API. API administrators viewed managed summary listing. Apps Apps page allows API Providers designated API Administrators manage approval access requests API. Followers Followers page provides list members currently following activity selected API. back top full-text search capability allows members visitors target information APIs, Board Discussions, Alerts. following entities searchable: perform search: Search Filter: APIs, APIs, Apps Function: APIs, APIs, Apps Function: APIs, APIs back top"},{"title":"Sign Up","url":"/cm/learnmore/basics_signup.htm","date":null,"type":"document","description":"Sign up for a platform account and learn about account privileges.","categories":[],"body":"Sign platform account learn account privileges. need sign account view our API documentation discussion boards. view trouble tickets posted members our community. However, must sign account access our APIs development production purposes. account, establish project, invite others collaborate test application using our Dev Console, receive permission commercially publish app integrated our APIs. back top Sign process new account involves specifying standard user profile account information. sign using login favorite social media providers Facebook, Google). sign using social media provider back top sign using favorite social media provider login perform initial sign performing future logins. Supported social media providers include Facebook Google. back top signed account privileges create application utilize full spectrum development, application management, collaboration features. back top top navigation includes Login Sign-up section used log site. back top platform Terms Conditions reviewed agreed initially signed platform change between logins, required review agree new copy log Back top"},{"title":"Support","url":"/cm/learnmore/basics_support.htm","date":null,"type":"document","description":"Platform browser support and support contact information.","categories":[],"body":"Platform browser support support contact information. platform supports following web browsers: Note: currently using unsupported browser, recommended upgrade browser supported versions ensure optimum performance platform. back top following approaches used resolve technical questions: back top"},{"title":"Business Administration","url":"/cm/learnmore/business_administration.htm","date":null,"type":"document","description":"Information for business administrators.","categories":[],"body":"Business Administrators: learn invite others Business Admins define licenses scopes comprise API Contracts used restrict visibility monitor service levels API operations apps connected API. Manage Business Administrators platform. Configure manage scopes licenses used define API access contracts. Add/manage license definitions assign API."},{"title":"Business Admins","url":"/cm/learnmore/business_administration_business_adm.htm","date":null,"type":"document","description":"Manage business administrators for the platform.","categories":[],"body":"Manage Business Administrators platform. Business entity owns publishes APIs. business generally includes multiple APIs, Developers, Apps. platform represents Business. Business Visibility Business defined having public private search visibility. visibility setting determine whether business appears search results whether users summary information Business, described below. Feed Detail View Business Connections Any above Connections configured Back top Business Administrator Full Control manage following platform objects: Privileges platform objects managed Policy Manager instance Tenant installed. Full Control privilege supports following actions: Note: Site Administrators same privileges Business Administrator. example, Site Administrator invite another user Business Administrator. However, Site Administrators not rights Business Administrator, such privileges add, edit, delete apps APIs business. Back top Site Administration quick filter launches Site Administration section. Site Administration Business Adm. section, authorized Business Administrators invite others join Business Administrator team. Invite Business Administrators Invite More function allows send invitations individuals grant Business Administration privileges View Business Administrators Business Administrator invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Business Admins Summary. Manage Administrators Business Administrator remove Business Administrator listing. Back top Site Administration Business Adm. page includes business administrator invitation function allows Site Administrators send invitations individuals grant business administration privileges current platform deployment. Back top already received Business Administrator invitation not currently platform member, must sign platform using email address invitation issued order accept invitation. Currently platform members invited Business Administrators. Basics more information. Back top receive invitation via email Business Administrator platform deployment accept reject invitation. Back top Once invitation sent individual Business Administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove Business Administrator Business Adm page clicking Remove. remove Business Administrator assigned platform deployment? Back top Any Business Administrator remove another Business Administrator platform deployment. Back top"},{"title":"Community Manager License Administration","url":"/cm/learnmore/business_administration_licenses.htm","date":null,"type":"document","description":"Business sdministrator license configuration in Community Manager.","categories":[],"body":"Information setting components Licenses feature, adding managing licenses, license terms, scopes, assigning licenses APIs. Note: overview Licenses feature, implementation scenarios examples, Licenses: Feature Overview. license tailored API access package designed Business Admin/API Admin offered app developer. license includes: API visibility controlled license level Scope level. means license feature used not package API purposes monetization, development, any reason, control visibility members designated user groups portions API associated documentation). API access granted license level. Defining License: Business Administrators define license Administration Licenses section using +Add License function. prerequisite defining license must scopes pre-defined (via Administration Scopes section) scopes component license definition. points note defining license: Back top license term building block license. license made more license terms plus, optionally, more legal agreements. defining license, define more license terms. Each license term unique license part license terms not exist separately licenses. license term includes two components: Each license term includes more scopes plus, optionally, quality service limits/policies applied scopes license term. Scopes apply both visibility access; policies apply access. any impact, license term must include least scope. Back top following visibility rules apply license: Back top scope bridge between top level hierarchy, license, bottom level, operation. business level, Business Admin defines scope name basic attributes. API level, API Admin assigns specific operations more scopes API. operations included any license scope assigned app developer never sees scopes; developer offered more licenses offerings defined API. However, scopes building block licenses. Operations assigned scopes; scopes QoS policies assigned license terms; license terms legal agreements assigned licenses. Back top configure scope using Add Scope function Administration Scopes section platform. things note scopes: Note: Scopes configured Business Administrators. Back top modify scope using Edit function Administration Scopes section platform. Note: scope active cannot modify Back top configure license using Add License function Administration Licenses section platform: Note: Licenses configured Business Administrators. Specify license name. license name display API Access Wizard app requesting access API. Specify short description license. app developer sees runtime, shown below. Select Visibility option. following rules apply: documentation downloadable content public API's licenses, scopes, operations designated visibility public, those resources visible users. API itself private scope public, resources visible users invited API. app developer’s visibility scope API version includes private license, developer option choose license requesting API access. license private, users license visibility scope access API documentation/downloadable files mapped license. Note: API admin must make sure documentation appropriately tagged. not, not visible authorized individuals. information tagging API documentation, control visibility API documentation files? Once license defined, API Admin Business Admin apply license API. steps Once those steps complete, license available app developers making API access request. Back top modify license, deactivated, using Edit function Administration License section platform. Note: license active cannot modify Back top deactivate license definition License Definitions screen using Deactivate function. Note following points: Back top delete license License Definitions screen using Delete function: Back top Licenses feature uses policies component building license definition; policies optional component license terms. However, licenses defined outside platform, Policy Manager. soon policy defined Policy Manager, available selection click Add License Administration Licenses) add license term license. create licenses policies not set yet, ahead set licenses without policies, back add policies they're available. Back top modify policy changing policy definition Policy Manager. Back top delete policy, must done Policy Manager, policies set Note delete policy not use. cannot delete policy Back top API Admin Business Admin links license definitions API completing following steps: Once those steps complete, any licenses include those scopes license definition presented app developer selection app developer initiates API access request. Back top"},{"title":"Scopes","url":"/cm/learnmore/business_administration_scopes.htm","date":null,"type":"document","description":"Configure and manage scopes as part of setting up licenses for API access.","categories":[],"body":"Configure manage scopes part setting licenses API access. scope entity define represent any subdivision API might separate control platform, Business Admin define set scopes define licenses include scopes building blocks. license made more license terms plus legal agreements; license term made more scopes plus Quality Service policies. API admin map scopes actual operations, completing license definition specific API. Visibility: manage API visibility using scopes. example, define scope private. Whether API public private, operations part private scope seen individual member group specifically invited visibility license includes scope. Granularity: define scope operations use multiple scopes. example, scope Read-Only operations second scope operations. define public scope operations except two three beta, create new private scope, Beta, new ones. invite select users access beta operations, while main body users unaware beta testing simply not beta operations. Scopes tool enhance manageability API allowing break API smaller units shared monetized different ways. Hierarchy: Scopes configured hierarchy, include sub-scopes multiple levels: Management: points note regard managing scopes: Configuration: define scopes Administration Scopes section reference those scopes defining License. Back top following visibility rules apply scope: Back top configure scope Administration Scopes section platform. points note: Note: Scopes configured Business Administrators Specify Scope Name. Note Scope Name display use Select Scope function using +Add License Administration License section. Select visibility option. following rules apply: Select Sandbox Access Option: Select Production Access Option: Back top After you've saved scope, add child scope. create multiple levels scope hierarchy. Back top move scope anywhere scope hierarchy selecting scope dragging new position list. move scope higher lower level hierarchy. Back top license logical grouping license terms plus optional end-user legal agreements. Each license term include more scopes more Quality Service (QoS) policies. Licenses defined Business Admin. API level, Licenses feature used, API operations assigned scopes. Scopes link between API license. app developer requests access API part API Access Request process (via Access API Details page), developer sees choice more licenses. scopes not seen developer, part license definition. Note: License scope referenced License updated, any pending approved API Access Requests automatically updated. more information, API Access section. Back top modify parent child scope long isn't use API access contract. Back top modify parent child scope long isn't use API access contract. delete scope children, child scopes deleted. Back top"},{"title":"Collaborate","url":"/cm/learnmore/collaborate.htm","date":null,"type":"document","description":"Invite developers to your app team, discuss topics related to API development, and report issues.","categories":[],"body":"Invite developers app team, discuss topics related API development, report issues. Create manage app development team. Discuss APIs apps, write reviews, manage development cycle issues. Discuss app projects report development cycle issues. Discuss APIs report development cycle issues. Create manage API group. Respond manage posts tickets."},{"title":"API Board","url":"/cm/learnmore/collaborate_api_board.htm","date":null,"type":"document","description":"Discuss APIs and report development cycle issues.","categories":[],"body":"Discuss APIs report development cycle issues. use API Board create discussion specific API. Common discussion topics include questions, suggestions, feature requests, announcements, update information current API. discussion pertains API version selected Current Version drop-down menu Resource Title Bar. create discussion: Back top use API Board submit trouble tickets associated more APIs. Back top following tables illustrate sort controls default, Post, Ticket, Alert views API Board. API Sort Controls View) API Sort Controls (Discussion View) API Sort Controls (Ticket View) API Sort Controls (Alert View) Back top API Board allows delete discussion, ticket, alert post types. delete post comments entered site users deleted. delete posts personally added. Back top"},{"title":"App Board","url":"/cm/learnmore/collaborate_app_board.htm","date":null,"type":"document","description":"Discuss app projects and report development cycle issues.","categories":[],"body":"Discuss App projects report development cycle issues. use App Board create discussion application project team members. team members access Board. Back top use App Board API Board submit trouble tickets directly Admin Team. Please note: submitted tickets visible API Board App Board. Back top following tables illustrate sort controls default, Post, Ticket views App Board. App Sort Controls View) App Sort Controls (Discussion View) App Sort Controls (Ticket View) Back top App Board allows delete discussion ticket post types. delete post comments entered site users deleted. delete posts personally added. Back top"},{"title":"Collaboration","url":"/cm/learnmore/collaborate_collaboration.htm","date":null,"type":"document","description":"Discuss APIs and apps, write reviews, and manage development cycle issues.","categories":[],"body":"Discuss APIs Apps, write reviews, manage development cycle issues. platform includes API Board App Board used promote APIs Apps, manage issues associated development cycle, enhance visibility topics relating specific APIs Apps. API App Board API App resources include Board includes both topic board ticket management system. Back top app level Apps App Board), collaboration made possible inviting individuals join application development team. Team members create private discussions team members pertaining Apps APIs App consuming, create tickets pertaining issues associated application development. API level Apps Board), API developers App Team members post discussions pertaining specific API, create tickets pertaining issues associated API operation. Back top following table illustrates relationship each newsfeed type each Board, shows newsfeed types display Dashboard. Back top Each API includes rating review information submitted platform community members. information available API Details page follows: Back top rate write review API API Details page follows: rate API: write review API: Back top"},{"title":"API Groups","url":"/cm/learnmore/collaborate_groups.htm","date":null,"type":"document","description":"Create and manage API groups.","categories":[],"body":"Create manage API groups. Group functionality provides method creating common interest groups around specific APIs. creator group Group Administrator. Member invitations sent managed group Administrator designated group leaders. Group Administrators designated group leaders create Groups. After group established members accepted invitations, members promoted leader status. leader indicated group member account orange Leader status. Leaders send additional invitations manage memberships specific group. Group members collaborate group Board visible group members. Group members obtain view-only summary members group Group Details page. Group members provide feedback group providing Peer Rating uses star rating system record positive feedback, Peer Review write post review group. platform supports both Independent Private API Groups. types groups does platform support? Independent Private API Groups different access methods functionality essentially same (except noted). access Independent Private API Groups? access methods. Back top platform supports following group types: Back top APIs section includes Groups page allows API Administrators create Private API Groups send invitations developers. Group members promoted Leader status send invitations manage memberships specific group. Create Group API Administrators create group current API send invitations developers join group. first time select APIs Visibility Groups, Groups page displays API does not any groups\" message along Create Group button. After creating group, select Invite More send invitations developers join API group. Edit Group Info Edit Group Info function allows edit Group Name, Description, Federation Member. Invite More Invite More function allows API Administrators send invitations individuals part Private API Group. Note invitees must platform members except invitation. After sending invitation, invitation email issued. recipient already platform member), log platform accept invitation via Dashboard. recipient not currently platform member, must sign log accept invitation via Dashboard. Manage After sending first group invitation: Group Board Group Board provides collaboration tool group members discuss key topics exchange ideas. Group Board available through independent group interface Add New Group Plus menu). Followers Followers page allows users subscribe groups interested clicking Follow button. Subscribing group allows users receive news updates relating group personal Dashboard. Back top Create Group: access Independent Group: access Private API Group: Back top add group: Back top Group Roles: group function supports following roles, functions, visibility. Back top API Administrators make group members administrators assigning Leader role. Leader send manage personal invitees. group member initially added Member Leader identifier white. Back top Invite Members: assigned Leader role Admin Team, use Invite function send invitations developers individuals invite group. not currently assigned Leader role, contact Admin Team sending email form provided Support page. After Group Administrator adds group using Create Group function APIs Visibility Groups Groups Members, Invite function displays next Group Name Members page. Group Administrators Leaders use Invite function invite individuals group. Back top invite individuals not platform members Independent Private API groups, non-members must sign before accept group request via personal Dashboard page. Back top approve Independent Private API invitation approving notification personal Dashboard. Back top decline group invitation selecting Decline option notification personal Dashboard. Back top assigned Leader role Group Administrator, use Invite function send invitations developers. not currently assigned Leader role, request role change submitting trouble ticket Group Administrator via Groups Board API Board. Back top Group Maintenance: Back top API Administrators remove group member. Leaders remove group members personally invited. Back top certain situations may become necessary resend group invitation. Back top delete group Groups APIs Visibility Groups section follows: Back top Each Group includes rating review information submitted platform community members. information available Group Details page follows: Back top rate write review group Group Details page follows: Back top you've added group review change content, edit review Group Details page follows: edit group review: Back top delete group review Group Details page follows: delete group review: Back top"},{"title":"Post/Ticket Management","url":"/cm/learnmore/collaborate_post_ticket_management.htm","date":null,"type":"document","description":"Respond to and manage posts or tickets.","categories":[],"body":"Respond manage posts tickets. add comments posts tickets Dashboard, API Board, App Board. view listing most marked comments: Back top identify discussion topics associated comments positive feedback using Mark function. Back top Each ticket includes Update Priority function allows update ticket priority through different phases problem troubleshooting process. creator ticket update priority. update priority ticket Back top Each ticket includes Resolve function allows specify resolution close ticket. creator ticket, app team member, Business Admin resolve ticket. Back top reason becomes necessary open resolved ticket, clicking Reopen button. Back top close ticket, clicking Close button. creator ticket, app team member, Business Admin close ticket. Back top"},{"title":"App Team Management","url":"/cm/learnmore/collaborate_team_management.htm","date":null,"type":"document","description":"Create and manage an app development team.","categories":[],"body":"Create manage app development team. Apps includes Team page allows create application development team sending invitations members. Team members viewed managed summary listing. Invite Team Members Invite More function allows send invitations individuals part application development team. View Team Members team member invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Team Summary. Manage Team Members Team members remove Team Member listing. Back top Apps Team page includes team member invitation function allows send invitations individuals part application development team. Note: create app, first team member. invite additional team members using Invite More function. Invitees not members must sign platform before accepting team invitation. Back top Currently members invited development team. Basics more information. Back top receive invitation via email join platform development team accept reject invitation. Back top Any team member remove team members development team. Back top Once team invitation sent, invitation itself cannot revoked. member choose accept decline invitation. choose accept invitation, remove team member development team Apps Team page clicking Remove. remove team member development team? Back top"},{"title":"Content Development Guidelines","url":"/cm/learnmore/content_guidelines.htm","date":null,"type":"document","description":"Guidelines that API providers can use to manage API content such as API documentation and legal agreements.","categories":[],"body":"section provides guidelines API providers use manage API content such API documentation legal agreements. After adding API, add documentation API API Documents section using more following methods: Back top Yes, HTML files must saved UNIX code format. requirement ensure optimum compatibility across operating systems. method use verify files correct format select View Document Properties TextPad. \"Code set\" UTF-8, \"File type\" UNIX, code format file saved correct. Note must add following meta data tag <head> tag indicate file code set UTF-8: Back top File Explorer simple file management tool allows upload documentation source files various parts platform File Explorer includes following functionality: Back top Swagger Wordnic (http://swagger.wordnik.com/) specification complete framework implementation describing, producing, consuming, visualizing RESTful web services. produces dynamically generated documentation includes methods, parameters models. platform includes implementation Swagger works conjunction Add New API Wizard. define API, structure dynamically generated added predefined Swagger template. documentation-ready structure available API Documents section add title, description, implementation notes, parameter information. documentation content stored resources.swg file. Using File Explorer add file table contents make default display document click API Documents menu. add Swagger document URL HTML documentation. Back top API documentation legal content platform uploaded managed Site Administrators, API Providers, designated Administrators API. Back top platform, editing API Legal Agreement content limited Development document content must performed outside platform, exception Swagger API documentation entered directly templates API Documents section. Back top platform supports content pages written HTML. must create API legal documents external HTML authoring tool upload documentation using File Explorer. Back top Swagger documentation includes series page controls displaying navigating through method documentation follows: Swagger Controls: Editing Options: add edit following areas Swagger documentation. First navigate API Documents page includes Swagger perform desired step. Back top Back top upload document artifact API Documents section using File Manager, toc.apiversion file created (format: toc.apiversionXXXXX.<productname>.json). Information document upload, toc display name, default toc file stored file. Using file editor, manually update \"defaultFile\":\"<filename>.html\" parameter file set default HTML document. currently HTML document loaded switch back Swagger delete parameter reset default document back Swagger. Back top Back top Back top Back top Back top Back top Following guidelines below help ensure fileset consistent structure, clean, well-formed HTML look correct viewed under varying circumstances such different browsers search results. Bear mind points: Back top might find default styles platform work fine need. need custom styles, create upload CSS file. add edit CSS file same way HTML file. Note: custom CSS file documentation, make sure it’s stored \\userdocs\\style subdirectory. create directory via File Explorer doesn’t already exist. CSS filename must not include illegal characters, must extension .CSS stored /css subfolder. Click download sample API documentation style sheet. styles part document.css style sheet located userdocs\\style directory. develop API documentation using styles, choose update styles, make sure update document.css file before uploading documentation site. following paths illustrate location \\style directory relative \\learnmore directory. current document.css file stored. Based requirements choose store \\css different location same directory files \\css folder \\Documents directory). Back top SOA Software provides pre-defined Swagger style sheet internal product applied dynamically generated Swagger documentation structures. Back top Legal agreements use platform default style sheets. Active legal agreements display API Access Wizard user requests access API. ensure legal agreement displays properly wizard, download legal agreement sample file use template structure legal agreement HTML. Click download sample legal agreement file. Back top API documentation content defined using standard HTML CSS files. choosing styles, make sure you’re aware any corporate team guidelines, consistent across file set users same styles typographical conventions read content. Back top formatted HTML content, CSS files control visual display, upload types content link HTML files. example, use following: extra property after filename, target=\"_blank\", tells browser open file new window instead displaying content current window platform Back top organize API legal documentation files: Back top upload zip file containers documentation using File Explorer. upload zip file using File Explorer: Back top Yes. already website established API and/or documentation, upload file includes introductory text includes link website. example: Example HTML: Note: linking external site, include target=”_blank” HTML file open external site new window. upload reference file upload API documentation? Back top API Documents section includes interface allows add maintain API documentation. upload documentation using File Explorer. upload documentation file file basis, upload zip file. upload API content via File Explorer: Back top Yes, upload existing file set platform via File Explorer. Make sure relative file locations platform same source files don’t break any links between files any exist). content needs organized required document structure. organize API legal agreement documentation files? Note: must include head body tags reference css style sheets used API documentation. Back top documentation searchable platform, include <title> tag example, <title>Doc Name</title>) top HTML file, <head> tag. example below shows structure sequence. Back top APIs Legal section provides functionality allows upload manage legal agreements pertain each API. API may require more legal agreements. Legal agreements approved status display API Access function. user must accept terms legal agreements gain access API functionality. upload legal agreement file via File Explorer: Back top add change content, it’s good idea preview browser make sure looks correct symbol characters displaying. example, more space separating word, additional space may displayed symbol character browsers. save content, it’s displayed own browser window. However, another user reading API documentation might use different browser. Since differences between browser defaults might affect visual display, it’s good idea check content looks most popular browsers. Simply copy paste URL. Although need signed edit content, login required viewing most content pages. It’s good idea make sure content changes look Internet Explorer, Firefox, Google Chrome. Back top update API legal agreement documentation you've added platform must upload new file using File Explorer. upload API documentation? upload legal agreements? details. Back top"},{"title":"Create App","url":"/cm/learnmore/create_app.htm","date":null,"type":"document","description":"Create an app project, apply security, version your app, and manage connections.","categories":[],"body":"Create app project, apply security, version app, manage connections. Add set app—a tutorial. Create app manage visibility. Learn configure app credentials. View, explore, search apps. Create, edit, manage app versions."},{"title":"App Creation","url":"/cm/learnmore/create_app_creation.htm","date":null,"type":"document","description":"Create an app and manage visibility.","categories":[],"body":"Create app manage visibility. After create app, several tasks must performed app consume API. After targeting APIs add, next step submit API Access Request license API gain access app sandbox production environment. task performed using API Access Wizard accessible clicking Access link APIs Details page selected API. select APIs license. APIs require license agreement acceptance, must review agree terms more license agreements before access granted. Policies section allows select more SLA policies used monitoring API performance quota management. Access sandbox production environments most cases, automatically approved. Sandbox Production endpoints available visible Apps APIs page. API app connected uses OAuth Authentication Code Resource Owner Credentials grant, OAuth Authentication Code Implicit grant, must specify Redirect URL Application Type, configure authorization screen. Back top add app: Back top create app using Create New App, control whether visibility app Public Private via \"Visibility\" option. change app visibility based requirements using Edit function App Details page. Back top"},{"title":"App Security","url":"/cm/learnmore/create_app_security.htm","date":null,"type":"document","description":"Learn how to configure app credentials.","categories":[],"body":"Learn configure app credentials. Authentication gives app ability know identity application user, interact API data. Before configuring security app, must first identity protocol required API performing authentication authorization. Select App Protocol Determine Credential Approach: Selection protocol app based protocol supported API plain text App signed header shared secret, OAuth Each API pre-configured follows: credential approach configured app must match protocol supported API defined policies. Review API documentation verify supported protocols. Configure Security Credentials: authenticate app placing API calls, must include App either Shared Secret Public Key PKI-based authentication form CER CSR). App Details Security: Security section App Details page includes Show Keys function displays Shared Secret Public Key options generating credentials required authenticate app sandbox production environments. assistance determining security credentials method best suits needs, review API documentation verify supported protocols. app initially created using Add New App function, shared secret generated default viewed App Details Security section clicking Show Keys selecting Click View. use Regenerate Key option issue new shared secret. use PKI-based encryption, use Public Key option. Import Credentials function allows upload Certificate Signing Request (CSR) public key embedded Certificate (CER). OAuth using OAuth Authentication Code Resource Owner Credentials grant, OAuth Authentication Code Implicit grant, must specify Redirect URL Application Type, configure authorization screen. task performed addition configuring security credentials optional based requirements. Back top initially create app using Add New App function, shared secret automatically generated. regenerate view shared secret Security Shared Secret section Apps App Details selecting Show Keys Regenerate Key. Back top Before add app platform, review following rules generating App Shared Secret determine best approach adding managing apps. App Shared Secret: Back top app defined another system includes App Shared Secret transfer platform based following scenarios: Back top verify version OAuth API supports, consult supporting documentation API. refer app credentials work? configure OAuth credentials? continue process. Back top API app connected uses OAuth Authentication Code Resource Owner Credentials grant types), OAuth Authentication Code Implicit grant types), need Back top configure OAuth Resource URL Application Type: Back top API app connected uses OAuth \"Authentication Code\" grant you've configured Redirect URL Application Type using configure OAuth credentials? procedure, next step configure Resource Owner OAuth Authorization page. screen allows app developers provide different details branding app users customers. configure Resource Owner OAuth Authorization page app: Back top Back top any reason becomes necessary reissue shared secret, use Regenerate Key function. regenerate shared secret: Back top view current shared secret: Back top use Public Key option, must import existing Certificate (CER) Certificate Signing Request (CSR). Usage either public key option based requirements. Tenant configured internal Certificate Authority, configured set Trusted Certificates apart internal Certificate Authority. following rules apply: Prerequisites: Based established public key strategy platform least following Public Key options must established Tenant before successfully import Certificate Signing Request (CSR) Certificate (CER). Configuring internal Platform Certificate Authority post installation task performed Site Administrator. most cases, formal VeriSign) aligns security policy requirements uploaded, addition any Trusted Certificates may required. receive error message indicating Certificate Certificate Signing Request (CSR) attempting import not trusted Certificate Authority does not exist. Import Certificate Signing Request (CSR): Certificates (CER): Back top Certificate Signing Request (CSR) file includes encoded information generated web server. sent applicant Certificate Authority request digital certificate. CSR contains information identifying applicant public key chosen applicant. Before creating CSR, applicant first generates key pair, keeping private key secret. corresponding private key not included CSR, used digitally sign entire request. CSR file typically .CSR extension extensions based source application generated file. Tenant supports PEM BASE64 encoded PKCS10) Certificate Signing Requests. platform, CSR used send request Certificate Authority stored Tenant request Certificate. Tenant must configured Certificate Authority prior importing CSR. task performed Site Administrator. Back top Refer \"Certificate Authority\" wiki more information up-to-date list popular Certificate Authority Providers. Back top Trusted Certificate Authority third party identity qualified specified level trust. Trusted Certificates used identity being validated entity claims Certificates imported Tenant must issued Trusted Authority. Trusted Certificates must configured prior importing certificates platform apps. task performed Site Administrator. Back top platform Certificate Authority Trusted Certificate files stored Tenant. Tenant distinct developer portal community logical separated any communities may hosted same product instance. Tenant managed Site Administrator. Back top variety different tools use generate Certificate Signing Request (CSR). example, Keytool OpenSSL popular CSR generation tools. context platform process follows: Back top import certificate signing request (CSR): import certificate (CER): Back top After Certificate Signing Request imported certificate generated, download app certificate. download app certificate: Back top becomes necessary change app security credentials certificate nearing expiration date, private key becomes compromised, etc.), upload new Certificate Signing Request regenerate certificate app. accomplished removing current set credentials. use Import Credentials function import Certificate Signing Request (CSR). Back top"},{"title":"Tutorial (App Developer)","url":"/cm/learnmore/create_app_tutorial.htm","date":null,"type":"document","description":"Follow an example scenario for app setup.","categories":[],"body":"first step process add app. Next, must provision app authentication key. Security section App Details page includes Shared Secret Public Key Integration options generating credentials required authenticate app. shared secret automatically generated part Add New App creation process. prefer use PKI keys, generate Certificate Signing Request upload App Security determine option best suits requirements, configure credentials, continue Step Request API Access. information configure app credentials platform, click process allows select App connect API, environment (Sandbox Production based API supports). addition: option allows App developer select license scope different time. option might used App developer does not visibility licenses needed App developer does not know licenses selected. Notes: next step build application integrate Sandbox Endpoint, App Shared Secret PKI Key. enables ability send requests application using App assigned during app creation process. App Security topic provides information configure App access topic App Security next step set accounts data sandbox testing environment test app. performed completed testing sandbox endpoint, need upgrade access use production endpoint, submit another API Access Request select Production environment. Step Request API Access instructions. After you've approved production access status app status \"Activated,\" must update app production endpoint URL. Refer App Security documentation API Documents section API more information. After add production endpoint URL application, app ready live production environment. Back top"},{"title":"App Versioning","url":"/cm/learnmore/create_app_versioning.htm","date":null,"type":"document","description":"Create, edit, and manage app versions.","categories":[],"body":"Create, edit, manage app versions. During app development process, need may arise require different app versions. example: facilitate Apps section includes app versioning functionality allows create new instance version) existing app. App Version Composition create first app Version Create New App Version After creating Version app, create app version using Version function accessible via App Details page. Note: app version created, platform auto-generates internal App App use API calls. Refer API documentation API Documents section more information. Viewing App Versions navigate app version selecting Current Version menu. Team Management Apps, Team Member assignments apply apps versions. unique set Team Members cannot assigned specific app version. App Management App versions managed using variety different tools available App Details page. Back top create new app version: Back top \"Version name) app version changed using Edit function App Details page. edit app version information? instructions. Back top Deleting app version standard app management task. delete app? details. Back top App version information changed using Edit function App Details page. Back top"},{"title":"View Apps","url":"/cm/learnmore/create_app_view_apps.htm","date":null,"type":"document","description":"Find and view information about apps.","categories":[],"body":"Find view information apps. Apps page displays summary listing apps defined currently following. After logged page accessible clicking Apps Quick Filter Icon includes following functions: Back top"},{"title":"Community Manager Getting Started for API Developers","url":"/cm/learnmore/getting_started_for_api_developers.htm","date":null,"type":"document","description":"Start using Community Manager to publish and manage APIs in a matter of minutes.","categories":[],"body":"Learn add API test SOA Software’s Enterprise API Platform API Management Platform brings API providers App developers together.  provides easy access powerful API Management capabilities combined social community allowing developers collaborate build innovative Apps scalable APIs. Let’s Sign account don’t already register locally, use favorite social networking account. Use Plus Menu add new API. first page you’ll provide information system show users view API. information indexed, try use names, tags descriptions match types things think users might search looking API yours. first page ask choose privacy settings API, first add API it’s good idea set private make sure works. always make public later. You’ll describe target API second page. target actual service API built manage, often through proxy use proxy, target API information hidden developers). Defining target simple specifying URL target hosted. may specify both sandbox production URLs, don’t simply use URL(s) describe target, recommend use advanced settings provide bit more information structure API interface give better experience later monitoring documentation, giving more options access control. Describing API interface pretty easy; describe API operations combination verb resource location (uri), optionally choosing additional settings media types. interface definition our sample customer API looks describe SOAP services set additional transport details need page wizard you’ll define API proxy API proxy allow add security, monitoring QoS management amongst things, help most API our platform. API proxy endpoint system present App developers use Apps. control own DNS server, use own CNAME API, not define API domain subordinate brokers. choose add context prefix expect multiple APIs same CNAME, just add more descriptive path. Once you’ve defined sandbox production API proxy endpoints you’re done. choose adjust access approval settings, use advanced tab change proxy interface override default security monitoring policies. you’ve added API. point probably make sure works before further. test API you’ll need create App, connect API send test messages. App Developer getting started guide help. you’ve created tested API. You’re good few more things help developers make most consider things documentation, legal agreements, OAuth, API privacy group management, monitoring, versioning. Back top"},{"title":"Community Manager Getting Started for App Developers","url":"/cm/learnmore/getting_started_for_app_developers.htm","date":null,"type":"document","description":"A guide for App Developers to get started building Apps using Community Manager.","categories":[],"body":"Learn add App connect SOA Software’s API Management Platform brings API providers App developers together. provides easy access powerful API Management capabilities combined social community allowing developers collaborate build innovative Apps scalable APIs. Let’s Sign account don’t already register locally, use favorite social networking account. Before create probably explain App isn’t). App metadata construct describes application manages its identity credentials. not software application running device, just describes more software applications. Developers use App construct request manage access Apps APIs consume, any software application using credentials defined App construct access APIs negotiated. Adding App simple process. Use Plus Menu add new App provide information system requests. system show information users indexed system’s search engine, try use names, tags descriptions match types things think users might search looking App yours. first page ask choose privacy settings App, first add App it’s good idea set private make sure works. always make public later. That’s you’ve added App. point it’s worth taking look App, check details App credentials, Board check Team features. APIs, DevConsole, Monitoring later App defined system need connect APIs you’re ready start finish case may actual App. search browse system find API use, use button start workflow process getting access. It’s pretty simple process. choose Apps connect API, choose endpoint (sandbox production) connect choose QoS policy specified API Admin), review accept any legal agreements, submit request. Depending approval settings endpoint, request may automatically approved, may require administrator approval. check status access request using APIs section App’s navigation: Once app approved access API use App’s DevConsole feature browse API send test messages. allows easily code needs interact API debug any issues may run click in-depth explanation use DevConsole, fairly self-explanatory. you’ve created tested App. platform lot more offer check monitoring, team management, App versioning. Back top"},{"title":"Go Live With Your App","url":"/cm/learnmore/go_live.htm","date":null,"type":"document","description":"Request production access to an API, go live, and monitor your app's use of an API.","categories":[],"body":"Request production access API, live, monitor app's use API. Request manage production access API. Monitor app performance adherence defined API access contract."},{"title":"App Monitoring","url":"/cm/learnmore/go_live_app_monitoring.htm","date":null,"type":"document","description":"Monitor app performance and adherence to a defined API access contract.","categories":[],"body":"Monitor app performance adherence defined API access contract. Dashboard Admin Team may issue alerts time time notify platform members issues, such scheduled downtime sessions, may impact application development. monitor alerts Dashboard. Alert notifications posted Dashboard page identified API Name, Title, Environment Sandbox, Production), Status, Priority, Creator Created Date/Timestamp. comment alert directly Dashboard double-click alert entry view manage associated API Board. API Board Alerts viewed API Board. filter posts view alerts, sort Most Popular, Most Marked, Most Recent, comment alert. Performance Charts Usage Logs App performance including service response time, adherence defined API Access Contracts, transaction faults monitored viewed performance charts. Usage logs include request response message data API, App, Contract activity queried viewed. monitor app performance? Back top respond notifications directly Dashboard using sort filters target entry Dashboard, clicking notification display its Board entry. respond notification. list response options posts tickets, Post/Ticket Management. Back top configure account receive email notifications certain platform activities occur. Notifications updated User Settings page. default state notifications enabled. Back top Admin Team may send alert notifications time time API maintenance announcements, API related news, etc. Alert notices posted API Board API alert pertains. Back top Apps Monitor Overview section includes barometer style Dashboard controls allows view throughput, latency, errors messages real-time Sandbox Production environments APIs app connected Statistics calculated APIs app connected operations included APIs. obtain statistics per-second per-minute basis. Dashboard displays statistics last hours. Dashboard controls scale based number messages received time interval selected (sec min). example, messages transmitted API last seconds; scale change Dashboard provides following control types: Usage data further categorized API Usage exported. export API usage data APIs App connected Back top Performance charts included Apps Monitor page. provide mechanism platform members view performance apps APIs apps consuming. Chart data used monitor API usage span time troubleshoot errors API operation. Performance Chart functionality allows view performance sandbox production modes, provides monitoring tracking service response time transaction faults. Charts populated usage \"roll-up\" data gathered during processing web service request response messages. Historic usage performance data queried viewed Usage Logs section. monitor app usage logs? Performance Charts automatically scale axis show appropriate range data shown. choose scale average default) based selected interval set own scaling. Note: Updating chart performance statistics using Refresh based selected Duration Interval represents total time range displayed. Chart Types following performance charts types supported. chart data presented milliseconds Minimum, Maximum, Average Response Times transactions depicted candlestick bar chart axis. hover each time interval view Datapoint Pop-up displays Date, Time, Average, Max, Min Response time transaction selected time interval. Successful transactions faults depicted single chart two Y axes. Successful transactions depicted column chart. vertical bar displays number transactions successfully processed selected response time range. Faults depicted scatter chart. red dot represents number Faults associated specific time interval. Time Range Performance Chart includes navigation control (located bottom chart) allows navigate Timeline based selected Duration Time Interval. Throughput data monitored timeline presented spline chart. After targeted timeline, several ways view additional chart detail. Zoom feature allows view chart data clicking pre-defined interval hour, hour, hour, hour, Data Point Popup allows hover specific datapoint view response data detail including Date, Time, Average, Max, Min. Graph Controls Graph Controls section Performance Chart provides options configuring chart content specific API, APIs), data capture display intervals Duration Interval), navigating zooming chart Timeline. Each chart displays data based currently approved environment Sandbox Production). Back top Apps includes Monitor Logs section provides options filtering viewing usage logs associated API activity occurred either platform production sandbox environments. generate usage log report app: view usage log details App: Usage Log Details (Transport Header) Usage Log Details (Transport Headers Request Message) Usage Log Details (Transport Headers Response Message) Back top monitoring process captures app's usage data APIs connected API Usage section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered last hours. export usage data APIs app connected Back top"},{"title":"Production Approval","url":"/cm/learnmore/go_live_production_approval.htm","date":null,"type":"document","description":"Request production access to an API and manage API access contracts in the production environment.","categories":[],"body":"Request production access API manage API access contracts production environment. After determined tested app ready production, must request access production endpoint API. accomplished using API Access Wizard. Contract Generation Approval: After API Access Request completed, contract post created request submitted Admin Team approval. Notes: Back top After API Access Request app \"Approved\" \"Activated\" final step process Live. accomplished using Switch Production function Apps APIs Connections page. Back top any reason deactivate live production environment, via \"API access request <App Name> (App Version) <API Name> production environment\" request located Dashboard App Board. Back top temporarily suspend live app, using suspend function. resume live state using Resume function. Back top previously suspended app's access API production environment, resume using Resume function. Back top"},{"title":"Community Manager Licenses Feature Overview","url":"/cm/learnmore/ov_licenses.htm","date":null,"type":"document","description":"A detailed overview of the Licenses feature.","categories":[],"body":"document provides overview Licenses feature implemented manage API access, define different levels access along appropriate service level agreements, monetize API. includes information feature design, practical implementation tips, implementation scenarios showing feature used benefit both API owners app developers. topic includes following sections: platform’s Licenses feature gives complete control level access offer API. feature designed exactly customize access offerings, including: defining offer, whom, level, use feature design API offering suits customers exactly. Back top great flexibility feature gives very fine control API offering. Below hypothetical implementation scenarios showing use feature package API: new operations assigned scope, specifically large customer, visibility setting Private. operations assigned second scope visibility Public. Two licenses defined. large customer, offers access both scopes; second, customers, offers access public scope. Both licenses offer same quality service. API Admin creates Private API Group invites large customer. customers, not being invited private group, unaware new operations. documentation tagged visibility tags each license, portion API documentation that’s visible specific app developer matches developer’s visibility API defined Business Admin defines single scope, since access granted operations. defines three licenses—Bronze, Silver, Gold; each License Term includes scope applicable QoS policy tier. API uses licenses. Privacy not factor; fact, customers need able offerings choose, therefore scopes licenses visibility setting Public. Business Admin defines two scopes, Credit credit card transactions Debit debit cards. two QoS policies, smaller customers larger customers, resulting four separate license offerings; debit card processing Silver Gold QoS levels credit card processing Silver Gold QoS levels. scenario, Business Admin sets four licenses visible customers. API Admin assigns Credit scope operations relating credit cards, Debit scope operations debit card transactions. Since licenses offered marked publicly visible, developer requesting API access sees four options. developer chooses license most applicable type transactions app processes level service required. offer two categories API access; unlimited read-only access operations), unlimited write access operations part Business Admin first defines applicable scopes, maps scopes licenses. Later, scopes mapped applicable operations below). Business Admin: API Admin assigns operations Read scope assigns remaining operations Update scope. Back top license feature encompasses decisions actions part several key players. Core components (scopes licenses) defined user interface Business Admin, API Admin completes picture assigning operations scopes. Note Business Admins automatically API Admins APIs, same individual complete both sets tasks. flexible nature hierarchy, very easy customize APIs privacy monetization. example, monetize API operations serve data based service profiles, monetize operations execute transactions based transaction volume response time. define completely new set licenses leave older ones place support existing customers. section provides overview feature action, including: three key roles platform affected Licenses feature. activities each, whether regard configuration usage, follows: Determining exactly parts APIs expose customers, levels service offer, terms agreement (monetization) key business decisions. reason, platform key components Licenses feature defined Business Admin. Typically, Business Admin might responsible multiple APIs. platform, Business Admin same rights API Admin each API business, additional rights. Business Admin defines key components Licenses feature including Scopes, License Terms, Licenses. Once defined, available use any API business. each API, API Admin implements feature assigning operations scopes, manages visibility assigning licenses groups. more information Scopes, License Terms, Licenses, Components below. API Admin responsible API definition platform. API setup, chooses use Licenses feature assigns scopes operations. API Admin determines visibility API. API visibility set Private, invites more groups (Private API Groups independent groups) visibility API. API Admins responsible tagging API documentation visibility tags, uploading API documentation, approving access requests developers apps. Note: Depending platform set individual users might not permission create modify API unless user Business Admin. main platform user, app developer, reaps benefits feature smooth user experience. making API access request, app developer chooses selection more licenses applicable API. app developer, it’s simply matter choosing, licenses offered API, most closely offers capabilities quality service looking Licenses feature uses following components: Scopes, Terms, QoS Policies, Legal Agreements make hierarchy License definition. Visibility, API access requests, API documentation tags not specifically part hierarchy key components. scope entity define represent any subdivision API might separate control separate control specific operation, define scope includes operation. separate control READ operations, create scope those. guiding principle defining scopes level granularity that’s needed defining API offered app developers. scope bridge between top level hierarchy, license, bottom level, API operation (method). Business Admin defines basic scope definition. API level, API Admin assigns specific operations more scopes API. operations included any license scope assigned specific API. example, Business Admin might define scopes based roles groups identity management system, since scopes way define authorization policies become linked user’s token after authentication. API Admin links scopes specific functionality API assigning scopes operations. operation assigned multiple scopes, app developer sees operation developer visibility applicable scopes. Similarly, app that’s accessing API must applicable scopes its license not able access operation. Scopes arranged hierarchy; top-level scope child scope, child itself child scope. scope hierarchy used, user visibility parent scope automatically visibility descendent scopes. Similarly, app parent Scope1 part access scope API, scopes descendants Scope1 automatically considered part App’s access scope. Looking permissions another perspective, app, user, group access descendent scope, assumed app, user, group access parent scope, top scope level. example scope implementation—the Business Admin might create two scopes, Read Update. defining logical groupings, Business Admin enables API Admin assign applicable operations those two scopes, thus package API license offerings. scope definition includes scope name, short long descriptions, visibility setting. supports additional settings any operations assigned scope: whether anonymous access allowed production and/or sandbox environments, whether anonymous access allowed production and/or sandbox environments, whether scope offered default OAuth grant. not using OAuth just ignore settings relating OAuth. Note: future, scope definitions apply OAuth Licenses. Currently, OAuth scopes License scopes maintained separately. license term custom grouping scopes QoS policies. essentially same thing term business contract. case, term defines access being offered (scope) level access (QoS policy). any impact, license term must include least scope. license include more license term. It’s important understand QoS policies apply license term, not individual scopes term. Let’s say example term includes: scenario, either scope process transactions per second long combined total number transactions operations both scopes does not exceed per second. QoS policies core part API definition, add another dimension Licenses feature beyond restricting visibility/access, allowing apply use-based policies licenses. QoS policies defined SOA Software Policy Manager System Admin. specific choice QoS policy, additional policy configuration steps, include such options steps take access exceeds SLA agreement. Once defined Policy Manager, available platform selection defining license term. Once defined Policy Manager, available platform selection defining license term. allows different QoS policies offered app developers. making API access request, app developer choose license includes QoS SLA needs app, request access level. QoS SLA enforced based each app-to-API service contract. license constructed follows: Business Admin define more legal agreements upload platform. Once available platform, more legal agreements incorporated license definition. Once legal agreement defined part license, API Access wizard displays agreement any developer requesting API access license. developer must accept legal agreement part API access request. license top-level item customization dovetails clear specific offering app developer. license model defined Business Admin. API Admin completes picture, relating license API, assigning scopes specific operations. app developer requests API access, licensing choices presented part API Access wizard app developer simply selects license most suitable unique scenario app. points licenses: two core visibility states objects platform—Public, means object visible anyone accesses platform, Private, means visible invited users (members invited group). API, Scope, License, App, Group Public Private visibility options. Public Private visibility states work Licenses feature allow very fine control visibility offer API. API private, control visibility inviting groups users API. private licenses, determine licenses offered groups. Portions API mapped private scopes not visible developers members group invited API unless specifically invite licenses include private scopes. Since design licenses any way allow whatever level access allow specific individual group. Let’s say API private, invite members Group read-only access members Group full access. easily achieve Just invite both groups access API, tailor access Group include license you’ve defined read-only access. Done. using Licenses feature, invite Group visibility API, control level visibility group Note: must first make sure API using Licenses feature. API’s Board, click Edit make sure Use Licenses checkbox checked. platform, Board API. left, click Visibility click Groups. groups visibility API listed. page limit visibility parts API, users don’t those operations, naturally don’t those users able view corresponding API documentation. platform allows limit visibility API documentation applying set tags HTML. applying tags around document content, specify licenses part documentation visible. viewing user applicable license, user sees documentation. not, content not displayed. control visibility file level, more granular level tagging specific content file. example shown below. implementation example, let’s say offer Gold level license specific customers. includes three additional operations higher QoS policy. documentation includes: use documentation feature hide three files Gold operation, Gold overview file, users. main index page, tag links four files containing Gold license content links visible Gold customers. content tagged Silver license offered customers, tagged Gold license. Gold customers Silver customers not Gold content. point app developer requests access API both app developer customers reap benefits Licenses feature. Instead black white all-or-none access, app developer choose licenses defined API designated visible him/her, choose license most applicable app’s exact scenario—the operations app needs access appropriate level access (quality service). API includes subsets (scopes, packaged licenses) select audience, developers never those options associated documentation. Each developer available him/her, those choices request API access most appropriate license. final step process, licenses set API access requests require manual approval API admin, evaluating API access request API admin further modify API access level granted app. Briefly, high-level steps implement feature. Back top examples API owner use Licenses feature administer, strategize, monetize API. Let’s say offer three levels access/service users: Note: variation above, configuration offer Metered License—for example, $0.10/transaction. use detailed auditing API usage logs custom reports Community Manager Policy Manager compute monthly bills. Here’s set bronze, silver, gold level licensing example. Define scopes: offer two categories API access; read-only access operations, Bronze) full access operations, Silver Gold). part Business Admin defines two scopes, Read Update. Read scope defined child Update scope. Define licenses: Business Admin defines three licenses: Bronze, Silver, Gold. available app developer choose requesting API access. Enable licenses: API Admin enables Licenses API sets API Private. Map scopes: API Admin maps operations read-only scope maps operations Update scope. scenario use Licenses feature make parts API visible select group users. Let’s say three types users: accommodate customer groups, first define following Scopes: define following Licenses: Maps scope: Read-Only Maps scope: Full Publish Maps scope: Full Publish (different QoS policy) Maps scope: Beta create Private API Group beta testing, invite technology partner group, make Beta license visible group. tag API documentation new operations visible those license includes Beta scope. technology partner choose API access Beta license try new operations. customers continue enjoy normal level service completely unaware beta testing occurring. Perhaps offer access operation, rate transactions per second, charge, operations. define five licenses, each including scope, each including same QoS policy Let’s say instead offer transactions per second charge, don’t mind operations used long overall usage doesn’t exceed scenario define license five scopes QoS policy. QoS policy applies scopes, combined. apply same approach monetization higher consumption levels. might define exactly charge traffic specifically high-volume endpoint. operations lower volume, exact numbers might not significant long overall package fair. flexibility allows package exactly works best app developer customers. Back top app developer requests API access, API Access wizard steps him/her through process. app developer: Back top"},{"title":"Policy List","url":"/cm/learnmore/policy_list.htm","date":null,"type":"document","description":"A list of operational and service-level policies.","categories":[],"body":"Includes information following types policies: Used identify (authenticate) application attempting consume API determine authorized not. This policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth Category: Security default security policy Atmosphere services controls perform administrative actions Atmosphere portal. Category: Security Provides basic auditing messages. Message metrics recorded Policy Manager Usage Logs Monitoring tab. messages themselves not audited. achieved using DetailedAuditing policy. Category: Auditing Provides detailed auditing messages. Message metrics recorded Policy Manager Usage Logs Monitoring tab entire messages each exchange. Category: Auditing Used audit service operations binding operations. Category: Auditing Used audit SOAP binding operations. Category: Auditing Used audit Services, Bindings, Operations, Access Points. Category: Auditing Supports Transaction Tracking functionality correlates related web service events single activity transaction. example, service Container uses SOA Software Delegate call another service different container managed SOA Software Agent, automatically insert correlation information message collected used Policy Manager collect tracking log information. Category: Auditing Back top Defines conditions measuring reporting performance specific Contract. Each policy composed \"Rule\" \"Access Interval.\" Rules represent conditions define measure report performance service contract. defined system condition matches defined rule, alert raised. Category: QoS (Quality Service Policy) Allows configure bandwidth cap quota) consumer upload download any given time. bandwidth cap specified kilobytes megabytes per second. quota exceeded, runtime throttle traffic conform quota policy. quota assigned either request (upload) response (download). alerts generated policy since bandwidth consumed function network speed capabilities service provider, not consumer. Category: QoS (Quality Service Policy) Allows update policy defined using BeanShell Jython script languages. series predefined functions variables provided allow build custom policy expression evaluated runtime. Several sample scripts provided illustrate common quota management activities. Category: QoS (Quality Service Policy) Service Level Enforcement Policy Quality Service (QoS) policy allows enable configure error message returned consumer SLA violated. policy works conjunction Service Level Policy applies following Service Level rules: \"Usage Count,\" \"Total Request Message Size,\" \"Total Response Message Size.\" define Service Level Policy specify each service level condition alert code, define Service Level Enforcement Policy specify error message displayed specified service level condition violated. Category: QoS (Quality Service Policy) Allows monitor web service throughput performance specifying throughput limit quota), queue size, configuring fault alert notifications. quota exceeded, consumer fault message returned service consumer alert logged. Category: QoS (Quality Service Policy) Allows allows configure timeout each request specify custom fault error message returned client. Category: QoS (Quality Service Policy) Allows monitor web service concurrency performance specifying concurrency limit quota) represents maximum number concurrency connections, configuring fault alert notifications. specified concurrency limit exceeded, Policy Manager return fault send alert. Category: QoS (Quality Service Policy) Back top"},{"title":"Publish API","url":"/cm/learnmore/publish_api.htm","date":null,"type":"document","description":"Information about publishing your API.","categories":[],"body":"Publish API, integrate OAuth OpenID support, add legal agreements API documentation, test API, manage API admin team, perform administrative tasks. Add set API—a tutorial. Publish API, configure license scope determine licenses offered API, perform maintenance activities. Configure API OAuth. Configure API OpenID. Add maintain API documentation restrict visibility documentation files. Add maintain API legal agreements. Configure manage API visibility options. Invite others API Admins API manage API Admin group. Configure email notifications monitor API performance. Back top"},{"title":"API Admin Management","url":"/cm/learnmore/publish_api_admin_management.htm","date":null,"type":"document","description":"Invite others to be API Admins for your API and manage the API Admin group.","categories":[],"body":"Invite others API Admins API manage API Admin group. APIs section includes Admins page allows invite others administrators API. API administrators viewed managed summary listing. Invite Administrators Invite More function allows invite additional users administrators API. View Administrators administrator invitation submitted, username, email address, invitation status invitee (Email Sent, Approved, Rejected) added Admins Summary. Manage Administrators API Administrators remove Administrator listing. Back top API Admins page includes administrator invitation function allows invite people administrators API. Note: create API, administrator. administrator privilege automatically approved posted Admins Summary page. invite additional administrators using Invite More function. Invitees not platform members must sign before accepting team invitation. Back top invite non-members administrator API, order invitee accept invitation, must platform members. Basics sign information. Back top receive invitation via email administrator API accept reject invitation. Back top Once invitation sent individual API administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove API administrator API clicking Remove. remove API administrator API? Back top Any API administrator remove administrators API. Back top"},{"title":"Documentation Maintenance","url":"/cm/learnmore/publish_api_documentation_maintenance.htm","date":null,"type":"document","description":"Add / maintain API documentation and restrict visibility of documentation files.","categories":[],"body":"Add maintain API documentation restrict visibility documentation files. API documentation must developed maintained outside platform own HTML editor. Once HTML content ready upload site. add new version, update existing documentation create entirely different set documents. default, documentation files reside same folder. couple approaches take maintain files different versions same folder structure: more detailed information working API documentation files, Content Development Guidelines. Back top API documentation updated Back top add documentation API API Documents section two ways: details, Content Development Guidelines. Back top Yes. already website established API and/or documentation, upload file introductory text link website. Remember use \"target=\"_blank\" attribute link documentation site opens new window rather replacing platform user interface. details, Content Development Guidelines. Back top platform provides detailed set content development guidelines API documentation, including publishing, editing, styles, content organization, file upload, testing, updating. details, Content Development Guidelines. Back top following visibility rules apply API documentation: Back top API uses licenses, visibility API documentation files restricted users authorized, based access licenses, scopes, operations way documentation tagged. platform offers series visibility filters used display applicable API documentation files, portions content individual files, authorized users. API uses licenses, API documentation tagging must used. API documentation tagged appropriately, platform displays documentation users authorized, based membership more groups visibility API. users not documentation. elect use licenses, must tag documentation let platform know portions documentation set visible users, according user’s visibility permissions API. user full partial visibility API selects Documents menu link APIs section view documentation, user sees designated portion API documentation based permissions, determined group membership group's visibility API. Content licenses hidden. using feature, make sure links associated documentation sections being filtered tagged accordingly. visible links hidden content, user's perspective links appear broken. two approaches tagging documentation: settings metadata.xml file determine not visibility authorization. file restrictions set metadata.xml, user cannot access those files user URL file. File-based tagging recommended approach most content. instructions set metadata.xml file, File-based tagging: Using metadata.xml file below. recommend use approach judiciously. permissions vary user, documentation projects often include links between files, simple tagging approach most efficient. Refer example use case below ideas. Content-based tagging controlled referencing jquery-1.8.0.min.js dynamic_docs.js files <head> tag HTML files. below example. Note: Unlike file-based authorization, content-based visibility filters implemented browser side feature considered \"personalization\" feature rather authorization. Activities relating documentation tagging visibility include: control visibility API documentation downloadable files API Documents folder creating metadata.xml file includes more regular expressions specify files seen, via tagging, more following: not specify metadata.xml file permissions content, users not documentation. always true API uses licenses, API public. apply filters, apply desired filters complete documentation set. add additional filters per-version basis Filter API Version below). metadata.xml file, include each filter apply <metadata> </metadata> tags. Examples each given sections below. filters executed sequential order. file, organize filters order: example below shows simple metadata.xml file API version, apiversion12345.open; operation, addPayment; scope, fullscope-public; license, Gold. file each tag. scenario, users link specific file permission applicable API version, scope, operation, license. Users not applicable visibility permissions not links not able access files URLs). Note: setting metadata.xml, make sure represent names referenced objects, such license, scope, file names, exactly. Make sure case matches. <licenses> filter metadata.xml file allows specify more target documents more license names. Users must visibility specified licenses order visibility specified documents. <scopes> filter metadata.xml file allows specify more target documents more scope names. Users must visibility specified scopes (via licenses visibility order visibility specified documents. Scopes mapped API operations using Scope Mapping function API Details page. <operations> filter metadata.xml file allows specify more target documents more operation names. Users must visibility specified operations (via licenses visibility include scopes operations mapped order visibility specified documents. Scopes mapped API operations using Scope Mapping function API Details page. filter documents based specific file specifying regular expression, shown examples above. example, might define filtering rule applies specific PDF file, sample.pdf. Using example specify following <target> node: metadata.xml file, specify filtering rule applies files specific file type specifying regular expression <target> node. example, define specific rule apply .htm files /Documents folder define <target> node follows: example below defines rule .htm files documents folder API visible invited users: might filter rule applies Microsoft Word .docx files /documents folder: specify multiple <target> filters. specify rule applies .htm .jpg files /Documents folder include two <target> nodes: expression placed after <metadata> tag XML file does not include API Version filter. does include API Version filter, expression placed before filter. Refer sample metadata.xml file above. addition applying filters API documentation, further filter API version using <api:APIVersionID> filter. configure filter extracting API Version plus tenant name example, apiversion400.open) API Documents URL platform. Example URL: metadata.xml file resulting entry might look similar following, limits access .htm files specified version visible users visibility Gold license: example illustrates filtering API Version plus specific document: example illustrates filtering API Version plus specific document type: selected set files display Table Contents displays left navigation API Documents section platform, content dynamically displays based filters specified API documentation specified API version. It's best organize content entire files viewed hidden based user's visibility settings. However, cases you'll need show hide different sections content file. minimum, you'll probably organize documentation index page include links different files tagged metadata.xml file make links visible users access applicable licenses, scopes, operations. use content-based tagging feature show hide sections specific document based visibility access rights viewing user. use feature you'll need two things: Note: Tags mutually exclusive cannot nested. use content-based documentation tagging feature control visibility specific pieces content file displayed viewing user based user's visibility access rights, you'll need set lines code <head> tag HTML file, shown below. Note: important note below regard {Version} variable last line above. Important: use dynamic content files must reference above two JavaScript files. second link above, use whatever value use /{Version}/ part path. example, use API version, API doc version, platform version. importance value controlling version dynamic_docs.js file served users. file cached browser, efficiency. However, new version increased capabilities, use those new capabilities new version documentation, you'll users new version dynamic_docs.js file, not earlier, cached version. scenario, need update value {Version} variable file path. Changing value ensures user accesses documentation, browser reference latest version file. restrict documentation visibility license, specify license names showforlicense tag, adding more license names separated commas. App developer visibility Gold license, based license's privacy settings developer's visibility access, developer view API documentation. restrict documentation visibility scope, select API-wide Mapping option Operation-specific Mapping option API Details Scope Mapping >Edit Scope Details. API documentation HTML file, configure tags follows, adding more operation names separated commas. restrict documentation visibility operation, select Operation-specific Mapping option API Details Scope Mapping Edit Scope Details. API documentation HTML file, configure tags follows, adding more operation names separated commas. content documentation share broadly viewers, whether logged not, apply showforanonymoususer tag, shown below. content documentation share platform users logged apply showforloggedinuser tag, shown below. specify multiple entries same type (licenses, scopes, operations) separate comma. example scopes shown below. After finished tagging, test documentation performing following checks: Back top upload HTML files associated images, PDF files, content API Documents section platform using File Manager. two upload options: use ZIP file, make sure files ZIP don't include extra folders don't path. upload, file unzipped automatically using paths, any, specified ZIP file. minimum, file entry point documentation /documents folder. Back top"},{"title":"Legal Agreement Maintenance","url":"/cm/learnmore/publish_api_legal_agreement_maintenance.htm","date":null,"type":"document","description":"Add and maintain legal agreements for your API.","categories":[],"body":"Add maintain legal agreements API. legal agreement maintenance process includes following steps. Back top API legal agreements updated owner API (API Administrator). API Administrator assign team members accepted invitations administrators API legal agreement update privileges. Back top add legal agreement uploading content using File Explorer. Content Development Guidelines details. Back top platform provides set content development guidelines types content including legal agreements. Content Development Guidelines details. Back top After legal agreements uploaded name description assigned, agreements must activated. activated legal agreement displays platform API Access Wizard reviewed accepted part API access request process. activate legal agreement: Back top any reason becomes necessary discontinue use particular legal agreement, deactivate remove displaying platform API Access Wizard. deactivate legal agreement: Back top After activated legal agreement update name description using Edit function. information displays Agreements Summary listing legal agreement. \"Name\" assignment used hyperlinked display name legal agreement Legal page. Edit function Status column used update legal agreement display information. edit legal agreement: Back top Legal agreements deleted Draft state. After legal agreement activated, registered part API's contract cannot deleted. delete legal agreement: Back top view statistics legal agreement activation deactivation activity, download CSV file includes legal agreement name username/date/time stamp legal agreement activated deactivated. download legal agreement report: Back top"},{"title":"API Monitoring","url":"/cm/learnmore/publish_api_monitoring.htm","date":null,"type":"document","description":"Configure email notification settings and monitor API performance.","categories":[],"body":"Configure email notification settings monitor API performance. Dashboard Admin Team may issue alerts time time notify platform members issues, such scheduled downtime sessions, may impact application development. monitor alerts Dashboard. Alert notifications posted Dashboard page identified API Name, Title, Environment Sandbox, Production), Status, Priority, Creator Created Date/Timestamp. comment alert directly Dashboard double-click alert entry view manage associated API Board. API Board Alerts viewed API Board. filter posts view alerts, sort Most Popular, Most Marked, Most Recent, comment alert. Performance Charts Usage Logs API performance including service response time, adherence defined API Access Contracts, transaction faults monitored viewed performance charts. Usage logs include request response message data API, App, Contract activity queried viewed. monitor API performance? Back top respond notifications directly Dashboard using sort filters target entry Dashboard, clicking notification display its Board entry. respond notification. Post Ticket Management list response options. Back top configure account receive email notifications certain platform activities occur. Notifications updated User Settings page. default state notifications enabled. Back top Admin Team may send alert notifications time time API maintenance announcements, API related news, etc. Alert notices posted API Board API alert pertains. Back top API Monitor Overview section includes barometer style Dashboard controls allows view API throughput, latency, errors messages real-time Sandbox Production environments. Statistics calculated apps consuming API, operations included API. obtain statistics per-second per-minute basis. Dashboard displays statistics last hours. Dashboard controls scale based number messages received time interval selected (sec min). example, messages transmitted API last seconds; scale change Dashboard provides following control types: Usage data further categorized Usage App, Usage Operation, API Standings groupings exported. export usage data apps consuming API?, export usage data operations API?, export usage data most popular APIs? Back top Performance charts included APIs Monitor page. provide mechanism platform members view performance apps APIs apps consuming. Chart data used monitor API usage span time troubleshoot errors API operation. Performance Chart functionality allows view performance sandbox production modes, provides monitoring tracking service response time transaction faults. Charts populated usage \"roll-up\" data gathered during processing web service request response messages. Historic usage performance data queried viewed Usage Logs section. monitor API usage logs? Performance Charts automatically scale axis show appropriate range data shown. choose scale average default) based selected interval set own scaling. Note: Updating chart performance statistics using Refresh based selected Duration Interval represents total time range displayed. Chart Types following performance charts types supported. chart data presented milliseconds Minimum, Maximum, Average Response Times transactions depicted candlestick bar chart axis. hover each time interval view Datapoint Pop-up displays Date, Time, Average, Max, Min Response time transaction selected time interval. Successful transactions faults depicted single chart two Y axes. Successful transactions depicted column chart. vertical bar displays number transactions successfully processed selected response time range. Faults depicted scatter chart. red dot represents number Faults associated specific time interval. Time Range Performance Chart includes navigation control (located bottom chart) allows navigate Timeline based selected Duration Time Interval. Throughput data monitored timeline presented spline chart. After targeted timeline, several ways view additional chart detail. Zoom feature allows view chart data clicking pre-defined interval hour, hour, hour, hour, Data Point Popup allows hover specific datapoint view response data detail including Date, Time, Average, Max, Min. Graph Controls Graph Controls section Performance Chart provides options configuring chart content specific API, APIs), data capture display intervals Duration Interval), navigating zooming chart Timeline. Each chart displays data based currently approved environment Sandbox Production). Back top APIs includes Monitor Logs section provides options filtering viewing usage logs associated API activity occurred either platform production sandbox environments. generate usage log report API: view usage log details API: Usage Log Details (Transport Header) Usage Log Details (Transport Headers Request Message) Usage Log Details (Transport Headers Response Message) Back top monitoring process captures usage data pertaining apps consuming current API. Usage App section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data apps consuming API: Back top monitoring process captures usage data pertaining operations current API. Usage Operation section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data operations API: Back top monitoring process captures usage data based API popularity. API Standings section includes Export function allows export usage data .csv file. open .csv file selected application download .csv Downloads folder. Data exported based statistics gathered current hour period. export usage data most popular APIs: Back top"},{"title":"OAuth Support","url":"/cm/learnmore/publish_api_oauth_support.htm","date":null,"type":"document","description":"Configure an API with OAuth.","categories":[],"body":"Configure API OAuth. OAuth open standard security protocol authorization allows share private resources stored site another site without having share credentials. advantage OAuth supports both authentication authorization such way application does not need give access users credentials. example, platform sign using Facebook credentials, API Details page share API Facebook, Twitter, Linked elements platform configured private resources. addition, OAuth potentially extend userbase APIs applications providing flexible, familiar way access example, multiple APIs added platform repository, each API granted access multiple apps, broadened developer community, addition substantial number users using applications. Access permissions initially established supplying Resource dictated application username/password, email address.). example, supply username password tokens, each token grants access specific site specific resource defined duration. allows grant third party site access information stored another service provider, without sharing access permissions full extent data. OAuth defines following roles users applications: OAuth context API platform includes following actors: Back top platform supports both versions OAuth. Back top Site API Administrator set OAuth Provider definitions Site Administration Domains section. create domain each OAuth Provider scenario configurations available selection using API OAuth function APIs part platform deployment. Back top API currently supports OAuth must associated OAuth Provider configuration represents OAuth use case most appropriate intended usage API, resource mapping must configured selected operations establish authorization permissions. accomplished using OAuth Details function API Details page. Process: API Administrator Installs OAuth Provider Features After API Administrator adds API, define more OAuth Provider configurations: Launch OAuth Details Wizard Select OAuth Provider first step select OAuth Provider both Production Sandbox endpoints API. Specify Authorization Details Based OAuth version supported provider selected, specify details OAuth Versions. select OAuth OAuth Options section displays configure Authorization Grant Types. Note: specifying Authorization Server URL platform, it's important verify client application authorized use grant type OAuth Provider configured support. Configure Scope Mapping selected predefined OAuth Provider, resources operations) current API already defined authorized use. Scope Mapping page, identify operations applications need authorization scope. example, Application1 includes calendar may need access API's calendar operation, Application2 includes email client may require access API's address operation. Back top Identity Provider central OAuth enabled provider provides both user authentication user authorization. Using API OAuth function, select pre-defined OAuth Provider Party Provider: Reference: API API Details OAuth Details OAuth Provider Back top Access permission use resource OAuth Provider facilitated using grants. Note: platform supports four grant types OAuth Authentication Code OAuth OAuth defines following grant types reflect different authorization mechanisms: 2-Legged following grant types used 2-Legged OAuth scenario. 3-Legged following grant types used 3-Legged OAuth scenario. access token returned client through browser redirect response resource owner authorization request. grant type suitable clients not support keeping client credentials confidential use authenticating OAuth Authentication Server) such client applications implemented browser using scripting language JavaScript. Reference: Site Administrator Domains Configure OAuth Provider Grant Types 3-Legged 2-Legged Grant Types Back top number legs used describe OAuth request typically refers number parties involved. Legs generally mean access shared client clients. section provides brief description 3-Legged versus 2-Legged OAuth: 3-Legged: 3-Legged OAuth resource owner wants give client access server without sharing credentials username/password). example, user (resource owner) wants give third-party application (client) access Twitter account (server). scenario works follows: 2-Legged: 2-Legged OAuth describes typical client-server scenario without any user involvement. example, local Twitter client application accessing Twitter account. 2-legged OAuth scenario consists first last steps 3-legged OAuth: Reference: Site Administrator Domains Configure OAuth Provider Grant Types 3-Legged 2-Legged Grant Types Back top OAuth tokens generated platform. Site Administrator API Provider defines OAuth Provider, select supported OAuth grant types, whether authorization server supports Refresh Tokens, type Access Token supported. type token issued based configuration OAuth Provider assigned API. Access Token? details Access Token support OAuth OAuth Back top Refresh Tokens credentials used obtain access token: Reference: Site Administrator Domains Configure OAuth Provider Grant Types Issue Refresh Tokens Back top access token issued string represents access authorization issued client. used client access protected resources hosted resource server. Access tokens issued clients authorization server approval resource owner. Each access token includes expiration attribute indicates long token valid. Note: access token timeout typically days seconds). OAuth two types access tokens: part OAuth Provider Domain configuration process, Add Domain Wizard requires select kind token issued (Bearer Mac). OAuth token shared secret issued one-time Reference: Site Administrator Domains Configure OAuth Provider Grant Types Access Token Type Back top grant property custom property resource owner define client application to provide additional information per API whether apply restrictions/constraints grant add additional services scope grant. allows configure app use permissions giving banking app provide transaction details current balance, not allow withdrawal). Grant properties initially defined client application assigned \"tag.\" Site Administrator API Provider reference grant properties OAuth Provider domain specifying Property represents Tag property definition) Property Label description label internal platform). After successfully logged application via login screen associated OAuth Provider API, app authorization screen displays typically includes type authorize option optionally include fields entering any custom grant properties data. enter values grant properties, click Authorize equivalent option). token given application authorization successful message returned. application use token start sending requests. grant properties sent back client application validation. Example (Using Grant Property Apply Restriction): Reference: Site Administrator Domains Configure OAuth Provider Properties Back top user logs application using OAuth Provider configuration, must Resource Owner Authentication page (login screen) custom branded organization. Branding page OAuth Provider domain used configure page. Two branding options offered: Reference: Site Administrator Domains Configure OAuth Provider Branding Back top authentication server application facilitates authentication entity attempts access network. Such entity may human user another server. authentication server reside dedicated computer, Ethernet switch, access point network access server. Authentication Servers set variety ways, depending upon security scheme network serving. basic process authenticating user includes following steps: Back top OAuth defines Authorization, Token, Redirection endpoints. typically URI web server. API Administrators defining OAuth Providers using Add OAuth Wizard (via Site Administration Domains) configuring OAuth specific API using API OAuth Wizard (via API Details) specify Authorization URL, Token Endpoint URL, Redirection URL using OAuth section provides brief overview Authorization Server works respect each endpoint: OAuth Endpoints: Authorization Server Workflow: Back top OAuth supports following endpoints: more information endpoint types, refer OAuth Core Revision specification (http://oauth.net/core/1.0a/) Back top using Policy Manager Network Director Authentication Server specified OAuth configuration, platform provides series client authentication policies used authenticate client's credentials: Back top Operations API act data objects called scopes. Scopes permissions OAuth read access specified operations site another. platform uses grant resources authorization API. authorization fine-grained object level), additional services. Although approach organizing API Scopes varies API API, scopes typically organized follows: Scopes defined hierarchy permissions represent list actions performed. example, credit card service API, may scopes Charge Account, Deposit, Cash Advance, Statement, addition account management services Add Card, Report Fraud Transaction, etc. Scopes generally added hierarchy based logical sequence. example, credit card service API ability deposit, might make Deposit sub-scope under Withdraw. base set scopes initially defined OAuth Provider domain API provider perform additional filtering scope list configuring API OAuth Wizard. scopes map operations defined more APIs OAuth Provider domain serving. API OAuth Wizard accessible via API Details page, includes Scope Mapping section allows specify Scope selected operations, enable API-wide Mapping. Operation-specific Mapping specify Scope URL symbol API-wide Mapping specify Scope URL Root Node. Example (Using Grant Scope Provide Additional Service): following example illustrates walkthrough configuring scopes starting API definition, continuing OAuth Provider, finally attaching OAuth Provider API performing scope mapping: Back top"},{"title":"Open ID Support","url":"/cm/learnmore/publish_api_openid_support.htm","date":null,"type":"document","description":"Configure an API with OpenID.","categories":[],"body":"Configure API OpenID. OpenID open decentralized standard authenticating users. used access control allows users log different services same digital identity services trust authentication body. OpenID simplifies authentication process username password remember. OpenID defines following roles users applications: Back top platform supports version OpenID using OAuth OAuth Back top Site API Administrator set OAuth Provider definitions Site Administration Domains section. create domain each OpenID Provider scenario configurations available selection using API OAuth function APIs part deployment. Back top Relying Party service provider website, application) verify end-user's identifier. OpenID Provider service specializes registering OpenID URLs XRIs. OpenID enables end-user communicate relying party. communication done through exchange identifier URL XRI chosen end-user name end-user's identity). OpenID Provider provides OpenID authentication. relying party discovers OpenID provider URL requesting XRDS document Yadis document), content type application/xrds+xml. document may available target URL always available target XRI. exchange enabled User-agent, program (such browser) used end-user communicate relying party OpenID provider. Back top difference between using OpenID versus OAuth authentication follows: user grants access, application retrieves identifier establishing identity using APIs. both cases access Identity Provider involves authentication Identity Provider. Summary: Back top two ways configure API OpenID Provider. Using OAuth Details function API Details page, configure OAuth API Back top OpenID discovery URL represents location relying party's OpenID endpoints published using Yadis protocol. OpenID providers advertise location endpoints, versions extensions support using Yadis. example, Google discovery URL (https://www.google.com/accounts/o8/id). OpenID provider verifies relying party's realm endpoints making Yadis request openid.realm discover realm's OpenID endpoints. OpenID Provider unable verify realm endpoints, user warned user signing unverified site. Back top \"realm\" pattern represents part URL-space OpenID Authentication request valid. realm designed give end user indication scope authentication request. OpenID providers must present realm requesting end user's approval authentication request. realm must used OpenID providers uniquely identify Relying Parties. example, OpenID providers may use realm allow end user automate approval authentication requests. Back top"},{"title":"API Publishing","url":"/cm/learnmore/publish_api_publishing.htm","date":null,"type":"document","description":"Learn how to set up and manage your API on the platform.","categories":[],"body":"Publish API, configure license scope determine licenses offered API, perform maintenance activities. APIs business capabilities exposed internet applications use. Simply put, API programming interface organization exposes internet allows applications communicate backend systems. Typically, build APIs expose specific aspects business functionality. things differentiate market place make money company. essentially doing through creation APIs creating new channel business exposing set capabilities product services people build mobile applications sell customers), thereby creating channel products services online. Back top platform supports public private APIs. Public APIs visible visitors members. Private APIs visible members invited join Private API Group. Once member accepted invitation Private API Group, Private API displayed unique icon throughout member’s platform experience. Back top Developing API includes key phases: Plan, Build, Run, Promote. Planning: planning phase involves determining APIs publish. Key considerations selecting APIs include: Build: After API planned, approved appropriately scoped, next step build Jet considerations building API: Building API simple, easy understand, documented encourage developers use Run: After API built, next step run Key considerations running API include: API must robust managed. achieve must provide developers feedback API perform reliably terms functionality, performance, its ability security customer data. Promote: Once API running must promote Key considerations promoting API include: Collaborate—To market API set consumers developers writing applications) must create community around API. Creating community partners provides value add services APIs allows developers collaborate each accomplished platform using API Group API Board functions. Search—Users need able effectively find APIs, need access documentation collaborate around developing applications. accomplished platform using Search function users perform free text search use pre-defined search filter. Support—You must support API effectively. write APIs may run problems gain expertise advice community members. accomplished platform using API Board, trouble ticket management system, submitting support request email address listed Support page accessible clicking top navigation. Back top minimum requirement add API platform must endpoint. example: Back top platform allows secure monitor APIs following pre-configured policies. policies selected default assigned newly created APIs. Three policy categories supported: Policy Category: Simple Header SecurityPolicy Type: API Consumer Application Security Configuration: Signature checked. Policy Category: Simple Header SecurityPolicy Type: API Consumer Application SecurityConfiguration: Shared Secret checked Policy Category: MonitoringPolicy Type: WS-Auditing Service PolicyConfiguration: Audit Messages, Audit Message Size, Audit Identities (Consumer End User), Reporting Options (Log) Policy Category: Monitoring Policy Type: WS-Auditing Service Policy Configuration: Audit Messages, Audit Input Message, Audit Output Message, Audit Fault Message, Audit Message Size, Audit Binding, Audit Transport, Audit Contract, Audit Identities (Consumer End User), Reporting Options (Log) Note: Selection policy typically assigned API after performing Edit OAuth Details configuration API Details page Community Manager portal. Use Edit API Details page, Proxy page, Advanced Options select OAuthSecurity Policy section. Policy Category: OAuth Policy Type: XML Policy Configuration: not configure. subscribe API Enterprise Management Platform decide install on-premises ability create manage own Policies. require policy not default list, submit support request email address listed Support page accessible clicking top navigation. Back top add API using Add New API Wizard, Policies section Proxy page, MUST select security policy Category: Simple Header Security) select monitoring policy charts logs. policies display, consult API Provider Site Administrator. Back top platform provides Add New API function allows add SOAP REST-based API. APIs added both Sandbox Production environments. Add APIs Wizard includes following sections: API API page perform initial step specifying API Name, Version Tags, Visibility (Public/Private), API Description, Version Description, API Icon. information displays public API page displays API search results. platform user performs search finds public API page, sees API description rate write review API. Individuals participate Yes/No survey indicating whether review useful not. Based high visibility it's important API description highly informative includes necessary marketing, functional, use case information engage customers request access API. Target Target page, configure SOAP-based APIs specifying SOAP version WSDL. REST-based APIs configured specifying more operations. Policy selection not required Target URL. Proxy Proxy API page allows configure API's proxy settings. proxy API, select Yes radio button Proxy API section. many benefits proxying API including utilizing platform security service level policies, monitoring performance, allowing App Developers gain access API sandbox endpoint test API functionality app), production endpoint use API functionality live application). Allow Anonymous Access option allows enable anonymous access API endpoint offer preview API developers without requiring users create app sign platform. add API: Launch Add New API Wizard first step process launch wizard. Specify API Information Specify Target URL Environment Configure Advanced Options default, REST protocol selected API, Default Profile (Any Default Operation specified. After specifying Target URL Environment, optionally update existing protocol (REST), change protocol SOAP Advanced Options section. Configure Protocol: Configure Proxy Enable Disable Proxy API Configure Production Endpoint Configure Advanced Options Back top API using Licenses feature, scope mapping key defining portions API available licenses. scopes licenses themselves defined Business Admin, API level determine operations assigned scopes. turn determines licenses available app developers requesting access API. example, let's say API includes set operations relating calendar functionality another set operations relating email access management. App might need access calendar functionality, App might include email client might require access operations relating email. scope mapping feature enables group individual operations logical groups separately packaged license App another App another example, let's say offer access operations, higher level access, fee, operations including add, modify, delete. Business Admin defines READ MODIFY scopes, assigns each separate license. API Admin assigns operations READ scope assigns operations MODIFY scope. Users choose paid license access scopes; users choose free license access operations. runtime, request received API proxy particular app, Network Director allows access specific operations covered license governing app/API contract. Back top standard practice, list available Licenses level App Access provided each License included documentation API. Back top following example illustrates add REST service BingVirtualEarth API. Pre-conditions Add REST Service Set Contract Test API test API Dev Console REST clients mentioned Pre-conditions section above. request URL added API URL same parameters physical service. example: Back top create API using Create New API function control whether visibility API Public Private via \"Visibility\" option. change API visibility based requirements using Edit function API Details page. Back top Add New API function includes proxy API option allows configure endpoint particular environment internal external network) accessible target applications. proxy API endpoint exists Cloud similar virtual service. security measure, users able access proxy run Cloud, not accessing API implementation directly. Based development cycle API, chose expose selected functionality API defining Proxy API each endpoint selecting functionality operations) expose. approach allows manage API lifecycle expose functionality based requirements development phase, testing, production, etc.). Advantages: Internal External Networks—If access real API internal network, expose specific functionality external network, add API Target URL using Add New API function, virtualize API specifying Proxy API Target URL specific functionality make available external network. Bridge Between App Proxy API—If API focused business aspects API service, set proxy API provide tasks such security enforcement specifications required target API specs app team, etc.). Sandbox Production Endpoint Access—Adding Proxy API allows app developers gain access API sandbox endpoint test API functionality app), production endpoint use API functionality live application). Contract Enforcement—If configure API proxy, take advantage platform's contract enforcement functionality. Here's works: Service Level Policies configure API proxy, take advantage service level quota management policy functionality monitor API ensure meets defined standards service level performance contracts. Example Scenarios: Scenario build API expose specific functionality purposes collaborating selected development and/or discussion group. not API visible anyone outside selected group. accomplish Scenario build API expose specific functionality public use applications. accomplish Back top Back top \"API Type Profile\" used proxy APIs identify type content API accept consumer returned API consumer identifiers combined content types ANY, JSON, FORM, XML) packaged API Type Profile drop-down menu profile sets. following content types supported: Back top chose proxy API, optionally configure operations Methods, URLs, Content Types. After API settings saved, specified information synched Target URLs. following options supported: Back top Add API Wizard includes Allow Anonymous Access option Proxy page allows enable disable anonymous access Sandbox Production endpoints APIs added platform. Note: Anonymous access typically granted API Sandbox endpoints, generally not standard practice grant anonymous access Production endpoints. Allow Anonymous Access Yes Users not platform members: Allowing anonymous access API endpoint useful offer preview API developers without requiring users create app sign platform. example, specific feature set expose part promoting API, expose those operations API configuration, enable Proxy API Allow Anonymous Access option. Developers read documentation access API without signing requesting access API. developer decides use API, sign platform, create app using Add New App function, select Access API Details page submit API Access Request. Users platform members: enable anonymous access Add New API Wizard selecting Yes Allow Anonymous Access Proxy page, API Requires Approval option disabled. means not required submit API Access Request, except following scenarios: API Charts Logs Anonymous API Access: Back top add new API, \"Version specify Add New API Wizard represents version number display Version drop-down menu. add new API version using +Version function API Details page. Adding API version follows exact same process adding first API except information current API version replicated. edit/customize API definition based requirements. Back top modify API definition using Edit function API Details page. Back top Back top couple steps you'll need complete API setup define licenses app developers requesting access API: scopes link between API licenses offered app developers. any questions regarding scopes assign licenses available, consult Business Admin. overview Licenses feature relationship between setup steps performed Business Admin those done API Admin, relationship between scopes licenses, Licenses: Feature Overview. Back top API Administrator change license specific API Access Request prior approving request. review license scope API access requests before approving, make sure you've selected API requires approval option API setup (API Edit Proxy page). API set auto-approve requests, won't opportunity modify license. Back top"},{"title":"Tutorial (API Provider)","url":"/cm/learnmore/publish_api_tutorial.htm","date":null,"type":"document","description":"Follow an example scenario for API setup.","categories":[],"body":"API setup process involves adding API platform, uploading API documentation, uploading activating legal agreements, assigning API administrators. After completed API setup process, test API assuming role App Developer creating app requesting access API using API Access Wizard. following quick start provides complete walkthrough API setup process provides jump points more detailed documentation each steps. register API must complete following activities: Launch Add New API Wizard first step process add API. Specify API Information Specify Target URL Environment Configure Advanced Options default, REST protocol selected API, Default Profile (Any Default Operation specified. After specifying Target URL Environment, optionally update existing protocol (REST), change protocol SOAP Advanced Options section. Configure Protocol: configure SOAP: configure REST: Configure Proxy Enable Disable Proxy API Configure Production Endpoint Configure Advanced Options Note: MUST select security policy Simple Header Security) select monitoring policy charts logs. policies display, consult API Provider Site Administrator. security monitoring policies supported? note select monitoring policy, app data not supported APIs Monitoring Anonymous API Access enabled. Anonymous API Access? more information. API supporting OAuth, its best practice use Edit function API Details page select OAuthSecurity policy after configured API support OAuth adding OAuth Provider Site Admin Domains section), configuring API using OAuth Details function API Details page. require users API accept any type end user license agreement developer agreement, must create upload legal agreement content. adding legal agreements step performed after add API using Add New API Wizard legal agreements available review acceptance App Developer requests access API using API Access Wizard. legal agreements must written maintained outside platform using own HTML editor. Review following key topics Content Development Guidelines section started. ready publish legal agreements site, proceed Step Upload Legal Agreements. upload completed legal agreements via File Explorer. points consider: legal agreements initially uploaded, Draft mode not visible site. make visible site available API Access Wizard, must activate click Activate button; assign name description legal agreement, save configuration. activated legal agreement displays API Access Wizard API user review accept part API access approval process. Each API offer API documentation. API documentation must written maintained outside platform using own HTML editor. Review following topics Content Guidelines section. ready upload API documentation site, proceed Step Upload API Documentation. upload API documentation using File Explorer. Review following guidelines: Maintenance API performed API Developer initially added API platform, individuals accept invitations administrators. send invitation individual API administrator privileges: Note: create API, administrator. administrator privilege automatically approved posted Admins Summary page. invite additional administrators using Invite More function. Invitees not members must sign before accepting team invitation. API configured Visibility Private, use Private API Group Access functionality provides method creating common interest groups around specific APIs. Group accounts created API Administrators, member invitations sent managed API Administrator. API Administrators create Private API Groups. Refer Private API Groups section complete instructions creating Private API Group, sending invitations, assigning group leaders. test API creating app, requesting API access API, configuring app consume API. create new app configure consume APIs? complete instructions. Back top"},{"title":"Visibility","url":"/cm/learnmore/publish_api_visibility.htm","date":null,"type":"document","description":"Configure and manage API visibility options.","categories":[],"body":"Configure manage API visibility options. API Visibility menu option allows API Administrators manage visibility API Resources granted invitation submitted API Version API Group. following group visibility scenarios supported: Back top APIs Visibility Groups screen displays list API Groups members current API. Note API Administrator update license scope configuration Group Visibility any time prior API Access Request being approved API Administrator. Once API Access Request approved Edit Scope function disabled. following license scope levels supported. configure license visibility API Group: Back top API Administrator change API license visibility specific Group. edit license scope Groups: option gives API Group set licenses part visibility scope. Click checkbox select Licenses make visible current Group. Back top Groups: you've added Private API visibility Private), platform provides Private API Group collaboration function via API Groups page. Groups section Collaborate more information. Back top receive invitation Private API Group, accept invitation: Back top"},{"title":"Sample EULA","url":"/cm/learnmore/sample_eula.htm","date":null,"type":"document","description":"View a general example of an end-user license agreement.","categories":[],"body":"API EULA CLICKING \"ACCEPT\" BUTTON, CONSENTING BOUND BECOMING PARTY LICENSE AGREEMENT (\"AGREEMENT\"). NOT UNCONDITIONALLY AGREE TERMS AGREEMENT, CLICK \"CANCEL\" BUTTON DOWNLOAD INSTALLATION PROCESS NOT CONTINUE. TERMS CONSIDERED OFFER, ACCEPTANCE EXPRESSLY LIMITED TERMS. GRANT. Subject terms Agreement, ACME Corp. (\"ACME Corp hereby grants non-sublicensable, non-transferable, royalty-free, nonexclusive license use ACME Corp protocols APIs made available through ACME Corp secure interface ACME Corp API Platform defined below)(collectively, such protocols APIs \"API\") during term Agreement solely purpose accessing data, materials content made available ACME Corp through API \"API Content\") connection use ACME Corp ACME Corp API Platform solution (\"ACME Corp API Platform\"). use API API Content subject compliance any additional terms conditions may set forth ACME Corp connection use ACME Corp API Platform, including, without limitation, ACME Corp applicable Terms Use. RESTRICTIONS. not not authorize, enable permit any third party modify, make derivative works copy use API API Content, except expressly specified Agreement; reverse engineer, disassemble, decompile, otherwise attempt discover any source code underlying ideas algorithms API any portion thereof (except extent applicable law prohibits reverse engineering restrictions); (iii) provide, lend, sublicense, rent, loan, lease, sell, resell, transfer, assign, disclose, otherwise distribute (except expressly permitted herein) API API Content, use API Content any third-party training, commercial time-sharing, service bureau arrangement, otherwise benefit any third party; use API any API Content violation any applicable law; use access API purposes monitoring availability, performance functionality any ACME Corp's products services, any benchmarking competitive purposes. extent API consists software, shall use such software object code form between ACME Corp title, ownership rights, intellectual property rights API API Content, any copies portions thereof, shall remain ACME Corp its suppliers licensors, Agreement does not give any rights except those expressly granted herein. clarity, except expressly set forth herein, Agreement does not include any right use any trademark, service mark, trade name designation ACME Corp any party licensor. understand ACME Corp may modify discontinue offering API and/or any API Content any time. RULES CONDUCT. shall comply following limitations rules respect use API API Content: may limits access, calls, use, may provided ACME Corp. ACME Corp may, its sole discretion, increase limitations case-by-case basis; contact ACME Corp atmosphere@soa.com request such change. ACME Corp believes attempted exceed circumvent limitations, ability use ACME Corp API and/or API Content may temporarily permanently blocked. may not modify, edit revise any API Content delivered through API, except necessary due technical limitations comply requirements any networks, devices, services, media, must otherwise maintain integrity API Content. application, website service displays third party content commingled API Content, must ensure ACME Corp API Platform identified source API Content. may not remove, obscure, alter any copyright, trademark proprietary notice API any API Content, any portion thereof. End users website service (\"Users\") must presented option log ACME Corp API Platform directly, using ACME Corp currently supported login providers. Once User authenticated, application, website service must clearly display User's ACME Corp API Platform identity regardless authentication provider used. may not use any API Content any manner advertising promotional purposes. agree ACME Corp may monitor use ACME Corp API improve ACME Corp API Platform, ensure compliance Agreement. SUPPORT FEEDBACK. Agreement does not entitle any support, upgrades, patches, enhancements, fixes API (collectively, \"Support\"). ACME Corp may, its sole discretion, provide Support services, any such services shall become part API subject Agreement. agree report ACME Corp any errors difficulties discovered characteristic conditions symptoms such errors difficulties, including without limitation, those related interoperability. agree ACME Corp shall free freely use, disclose, reproduce, license, distribute otherwise exploit any such reports any suggestions, improvements modifications) provide ACME Corp relating API and/or API Content, without obligation restriction any kind account intellectual property rights otherwise. INDEMNITY. agree ACME Corp shall liability whatsoever any use any third party make API any API Content. hereby agree indemnify hold harmless ACME Corp any damages, losses, liability, costs, expenses (including reasonable attorney's fees) arising any manner use API and/or API Content. WARRANTY DISCLAIMER. ACME Corp PROVIDES API API CONTENT WITHOUT WARRANTY ANY KIND, EXCEPT BODILY INJURY, ACME Corp HEREBY DISCLAIMS EXPRESS IMPLIED WARRANTIES, INCLUDING WITHOUT LIMITATION WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, PERFORMANCE, ACCURACY, RELIABILITY, NON-INFRINGEMENT. DISCLAIMER WARRANTY CONSTITUTES ESSENTIAL PART AGREEMENT. LIMITATION LIABILITY. UNDER CIRCUMSTANCES UNDER LEGAL THEORY, INCLUDING, WITHOUT LIMITATION, TORT, CONTRACT, STRICT LIABILITY, OTHERWISE, SHALL ACME Corp ITS LICENSORS, SUPPLIERS RESELLERS LIABLE ANY PERSON ANY INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL DAMAGES ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES LOST PROFITS, LOSS GOODWILL, WORK STOPPAGE, ACCURACY RESULTS, COMPUTER FAILURE MALFUNCTION, DAMAGES; LOSS INACCURACY DATA COST PROCUREMENT SUBSTITUTE GOODS, TECHNOLOGY SERVICES; (III) ANY MATTERS BEYOND ITS REASONABLE CONTROL. ACME Corp SHALL NOT LIABLE UNDER AGREEMENT ANY DIRECT DAMAGES EXCESS HUNDRED DOLLARS TERMINATION. may terminate Agreement license granted herein any time destroying removing computers, networks, storage media copies API API Content. ACME Corp may terminate Agreement license granted herein immediately breach any provision Agreement, otherwise engage any activity ACME Corp reasonable determines likely cause liability ACME Corp. ACME Corp may otherwise terminate Agreement upon thirty days advance notice may provided e-mail general notice posted ACME Corp's website). Upon receiving notice termination ACME Corp destroy remove computers, networks, storage media copies API API Content. Sections (last sentence through shall survive termination Agreement. EXPORT CONTROLS. shall comply export laws restrictions regulations Department Commerce, United States Department Treasury Office Foreign Assets Control (\"OFAC\"), United States foreign agency authority, shall not export, allow export re-export API any API Content violation any such restrictions, laws regulations. accessing using API any API Content, agreeing foregoing representing warranting not located under control national resident any restricted country any such list. CONFIDENTIALITY. may given access certain non-public information, software, specifications relating ACME Corp API (\"Confidential Information\"), confidential proprietary ACME Corp. may use Confidential Information necessary exercising rights granted Agreement. may not disclose any Confidential Information any third party without ACME Corp prior written consent. agree protect Confidential Information unauthorized use, access, disclosure same manner use protect own confidential proprietary information similar nature any event less reasonable degree care. GOVERNMENT USE. part agency, department, entity United States Government (\"Government\"), use, duplication, reproduction, release, modification, disclosure transfer API restricted accordance Federal Acquisition Regulations applied civilian agencies Defense Federal Acquisition Regulation Supplement applied military agencies. API \"commercial item,\" \"commercial computer software\" \"commercial computer software documentation.\" accordance such provisions, any use API Government shall governed solely terms Agreement. MISCELLANEOUS. Agreement personal shall not assign transfer Agreement API any third party under any circumstances. Agreement represents complete agreement concerning license between parties supersedes prior agreements representations between may amended writing executed both parties. any provision Agreement held unenforceable any reason, such provision shall reformed extent necessary make enforceable. Agreement shall governed construed under California law such law applies agreements between California residents entered performed California."},{"title":"Site Administration","url":"/cm/learnmore/site_administration.htm","date":null,"type":"document","description":"Learn about site administration functions such as managing user accounts, uploading color schemes and css, and configuring domains.","categories":[],"body":"Site Administrators: learn manage platform user accounts, invite individuals site administrators business administrators platform, upload site color schemes update css style sheets, configure authentication domains. Administer platform user accounts. Manage Site Administrators platform. Configure Authentication Domains APIs defined platform. Manage Business Administrators platform. Configure custom color schemes, define platform login, upload documentation files style sheets."},{"title":"Config","url":"/cm/learnmore/site_administration_config.htm","date":null,"type":"document","description":"Site configuration tasks&#8212;Configure custom color schemes, define a platform login, and upload documentation files and style sheets.","categories":[],"body":"Configure custom color schemes, define platform login, upload documentation files style sheets. change platform color scheme css styles pertain site background color, left top navigation, text content area, pop-up dialog elements, horizontal rules, text color input fields, default link colors, etc. Color scheme updates performed updating custom.less parameter.css style sheets. Click view sample custom.less template Back top platform includes custom.less style sheet template download update based requirements. Back top custom.less style sheet implemented LESS dynamic stylesheet language extends static CSS adding dynamic behavior CSS. Back top Administration Config Custom Styles section includes Download button allows download custom.less template. download custom.less template: Back top platform includes series standard icons accommodate quick filters, help, menu navigation names, window titles, etc. standard icons cannot changed, customization performed color icon changed. Figure. Upload sprite files \\images folder via Administration Config Resources (Resources File Manager) Back top During design phase platform deployment brand standards colors selected. site includes series icons. icon design fixed part site design, icon color contrast changed. general process modifying icon colors involves following steps: Back top Administration Config Custom Styles section includes Download button allows download custom.less template. upload custom.less template: Back top After update custom.less file, apply changes platform deployment uploading style sheet. After style sheet uploaded, site automatically rebuilds site style sheets changes reflected site. upload custom.less file after updated more information. style sheet sprite file changes not visible immediately after style sheet rebuild process complete, refresh browser cache. Note: recommended make backup default custom.less file before overwriting updated version. Back top Administration Config Custom Styles section includes Rebuild Styles option allows Initiate rebuild platform style sheets. option primarily used platform update installed includes style sheet changes. option primarily used site update performed style sheet changes made. example, update applied site update included new additions required style sheet changes; mean style sheets not active immediately after update completed. case, Rebuild Styles option complete update process regenerating style sheets. rebuild site style sheets: Back top most cases, after regenerate styles upload sprite files must clear browser cache refresh screen view changes. Back top footer customization process includes following steps: Back top process adding custom logo platform includes configuring logo comply logo file requirements (listed below), uploading platform. logo must comply following requirements: customize logo filename: upload logo file: Back top part initial platform setup, Site Administrator installs series domains represent enterprises login requirements platform: After login domains installed, must enabled customized Target Host (virtual host name) Logo/Avatar (Login Button), external login screen display Mode Popup/Main). Site Administration Config Logins section includes login management interface Site Administrators perform tasks. screen organized follows: read-only field displays domain name defined domain configured using Add Domain Wizard. domain name cannot modified. read-only field displays description domain defined domain configured using Add Domain Wizard. change description Site Administration Domains section using Modify function. checkbox allows enable disable use domain. Mode allows select login page associated domain integrated. Two options supported: Popup—Displays external login page popup Main—Displays external login page platform home page instead popup. Note: Mode options not configurable default login page. Back top platform installed, default login domain automatically created viewed managed Site Administrator Site Administration Config Logins section. Back top Site Administrators specify different URLs logging platform based roles (Administrator, Developer, User, etc.), Backdoor Login domain configurations down. accomplished specifying virtual host address each login domain referred Target Host <role>.<company>.com). recommended approach develop login plan each role covers different types login scenarios. Back top platform allows select login page associated domain integrated. integration method selected via Mode option Site Administration Config Logins page specific domain. Two options supported: Note: Mode options not configurable default login page. Back top Back top Back top context Site Administration Config Resources section, Resource any type publishing artifact used construction platform presentation. includes css style sheets, images, sprite files, site copy, API documentation, online help documentation. Back top upload new custom.less file Custom Styles section /resources/theme/default/style directory automatically created includes site default style sheets base.css, parameters.css, style.css, supplement.css). Back top you've updated more Sprite files, create /images folder /resources/theme/default/style directory upload Sprite files must uploaded AFTER uploaded custom.less file rebuilt site styles (either automatically part custom.less upload process manually executing Rebuild function). Back top Content uploaded platform includes API documentation, Online Help, Landing Page, Signup, Support. Content typically consist HTML files, images referenced content, any custom styles sheets support content, reference material PDF's, diagrams, etc.) linked content. Back top document.css style sheet contains custom styles both API Online Help documentation. located /content/style directory. make changes document.css file, upload directly /content/style directory. Note: style sheet not affected custom.less style sheet regeneration process not changed overwritten new custom.less file uploaded. upload document.css style sheet platform: Back top"},{"title":"Domains","url":"/cm/learnmore/site_administration_domains.htm","date":null,"type":"document","description":"Site configuration tasks&#8212;Configure authentication domains for APIs defined in the platform.","categories":[],"body":"Configure authentication domains APIs defined platform. platform provides series add-on features provide authentication support APIs. platform currently supports OAuth OpenID Provider types. Here's provider type configuration process works: Back top platform domain types used log platform, configured OAuth Provider. After each domain installed entries show platform follows: following table provides list supported domain types, brief description, installation method: login domain type allows users log using default platform login page using Email Address Password credentials. Note: Platform Login (Default) system generated, cannot deleted, not display Resource Owner Authentication Domain drop-down menu OAuth Provider domain. Installation Method: default platform login automatically added enabled part platform default installation. option disabled another login approach used deselecting \"Enable\" checkbox login line item Site Administrator Config Logins section. Documentation: Site Admin Config Logins sections Community Manager online help more information. Facebook Connector domain allows log platform using Facebook credentials. Installation Method: Facebook Connector domain option installed default) Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select Facebook Connector domain type. launches Add Connector Domain Wizard assign App App Secret, enable domain Site Administrator Config Logins section. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. SOA Software Community Manager OAuth Provider feature SOA Software Community Manager add-on OAuth Provider. domain type allows select Resource Owner Authentication Domain login process), configure grant types, access tokens, grant properties, branding. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs OAuth Provider domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select OAuth Provider domain type configure domain. domain available Edit OAuth Details page API Details page customize OAuth configuration API. Note: domain type adds OAuth Provider domain option \"Select Domain Type\" menu not posted Login option Site Administration Config Logins section. Documentation: Site Admin Domains section platform online help more information. SOA Software Community Manager OpenID Provider feature SOA Software Community Manager add-on OpenID Provider. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs OpenID Relying Party domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select OpenID Relying Party domain type configure domain, enable domain login option Site Administrator Config Logins section, select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. LDAP domain allows log platform using LDAP domain defined Policy Manager \"Management Console.\" Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Refer Add Identity System (Active Directory) topic Policy Manager Online Help instructions add LDAP domain. SiteMinder domain allows log platform using SiteMinder domain defined Policy Manager \"Management Console.\" Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Add SiteMinder Domain—See Integrating SiteMinder Policy Manager Guide available via SOA Software Support Site (support.soa.com Downloads PolicyManager PM61_CASiteMinder_Integration.pdf) instructions setup SiteMinder install identity system (domain) Policy Manager. Configure SiteMinder Domain Site Admin Domains Site Admin Config Logins sections Community Manager online help instructions use SiteMinder domain OAuth Provider domain definition, enable SiteMinder login. Back top Access permissions OpenID established configuring domain represents login resource. OpenID, use OpenID Relying Party domain. domain installed part SOA Software Community Manager OpenID Provider feature SOA Software Administration Console available via Add Domain feature via Site Administration Domains. After configure OpenID login resource, entries show platform follows: configure OpenID login resource: Back top After defining access permissions domain, next step configure more OAuth Provider domains represent OAuth authentication use case types APIs platform deployment support. configure OAuth Provider domain: Select domain \"Resource Owner Authentication Domain\" drop-down menu. not previously defined, configure return complete OAuth Provider domain definition. Note: select Client Credentials grant type Resource Owner Authentication Domain not required. Client Credentials grant type does not require Resource Owner. Back top OAuth Details function API Details page includes pre-defined \"Third Party Provider\" domain allows configure grant OAuth versions resource mapping. configure API OAuth Provider? more information. Back top modify domain: Back top delete domain: Back top platform provides support logging platform using connector domain Facebook). configure connector domain: Back top platform provides support logging platform using Facebook using Facebook Connector domain. configure Facebook login: Back top platform provides support logging platform using Google using Open Relying Party domain. configure Google login: Back top platform provides support logging platform using SiteMinder domain. configure SiteMinder login: Back top platform provides support logging platform using LDAP domain. configure LDAP login: Back top"},{"title":"Manage Site Admin Team","url":"/cm/learnmore/site_administration_site_admins.htm","date":null,"type":"document","description":"Manage the team of site administrators for the platform.","categories":[],"body":"Manage team site administrators platform. Site Administration quick filter launches Site Administration section. Authorized site administrators send invitations others whom invite site admins. site admins same administration privileges platform deployment configure authentication domains customized assigned APIs part platform deployment. Invite Administrators Invite More function allows send invitations individuals grant administration privileges API. View Administrators administrator invitation submitted, username, email address, invitation status Email Sent, Approved, Rejected) invitee added Site Admins Summary. Manage Administrators Site Administrators remove Administrator listing. Back top Back top Site Administration Site Admins page includes administrator invitation function allows send invitations individuals grant administration privileges current platform deployment. Back top already received Site Administrator invitation not currently platform member, must sign platform using email address invitation issued order accept invitation. Currently platform members invited Site Administrators. Basics more information. Back top receive invitation via email Site Administrator platform deployment accept reject invitation. Back top Once invitation sent individual Site Administrator, invitation itself cannot revoked. platform member choose accept decline invitation. choose accept invitation, remove Site Administrator Site Admins page clicking Remove. remove Site Administrator assigned platform deployment? Back top Any Site Administrator remove administrators platform deployment. Back top"},{"title":"Manage User Accounts","url":"/cm/learnmore/site_administration_users.htm","date":null,"type":"document","description":"Administer platform user accounts.","categories":[],"body":"Administer platform user accounts. Site Administration Users page provides user management interface allows Site Administrator manage user accounts platform. Overview: List Users Page Site Administration Users section includes List Users page provides summary listing user account details, statistics platform activity, actions Site Administrator apply user account. account information presented column format. Each column sorted ascending descending order. following table provides description each page element. Back top Site Administrators access Site Administration Users page perform user administration. Back top Site Administrator activates user account, following rules apply: activate user account: Back top Site Administrator disables user account, following rules apply: disable user account: Back top user account deleted, account removed platform along associated apps, APIs, posts artifacts. delete user account: Back top Existing users received invitations become platform administrators assigned status invited. After user accepted invitation, status changes registered. Back top Search Users text box allows perform full-text search target user accounts platform. Searchable entities include any data displays List Users page columns. perform search: Back top"},{"title":"Stay Informed","url":"/cm/learnmore/stay_informed.htm","date":null,"type":"document","description":"View notifications relating to your app project and choose apps or APIs to follow.","categories":[],"body":"View notifications relating app project choose apps APIs follow. Dashboard configurable information system used view manage event notifications relating activity occurs platform account. more information notifications newsfeed functionality, enable disable email notifications, notifications work?, information displayed Dashboard? Back top Notifications displayed top Dashboard. information displayed Dashboard? Back top Dashboard supports discussions, ticket, alert, API Access Request App Team Membership Request newsfeed types. following table illustrates relationship each newsfeed type each platform Board, shows newsfeed types display Dashboard. Back top newsfeed user's Dashboard filtered using sort controls following sort controls: Newsfeed Sort Controls Back top platform allows monitor activity API view API’s Board items own Dashboard along Board items apps’ Board any API’s monitoring. enables customize Dashboard give single view news most interested several options use platform keep up-to-date discussions tickets API. monitor API activity Back top API Details API Board include Follow function allows add API newsfeed selected API Dashboard. add API newsfeed Dashboard: Back top previously used Follow function remove API newsfeed selected API Dashboard, use Unfollow function API Details API Board page. remove API newsfeed Dashboard: Back top App Details App Board include Follow function allows add app newsfeed selected app Dashboard. add app newsfeed Dashboard: Back top previously used Follow function remove app newsfeed selected app Dashboard, use Unfollow function App Details App Board page. remove app newsfeed Dashboard: Back top"},{"title":"Test","url":"/cm/learnmore/test.htm","date":null,"type":"document","description":"Test your app and monitor its performance.","categories":[],"body":"Test app monitor its performance. platform provides following app testing tools: Dev Console Developer Console (Dev Console) web-based REST client allows test different APIs context application. accessible Apps Dev Console page apps add platform. Performance Monitoring Apps Monitor section includes reporting tools monitoring performance app. Based real-time data reported through monitoring tools, troubleshoot potential problems app and/or API. Back top submit API Access Request receive approval Admin Team, given access Sandbox endpoint use testing environment. Common areas test include testing behavior apps API calls verify app behaving expected, testing app simulated transactions data, checking flow information app predictable expected information expected format), check app processing API results correctly, test error handling usability. using testing environment, experiment different scenarios make adjustments needed make sure app works expected API. Back top Examples test clients use send REST requests include: Google rest-client, RESTClient Firefox Add-on, soapUI. Back top Developer Console (Dev Console) web-based REST client allows test different APIs context application. accessible Apps Dev Console page apps add platform. API added platform assigned \"API Consumer Application Security Policy\" used identify (authenticate) application attempting consume API determine authorized not. policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth default policy assigned APIs. policy administrator add additional custom security policies based requirements. application connected API (through API Access Request process), application security credentials you've assigned app (via App Details Security Credentials) work conjunction API security policies. request message sent API must obey security policies assigned API request rejected. Note: App contracted API (API Access Request) includes more licenses, Dev Console display operations App allowed access API based API License configuration. Dev Console allows test different APIs context application verify use API app. example, may Before using Dev Console, must: Dev Console includes API drop-down displays list APIs app currently connected select API drop-down, platform analyzes API configuration security policies assigned API populates fields appropriate information. After Dev Console populated, configure each test case click Run following illustration shows Dev Console Bing VirtualEarth API loaded. Continue test app Dev Console? example walkthrough illustrates test app Dev Console. Back top following procedure provides typical example use Dev Console test app. more examples test app using Dev Console, experiment many popular APIs currently available site. Many APIs include \"Getting Started\" documentation API Documentation section includes custom Dev Console testing procedures illustrating variety different test scenarios. following example illustrates establish request verify response header content. example uses Facebook API. Pre-conditions Procedure following example illustrates establish request Params verify response header content. example uses Facebook API. Pre-conditions Procedure Back top following procedure provides simple example use Dev Console test authorizing app OAuth subsequently sending request. Pre-conditions Procedure Back top"},{"title":"Tutorial (OAuth Setup)","url":"/cm/learnmore/tutorial_oauth_walkthrough.htm","date":null,"type":"document","description":"A tutorial for OAuth setup.","categories":[],"body":"OAuth setup process involves series configuration tasks performed different roles Site Administrator, API Provider, App Developer) achieve end result being able authorize app using OAuth Provider. quick start provides end-to-end walkthrough illustrate overall process roles performing each task. walkthrough includes links more detailed topics help. Site Administrator API Provider task performed Site Administration Domains section using Add Domain function. Resource Owner domain identity store defines OAuth Providers establish access permissions Selecting Resource Owner typically based most common method users accessing API application Google, Yahoo, Facebook, etc.). Note: Configuring more Resource Owner domains prerequisite configuring OAuth Provider domain. Configured Resource Owner domains automatically populate OAuth Provider domain user interface required input configure OAuth Provider domain. SiteMinder LDAP Skip step using Policy Manager SiteMinder LDAP Identity System integrated configured support Single Sign-On Identity System already display \"Resource Owner Authentication Domain\" drop-down menu Admin Add Domain OAuth Provider Wizard. task performed API API Details section using OAuth Details function. Resource Owner OAuth Provider domains must pre-defined Site Administrator available selection API OAuth Wizard. task performed App App Details Security Credentials section using Show OAuth Details Edit function. Note: type security credentials required based grant types supported OAuth Provider API app connected using. Configuring OAuth app required API OAuth configuration using Authorization Code grant. Performed Site Administrator Before configure authorization domains, must install Resource Owner OAuth Provider domains via SOA Software Administration Console. Site Administrators refer Community Manager Installation Guide [available SOA Software Support Site] complete installation instructions. domain types supported? list features descriptions. Note: task performed part initial platform setup process. Performed Site Administrator API Provider first step OAuth Provider configuration process identity target user base require authorization logging application. example, users typicall use Google method performing external login, require OpenID identity store. users typically use SiteMinder method performing external login, require LDAP identity store, etc. SiteMinder LDAP Skip step using Policy Manager SiteMinder LDAP Identity System integrated configured support Single Sign-On Identity System already display \"Resource Owner Authentication Domain\" drop-down menu Admin Add Domain OAuth Provider Wizard. configure OpenID Resource Owner Domain: configure LDAP Resource Owner Domain: Performed Site Administrator API Provider After configuring Resource Owner Domain, second step configure OAuth Provider domain. configure OAuth Provider: Performed API Provider After Site Administrator API Provider configures Resource Owner OAuth Provider domains, available API Details page via OAuth Details function. configure OAuth API: Performed App Developer configure app OAuth: Performed App Developer test authorizing app OAuth send request: Back top"},{"title":"Community Manager Reference","url":"/cm/reference.html","date":null,"type":"document","description":"The Community Manager Reference Documents","categories":[],"body":"documents pages refernce section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"Building Successful APIs","url":"/cm/res-building-successful-apis.html","date":null,"type":"pdf","description":"The eBook shares proven best practices that enable businesses to realize success from APIs and ensure appropriate security and system management or running up unsustainable costs. Taking a holistic, integrated approach, it blends technology and business-level issues that affect API development.","categories":[],"body":"soa.com Building Successful APIs soa.com Table Contents Introduction....................................................................................................................... Creating API Platform................................................................................................ Developer Portal API Framework Server Platform Sandbox API Security Management API Lifecycle Management Planning API Business Purpose API Costs Benefits API Prioritizing API Structure Business Support Manage API Designing Building API Defining API Requirements Usage, Content Functionality Constraints Leveraging SOA Investment Separating Functional Non-Functional Requirements Defining API Specification Designing API Running API........................................................................................................... Declaratively Support API Non-Functional Requirements Manage API Quality Service (QoS) Monitoring API Usage Sharing API Interact Recognize Developers Create SDKs Document API Make Testing Against API Easy Monetizing API SOA Software soa.com Introduction midst API revolution. pace change rapid doesn't make sense list reasons explosive growth development Application Programming Interfaces (APIs). time release document, list grown new uses APIs already created. Given amazing growth diversity uses APIs, makes sense resource use help understand best way creating APIs. purpose document describe general best practices providing API internal users, external users, combination both. discuss specific technology examples broad business-level issues affect API development. Our assumption involved development management APIs. not API Owner, very least considering creating APIs wish understand subject more depth. document covers following conceptual topics: Creating awareness challenges opportunities inherent APIs. Determining business requirements drive API development. Understanding API does. Creating infrastructure platform host APIs. Describing changes needed business successfully launch operate API. Supporting development community API. soa.com Creating API Platform first faced need build API, probably create diagram similar Figure API owner building API top down. think customers' needs, apps meet those needs, APIs connect those apps backend systems. However, through process, likely notice mismatch between requirements capabilities backend applications, data sources, integration platforms security systems. fill void, need create API platform following capabilities: Developer portal Sandbox API Framework Server Platform API Security Management Option on-premise deployment, hybrid cloud/on-premise deployment API Platform-as-a-Service (PaaS) need ensure lifecycle processes around API development conform extend existing processes product software development. Figure API Ecosystem soa.com Developer Portal Developer Portal focal point activity around API. provides set capabilities critical attracting interacting community developers, including: API promotional marketing material describes value API developer community. API document management host support technical legal documentation relating API underlying data. Forums, blogs ticket management support developers. App registration, security credential provisioning certification services manage lifecycle Apps being built. better more interactive Developer Portal more engaged loyal developers API. goal Developer Portal inform empower developers. more loyal developers API, more Apps they'll produce more Apps produced means greater likelihood more customers transacting through API, means greater return investment API. Figure Developer Portal soa.com API Framework Server Platform number ways expose API, custom code variety platforms more complex Business Process Management (BPM) mashup engines. Choosing right platform based two key factors: number, type abilities development resources disposal. presence complexity backend services data sources need integrate. organization team developers lightweight backend green field environment) obvious choice pick REST framework platform choice simply develop API. hand, need compose API number backend systems may consider more declarative option such mashup engine. tools attempt lighten integration burden allow remain agile possible set dependencies. danger getting bogged down integration effort, make sure use platform stub API allow parallel development. section more information API development. Figure API Composition soa.com Sandbox Sandbox testing environment App developers. Just default test against test data, set ecosystem occurs App developers using API. Sandbox test platform allows developers make API calls observe results. Sandbox API connected set test services test environment, Virtual Test Services offered leading test products vendors. App Verification another benefit Sandbox offers both organization its App developers. Once App built tested App developer organization needs assured App good Corporate Figure API Sandbox citizen. behaves way supposed Sandbox allows verification testing App recording results. Just quality Developer Portal major determinant API popularity, Sandbox. Ease use configuration very important. hard, takes long, configure won't used. won't used, cannot expect any good quality Apps produced. soa.com API Security Management Being able secure manage API declaratively paramount importance. Security, particular, important API world, APIs usually exposed Internet risks brings API platform must support non-functional requirements. allows API developers focus implementing business logic without being slowed down implementing capabilities such logging security each API. Ideally, API Platform support declarative, policy-based mechanism attach nonfunctional capability API, either total, operation level. policy may describe particular authentication mechanism, authorization rule, logging level, failover process followed. Security always hot topic. becomes more enterprises begin discuss APIs, let's spend bit more time topic. Figure API Security Management means API Platform must ability secure manage API quickly, easily, correctly. soa.com API Lifecycle Management addition important technical capabilities API Platform, must consider integrate existing SDLC processes. API Platform must give organization ability guide define its roles, processes, procedures ensure defining, building running API always consistent correct. Figure shows complete API platform looks Compare Figure organization opt build buy capabilities. Please note while Figure implies API Platform deployed onpremise, Platform components either: Bound together premises Bound together premises Platform-as-a-Service (PaaS) offering hybrid, components (such Developer Portal) may premises, remainder premises. Figure Choosing topology another usually combination security, performance, cost. Figure API Lifecycle Management soa.com organization may choose host whole API Platform premises regulatory security concerns, need control implementation access components, simply API consumers internal. Conversely, organization may choose utilize PaaS offering API Platform provides quicker time-to-market, more cost effective reduces management load. Lastly, organization may choose Hybrid topology Developer Portal provided service, remaining components kept internal. keeps Figure API Platform-as-a-Service costs management overhead down most naturally externally facing component, while securing optimizing API performance retaining remainder on-premises. remainder document describe detail Plan, Build, Run, Share lifecycle activities supported existence API Platform. soa.com Planning API Few things life business done very without plan. APIs different. effective API delivers business value needs planned thoroughly. same time, encourage evolve planning process remains flexible enough manage inevitable changes occur fastpaced, unpredictable world applications APIs. major goals driving planning API: Determine business purpose API. Understand cost/benefit outcomes business intended users. Agree priority delivery schedule API. Structure business support manage API. Business Purpose API fundamental premise API planning API exists serve business purpose. never API \"just While may useful hold exercises creative thinking API developers, any API gets serious resource investment must answer business need. API designed serve distinct technical purpose ideally map support, business need. API generate new opportunities, streamline business functions, facilitate new partnerships. API may created any number reasons, form function API driven requirements business. Business purposes API may include: Driving more traffic company Website portal. Building community around brand campaign. Providing self-service options customers. Providing access online catalogs inventory. Expanding customer base users mobile devices. Exposing core functions internal users controlled manner. Exposing core functions external users controlled manner. soa.com Refactoring business processes delivered services. Refactoring technology landscape enterprise, solving issues Bring Own Device (BYOD) trend creating. Facilitating merger acquisition another business. business reasons developing specific API part controlled list defined senior executives very beginning project, team never loses sight goals. list revised needed based changing needs conditions. Figure importance aligning API delivery Enterprise Strategy soa.com Once purposes identified API, used drive overall API strategy. help identify new requirements viewed prioritized time. Addressing Conflict between Business business-driven nature APIs creates clear tension between line business (LOB) managers. APIs add powerful new element mix, active involvement outsiders strategy planning. API technical construct must create support, though API project being driven non-IT people use, sometimes free charge, outside technologists. seem difficult unrewarding challenge However, popularity success APIs general indicates challenges not insurmountable rewards great. truth APIs perfect vehicle marrying discipline professionalism staff freethinking agile world Mobile App developer freelance developer. become home professionals understand risk relied identify manage risk behalf enterprise. abundance skilled developers make business create new solutions integrating software many different businesses sources. share APIs developers, share apps customers, everyone wins. developer pool make enterprise's products more valuable without asking time product managers marketing experts. products become more valuable share API opens door new capabilities. developers' products become more viable tie enterprise products. most efficient effective way APIs. APIs used quite while, advent more ever-present Web services cloud-based applications, truly become most crucial elements process getting product hands more customers. API makes product more attractive, not just customers, customers That's network effect action, builds more interesting marketplace products. soa.com API Strategy API isn't worth unless you've figured its purpose fits overall API strategy course, flow business strategy. best API strategy frees enterprise focus best while same time allowing its ecosystem partners developers contribute own strengths. developers people product opportunity. provide framework foundation. provide insight skills. world benefits better products, organization benefits expanded bottom line. API strategy driven business strategy business purpose list. business strategy retain more customers, API set generates \"stickiness\" first priority. hand, strategy generate better market awareness products services, APIs aimed creating new sales channels business. senior business staff, may representatives organization's most prolific successful App developers team implies mature organization gone through two API delivery cycles). end document clearly defines APIs needed strategy lifetime clear definition strategy lifetime mapped either existing new business functions, turn, mapped existing new functions. soa.com Writing API Strategy Statement may pull together API Strategy Statement encapsulates thinking vision accompany API strategy document, suggest through exercise putting together. Making sure key players agree clear, simple strategy statement, making sure everyone team board helps ensure project starts continues right track. side benefit differences vision direction come light resolved before project starts. example, API Strategy Statement ERP platform focused growing its reseller channel different verticals might read: \"Our API strategy based developing APIs enable reseller partners create industry vertical add-on solutions, fulfilling business objective revenue growth building closed, highly professional developer community creates applications monitor govern closely. soa.com Costs Benefits API Having decided \"why\" respect business drivers, let's focus point, more detail required. might need more analysis following: Existing APIs, any Planned APIs haven't yet delivered. urgency delivery possible staging delivery. Whether requirements require API Whether purely externally facing API, internally facing, both. Whether existing Services service-oriented architecture (SOA) leveraged either partially wholly. You'll notice SOA, types analyses carry planning SOA services. difference API stage just another asset. soa.com Prioritizing API Once you've decided \"why\" respect API program, consider point, clear understanding business reasons API, alignment business strategy, new updated API strategy. analyzed costs, benefits, target markets both users consumer developers, leading defining API specification. last piece API plan provide roadmap clearly prioritizes delivery each API growing list business-dependent APIs. Communicating roadmap critical step information provided sufficient allow any Manager understand API needs designed, why being built, its importance funded. Create API Roadmap creating roadmap, important phase delivery each API prioritize each phase separately based its relevance business strategy available resources. Given amount information collected past planning phases, roadmap usually includes references API Specification Strategies. soa.com example, ERP solution developers add industry vertical capabilities through API, roadmap might look something API Program Factor API feature set Priority Platform support Developer community Strictly invitation Enable applicants sign online approved access after department review. API Specification API Strategy http://docs.org.c om?doc=blah http://docs.org.c om?doc=statblah http://docs.org.com?d oc=blah1 http://docs.org.com?d oc=stat-blah1 http://docs.org.com?d oc=blah2 http://docs.org.com?d oc=stat-blah2 Limited open community. Access general ledger REST Add access logistics management REST SOAP Complete application access REST, SOAP, POX Phase Phase Phase III Table API Roadmap Template soa.com Structure Business Support Manage API line just everything document, changes roles required deliver successful API. following list roles significant successful API development project. either create new positions organization assign additional responsibility existing roles: Product Manager It's important realize API, unlike previous activities enterprise, first class product organization--something critical cellular offering Telco, loan type product financial organization. must API Product Manager, especially Enterprise plans more API. person API Product Manager role manage team, most likely combination direct reports matrix managed reports parts enterprise, through Plan, Build, Run, Share lifecycle described document. addition, API Product Manager responsible branding marketing APIs, costing, tracking, billing API usage. Community Manager Community Manager directly supports community App developers. responsible making sure developers derive value valued company community members. role notions introduced Section Sharing API. Community Manager Ensure Forum interactions frequent lively, not caustic developer interactions Timely, diligent, not intrusive moderation key. Remove illegal content spam. Ensure software development kits (SDKs) remain relevant needs developers. Ensure documentation line version APIs being offered. Coordinate support activities API owner soa.com Technical Writer Documentation critically important success API. professional technical writer engaged ensure documentation accurate, complete, accessible, delivered coordination version release schedule. may not full-time role depending size number versions APIs being delivered, very important role given developers cannot use API without documentation. role liaise closely support staff ensure any reported issues documentation remedied. API Support Staff API Support staff responsible timely support API. Unlike traditional support roles, people more front-line software product support staff. API support staff not responsible correct smooth running API normal sense, manage respond trouble ticketing system driven Community. report Community Manager. API support personnel scheduled monitor respond any APIspecific questions forums community. Lastly, responsible API Sandbox. Sandbox set test APIs corresponding dummy data optional App developers use test apps. more information Section Developer While seem most obvious role, still needs defined. line between developer support staff may quite blurred, especially during early phases delivery API, small organization. any case close relationship between two roles. soa.com developing API, developer responsible following areas development: SDKs available via community. API Sandbox. Non-functional capabilities, such security, logging, monitoring APIs not provided API Platform Section Operations API day, business asset. asset types, operations asked manage asset support API's nonfunctional requirements. Once API goes live, continuous operational support must. soa.com Designing Building API discussed previous section, it's important API Strategy Roadmap place before beginning development. roadmap structure development team deliver next API, next version existing API. API best designed built? goals must achieved order organization confirm built API according best practices? Understand clearly articulate detailed requirements API. Make sure agreement between key players before development starts. Separate functional non-functional requirements develop functional requirements. Iterate through API development process. Utilize existing SOA investment. Defining API Requirements Defining API does separated API does point, defining functional characteristics API, specifying interface, developing model use cases user stories. Implementation details purposely deferred until later. several artifacts help refine requirements. include: Use case models show relationship between actors use cases. Use cases describe scenario--the interaction between API user--as expected result. User stories small narrative descriptions describe specific interaction between API user system. soa.com Not every requirement need described detail, team might choose slightly modify artifacts use define requirement. However, set described provides best practices approach elaborating requirement. might find choose approach. right organization really depends organizational culture. Use Cases Use Case Models tend more prescriptive detailed, whereas User Stories more compact lend themselves better iterative approach. Whatever method methods choose, important thing explain requirements clearly, sufficient detail, API design development proceed smoothly successful completion. Use case models, use cases, user stories help illustrate requirements very practical realistic way, invaluable helping keep project focused real-world user needs. Identify API Used way API used affects several issues such technology choices, regulatory issues, security. example, API that's being used perform financial transactions more constraints delivering advertisements. ways API might used include: mobile application Delivery banner ads Web page part mashup Servicing financial transactions Providing self-serve portal Enabling connection new business existing enterprise soa.com API Usage Patterns users API help determine technology issues may determine content each development phase API being delivered. Consumers API include: Internal consumers External unregistered users External registered users Business partners general best plan least controlled set users identifying API function content. example, API intended internal users, chance future API made available business partners customers, designers focus external users determining API function content. may good idea develop API initially internal consumption before making available externally, design not factor external requirements future releases. Internal deployment may help identify new requirements added list possible features future development phases. allows API provider gain experience design before making public. important API provided external users, signals long-term commitment API, implies API stable. Regulatory Issues Almost any business activity affected form regulatory activity. business decides provide API consumers, probably requirement type regulatory compliance. activity business domain expert must identify applicable guidelines make sure included requirements list first release. usually easier product owner plan types issues earlier development phases retrofit requirement. Examples regulations might affect API development USA include PCI DSS payment card data security standard, HIPAA governs privacy healthcare information, FERPA Family Education Rights Privacy act). many others USA, each country its unique regulations. Key factors consider industry API deployed deployment areas. soa.com Usage, Content Functionality Constraints Not enterprises happy \"showing family jewels\" part API successful, must offer value those use must seen valuable, core part enterprise offering not likely case senior management unhappy risk being created exposure content functionality worried undesirable use API. It's important think through, discuss, agreement constrained API, phasing relaxing those constraints any). soa.com Leveraging SOA Investment organization through expense, trials, effort creating successful SOA infrastructure, makes sense leverage investment. design constraints modern API similar not identical those Services SOA. Design API different short cuts. However, organization successful SOA build API becomes largely exercise mapping rather fully blown coding. Separating Functional Non-Functional Requirements Not requirements functional nature: availability, scalability, logging, security, performance critical successful use API, none anything business process domain API's resource. information gathered during phase may understood before project begins. However, documenting non-functional requirements might identify new requirements not originally considered must added project backlog. affect cost viability project. Lastly, most Services SOA rendered non-reusable non-functional incompatibilities. certainly true APIs. example, fact particular security mechanism assumed hard-coded service, consumers required different security mechanism, means service/API not reusable. true any non-functional capability, including logging fail-over. two big differences between functional non-functional requirements: Non-functional requirements more variable functional requirements. Implementing non-functional requirements declarative policies quicker easier implementing functional requirements. differences between it's important separate two types requirements. soa.com Defining API Specification Once you've worked through points chapter, strategic groundwork done. Once you've identified mapped business strategy APIs, really API requirements, it's time put together API Specification. specification adds detail needed sensibly understand API intended its importance respect business strategy. Designing API APIs lightweight, self-describing, agile interfaces lend themselves easy access re-use. not SOA Services another name. must keep mind designing building APIs. being said, process designing developing APIs comparable required any software development projects, although notable differences spelled remainder section. Guidelines Apply Build Stages remainder chapter set sections collectively define steps follow designing building API. Throughout sections, keep mind following guidelines: Begin short section already defined specification covers functionality built, bearing mind stay flexible API definition, means omitting detail. Code API become more confident moving right direction. realistic: can't please every stakeholder. Many API designs suffer excessive constraints. definitely make mistakes. real world reveal able correct API evolve. soa.com Develop Simple API Structure Define object model. major differences between API design SOA Service design API's Data, Object Oriented, while SOA Services tended Process Oriented. Objects map resources, resource first class citizen protocol. Therefore, before anything else must object model defined API. stated Section already successfully running SOA Object model most likely already exists. Determine resource relationships based object model represent relationships resource. While relationship definitions consequence good modeling being stated resource definition must include explicit definition relationships ensure resource returned, result API request, relationships returned. greatly enhances support HATEOAS later definition). Build API Serve resources collections stubbed code started. help unit tests allow parallel development. API supporting Web client, stubbed backend greatly speed development. Conversely, composing aggregate API using composition tool mashup engine create operation time. Write API frequently, starting early process. API not complete, start programming learning process save time later avoid unnecessary implementation issues. applies either approach, both custom code mashup. Include resource relationships support HATEOAS. HATEOAS stands \"Hypermedia Engine Application State\". referring same \"state\" Representational State Transfer (REST). short HATEOAS means resource representation returned results API request representation not includes information defines resource, contains valid relationships resource resources state, valid states resource transition words resource self-describing. Determine strategy retrieving updating partial data. per statement made very start chapter, API's lightweight. soa.com need latency introduced fact live Internet. not often sensible return every resource meets requirements API request. API must designed consistent scheme allow App request partial set satisfying resources. Consequently, modification result set needs supported proper adherence HATEOAS resolve requirement. Add validation. Once following steps implemented successfully (remember partially per resource per general guidelines) Validation any resource subject PUT, POST, DELETE call (Usually JSON, may XML) developed. Use error code define transfer exception information. enable handle those exceptions client side. Build Client Keep simple. Use technology most familiar supports API technology set. tool such SOAPUI. client become invaluable both development testing. Make sure automated testing. important point. Once automatable incorporated API build test process. ensure consistent delivery new versions API. Add Non-functional Requirements Mime type Security authentication authorization Caching Paging Load balancing Fail-over Disaster Recovery Logging/Auditing list above good representation likely non-functional requirements met API, although list not exhaustive. Please aware not meant code solution requirements. stated section quite opposite suggested. good API Platform available organization supply components soa.com support solutions declaratively. important. Maximized re-use flexibility achieved non-functional requirements supported mechanism. being said, adding support non-functional requirements late stage does not imply less important steps mentioned. It's just more practical ensure required functionality supported before adding requisite complications non-functional support. Apart security, two broad types non-functional requirements list represents. first performance, second resilience. Both types solved combination Network Architecture API Platform. Platform gives ability support Load Balancing, Fail-over, Paging, Logging Auditing, Disaster Recovery, while Network Architecture provides Caching, Load Balancing Fail-over. Notice Load Balancing Fail-over mentioned under both categories. supported both organization choice using concert each ultimate solution dependent organization needs capabilities. Standardized Content Section covers requirements elicitation business technical regulatory requirements. those requirements defined build support requirements. First, match capabilities API Platform ensure gives maximum coverage possible incorporate remaining non-functional requirements API design. good API Platform support many non-functional capabilities possible, stated section Technical Environment API face constraints flow its technical environment. include: Server functionality Server capacity Client technology Security soa.com Network capability design Scalability High Availability Disaster Recovery amount traffic flow through API help identify required server capacity functionality. dedicated API server may required order provide required capacity isolate core business processes. addition, type user understood documented during charting technical environment constraints. example, user base include anonymous users, registered clients, combination both. soa.com Running API APIs serve businesses needs need function accordance business expectations. true systems run business; however, APIs different touch many external players. chapter discuss takes make production API successful asset not problem enterprise. apply traditional values distinct task running API. launch API, may feel corporate chill run down spine. really happening? enterprise really offer ability drive its internal processes anywhere Internet without ability decide wants actually offering ability drive databases transactional services without ability decide those expensive assets used specific external user any time? seriously create external consumers associated brand cherished customers without first being able test approve consumers? You'd think answer questions might tempted switch API right away. truth many organizations leave questions unanswered until after API built. chapter includes following recommendations running API: Support non-functional requirements API Platform, not each API. Implement contracts API consumers enforce SLAs. Provide support API monitoring. Declaratively Support API Non-Functional Requirements discussed section API Platform provide ability. Therefore, point, development team engage runtime governance team declare requisite non-functional capabilities API part API Platform. Section discussed need separate function nonfunctional requirements lead, turn, function requirements being soa.com implemented section non-functional requirements implemented, declaratively via API platform. makes such platform powerful, coding, just quickly adjustable definitions referenced API called. Authorization Authentication table below shows common authorization authentication options APIs. Authorization Authentication options API keys (Yahoo Google Maps APIs) Fairly open, API key gives API provider way know identity each caller. API provider use information maintain log establish quotas user. Usernames passwords /OAuth (Twitter) Session-based authentication OAuth OAuth designed solve application-to-application security problems. technology allows user give API site access account another site, whole importantly, part, without sharing password. Instead sharing password, user logs grant access; OAuth \"token\" provides continuing access requesting app. additional benefit user revoke OAuth access any time. Two-Way SSL, SAML, WS-Security... API primarily used \"enterprise\" customers. Provide greater security; used more sensitive data, technologies work application-to-application communications. more complex associated API. Comparisons soa.com API security, recommend OAuth, new improved authentication authorization standard. OAuth takes lessons learned XACML SAML SOA world applies problem exists current crop Web Security practices. current security solutions assume two actors, consumer provider. traditional client-server authentication model, client uses its credentials access its resources hosted server. OAuth introduces third role model: resource owner. OAuth model, client not resource owner, acting its behalf) requests access resources controlled resource owner, hosted server. order client access resources, first obtain permission resource owner. permission expressed form token matching shared secret. purpose token make unnecessary resource owner share its credentials client. Unlike resource owner credentials, tokens issued restricted scope limited lifetime revoked independently. Why important? unlike Web's traditional two-party, client-server model, API extract more value mashups APIs third party such mobile App. problem order applications access user data sites, ask usernames passwords. Not does require exposing user passwords someone else often same passwords used online banking sites provides applications unlimited access. anything, including changing passwords locking users OAuth provides method users grant third-party access resources without sharing passwords. provides way grant limited access scope, duration, etc.). example, Facebook user give another app access, via OAuth, contacts list without allowing app create posts. three OAuth versions; newly released most common implementation fixed security vulnerability OAuth although being newly released having simpler handshaking protocol better support JavaScript, may become more common version implemented short period time. looking platform implements OAuth support API's make sure supports least delivery date support soa.com Protecting Data Detecting Threats APIs use Web technologies open Internet, API developer encounter security threats commonplace ecosystem. Security non-trivial issue APIs, especially considering expose internal systems unknown outsider users. Consider following API security risks, determine steps might need take threat prevention, detection, handling: Malicious Code Injection manipulates security design flaws technologies send valid code services using SQL, LDAP, XPATH, XQuery statements open interface any user take control cause harm. Denial Service (DoS) Attacks -cripples API overwhelming requests \"Request Burst\"). Service Information LeakageAn API inadvertently leaking data its configuration, resulting ability take control expose private data. Broken Session IDs, Keys Authentication- Exposure unauthorized access through authentication factors not functioning poor security design technology bugs. API Data Eavesdropping non-secure API communications expose data access while transit. Tampering API Requests Responses- attack manipulates API request response parameters exchanged between client services goal modification data. Example \"Man Middle\" type attacks. Manage API Quality Service (QoS) OAuth enables enterprise resolve use API. However, many times use Excessive API use more damaging costly API provider use another side discussion. Good, well-built designed APIs monetized. monetization not countenanced management, nor accepted API users, unless SLA agreements managed, automatically, API. best way easily definable, modifiable, actionable QoS policies based reliable metrics. soa.com First, look API provider. API interface, door organization's business, defined allowed organization. representative any organization allowed implement critical business system without ability monitor control critical factors such accessing usage levels, performance. Therefore, doesn't make sense implement API, exposes critical business capability Internet, without similar controls place. Conversely, API consumer not likely use API don't guarantee availability performance API, since interruptions service adversely affect consumer's ability deliver its own business services, whether monetary technical. best practice addressing issues define manage service level agreements (SLAs) through contracts standards-based declarative. agreements place, API manager define absolute performance availability constraints API, specify such alerts issued constraints violated. Over-use treated throttling, while under-capacity treated dynamic provisioning additional capacity needed. Thus, organization its department assured API not perform any worse expected, not consume any resource expected. API consumer guaranteed availability performance requires, whether paying guarantee not, addition, consumer guarantees not require, use, anything more established. Please note any guarantee leads SLAs Quota policies must backed legally enforceable agreements between consumer entity enterprise, otherwise just defining policies monitoring purposes process defining contract between App API summarized follows: Determine absolute maximum capabilities API (max supportable throughput, response time, availability, etc.) Define SLA policy API warns criteria, alerts between depending criteria. soa.com Analyze SOA Services support API systems, not SOA infrastructure) apply SLA policies services match SLAs defined API. Determine capabilities required App codify SLA policy App, warnings alerts agreed. Define quota policies cease allowing access API, based alert levels SLA policy defined step Define contract specifies identity consumer API includes app SLA quota policies defined steps summary, contract defines app access API, constraints (specified Plan). API owner know API additional resources allocated load balancing load sharing strategies defined limits its SLA policy exceeded. It's worth paying particular attention step above process. most enterprises, implementation API not likely reside code supporting App Server. Rather services already exist organization's SOA backend systems organization not yet created its SOA). case, defining SLA policies managing services using critical managing API itself, reason fact something causing SLA transgression next step root-cause analysis services supporting API anyway. Having process place, utilizes Plans Contracts, allows simpler consideration charging App owner based agreed Plan. Monitoring API Usage not possible implement ability manage API's quality service (QoS) without ability monitor activities usage API. API management solution enable monitor performance availability API its consumers. best practice monitor aspects usage API, such most popular consumers, most popular operation, operation consumption per consumer. Analytics running API very useful planning extensions API, understanding actual popularity money making ability API comparison projected. soa.com Furthermore, API involved financial transactions, might required make API metrics part audit process. Law compliance policies require adhere specific security practices. responses enable detection unauthorized users. Lastly, root cause analysis heavily relies logging means providing window actions API time error. Without deep, easily variable, logging capability, API issue resolution become horribly hitand-miss activity. API monitoring must meet needs three key roles: App Developer/provider API Developer API Operations staff First, App developer need ability requests responses API look treated API. ability able gauge app's impact API via common usage performance metrics. not same formalized SLAs mentioned previous section, metrics help determine SLA conformance. Second, API developer need logging help debug code while building API, need able metrics API performance during stress testing. Lastly, once API production, operations personnel need logging help root cause analysis any usage issues might arise, need monitor metrics app usage API's performance relation app. instance, might need provide auditors verifiable logs API requests soa.com Sharing API Once you've put hard work investment resources creation production API, equally hard work sharing popularizing begins. Supporting App developer community critical factor successful adoption API. App developers drawn API obvious being supported API provider colleagues. Without vibrant satisfied developer community, API unlikely used wide audience. Ensuring profitable engagement developers involves such considerations interactive forums, excellent documentation, ability test against API, Software Development Kit (SDK) makes easier deliver API external developers. best practices supporting API once it's released: Interact recognize API Developers. Create SDKs make life easier API Developers. Create great documentation API use Make testing against API easy possible. Monetize API assist future cost benefit analysis. Interact Recognize Developers Developers typically communicate developers. App Developers particular may work geographically dispersed teams still share thoughts ideas. API provider provide environment makes easy. API management tool include following features help give developers information interaction need: FAQ: frequently asked question section easily quickly solve many questions new developer good FAQ expected greatly enhance initial developer experience. Blogs: Provide blog chief technical designers discuss options, opinions, possible enhancements API. Developers know API may evolving. several good examples soa.com used model. example, good place share implementation tips, information upcoming releases. issues API, developers appreciate being notified pitfalls ideally, workarounds. Forums: perhaps most valuable communication tools available. allows developers share problems, solutions, suggestions each forums constantly monitored API provider proper content, most cases API provider not major participant. medium developers. Access API developers: Providing way key external developers communicate directly API development team very effective. needs controlled prevent overloading internal team; however, providing e-mail address appropriate privacy measure implemented, course) external developers ask specific questions make suggestions another way foster community developers. developers likely thrive efforts recognized. best champion API happy, informed knowledgeable developer constantly using community help App Developers. ways recognize developers include: Monetary: Establish monetary incentives higher levels adoption usage API. Peer Recognition: Establish superstar criteria feature outstanding developers shown new innovative ways use API. Peer recognition developer community strong incentive. Involvement API design strategy: developer invited help work through future API, bring unique insight API owner. developer reverently treated App Developer community, more powerful advocate use API. soa.com Create SDKs Making easy possible App developers use API may necessitate creation software development kit (SDK).For instance, platforms/devices support OAuth REST JSON not simple others. Consider following reasons might build SDK: Speed adoption specific platform example, Objective-C SDK iPhone. Lots experienced developers just starting Objective-C, SDK might helpful. Simplify integration effort required work API key use cases complex need complemented standard on-client processing. Reduce bad inefficient code might slow down service everyone. Create developer resource Good SDKs help users write good code providing good source code examples. Market API specific community upload SDK samples plug-in page platform's existing developer community. Foster adoption across devices--you might produce APIs currently popular platforms; providing corresponding SDKs each device help encourage developers across boards use API. said, may not provide SDK. example, API designed adoption, well-documented built using standards-based approach, developers may able rolling without client SDK. Below reasons might decide against providing SDK: Resources it's tough provide SDK each platform target. You'll choose carefully. time-consuming expensive create SDKs. (Tip: Packaging internal samples test cycles provide good starting point SDK development.) Maintenance versioning convincing clients upgrade newest version rough. capturing \"local flavor\" each language support challenge. Complexity each platform might use cases don't expect, such keeping application-level secrets clients, debugging, forth. soa.com More not necessarily better few well-documented code-level samples often best resource. Facebook provides Android, iPhone, JavaScript, PHP, Python libraries documented differently), Twitter supplies none. Facebook more resources still difficult, times, understand use Facebook APIs. worth acknowledging delivering SDKs big job building API. discussed earlier, job not done just building API. \"Field Dreams\" API economy, building API half job. Getting App developers excited API telling others great documentation SDKs ultimately make fantastic API successful. Document API You're need well-written documentation successful sharing API. Though live interaction may better way communication, there's just substitute non-ambiguous documentation explaining complex critical notions. Ideally, documentation quality small O'Reilly textbook IBM Redbook. Anything else not used may detract use API. Best practices suggest delivery documentation via HTML, not Word PDF. HTML documents may served organization's document content management systems, HTML best means delivery. Why? content searchable, especially people seeking information via Google, Bing, any Internet searching mechanism. acts marketing tool, letting prospective API developers know great API Another benefit online documentation immediately updated, users always referring latest greatest version. Make Testing Against API Easy Everybody dislikes testing (except those make living However, testing critical factor any software development cycle. applies API, applies equally apps use API. Untested poorly tested API consumers wreak havoc API ecosystem. Not organization suffer costly support, \"traditional\" systems, App soa.com Developers users impacted. Providing means making testing easier App developers must. Remember, significant number Gen not anything don't need more compelling way. Provide Allow API Interaction Test Console gives user ability define API call result. just important testing debugging output App development understanding API does. Nothing more attractive developer able something easily immediate result. API consumer large \"dev shop\" business partner, being able embed functionality own ecosystem more striking attraction. Utilize Sandbox Unlike many development activities organization, API development involves parties not part single organizational entity. means creating number replicated environments different data not practical. sandbox provides means testing against sample data without creating another instance API. sandbox simplifies management, hence cost, API provider. More importantly, gives App developer Internet-accessible place test functionality App. Once Developer considers App ready use, ready Production, use Sandbox acceptance testing. Moving App Production simple promotion process API Platform. actual configuration code movement necessary, far API concerned, production API definition already exists. It's just App authorized access Production URLs API. Monetizing API Very few internal initiatives make money. Fewer still built purpose mind. However, best practice APIs exactly contrast SOA, make money through internal charges theory rarely practice, API monetization actually works. It's cultural, not technical, issue. parties involved creating using service part culture work paid entity result used charge any part organization. traditional perspective, idea selling soa.com access API might against grain existing culture. not case APIs. API Economy, Apps considered commercial quantity. data consume. organizations, such Netflix, valued based capability APIs. Not every organization build APIs make money. However, once successful API built, App developers invariably following: Enter business agreement use API offers ability make money App developer realized, API provider organization just not imagine. Use API make money scenario API being monetized way new business opportunity. scenario API monetized way selling access API App Developer. both scenarios, notion using API free just not entertained. Culturally, just does not happen. enterprise builds best practice API consider monetizing API its newly evolving business model, reason makes future cost benefit analysis easier more accurate. soa.com SOA Software SOA Software leading provider Enterprise API Management SOA governance products enable customers plan, build, run share enterprise services APIs. world's largest companies including Bank America, fizer, Verizon use SOA Software products harness power technology transform businesses. Gartner placed SOA Software Leaders Quadrant \"Magic Quadrant SOA Governance Technologies.\" Governance SOA Management, SOA Life Cycle Management. SOA Software's comprehensive suite products helps enterprises drive developer adoption, reach new channels gain business advantage, addressing stages API lifecycle. Community ManagerTM sophisticated developer community product help enterprises attract, manage, support developers build Apps using APIs Portfolio ManagerTM provides planning capabilities help ensure alignment APIs strategic investments business opportunities Lifecycle ManagerTM provides API App lifecycle management capabilities help customers build APIs meet current future business requirements Policy ManagerTM provides services APIs support rest product family. required API Manager Community Manager, recommended option Portfolio Manager Repository Manager API ManagerTM API proxy server providing security, monitoring, mediation runtime capabilities Enterprise API Platform-as-a-ServiceTM Enterprise API Management as-aService benefits SOA Software Enterprise API Platform delivered cloud service. more information, please visit http://www.soa.com. company recognized \"Leader\" Forrester Research Waves Integrated SOA soa.com SOA Software, Policy Manager, Portfolio Manager, Repository Manager, Service Manager, Community Manager SOLA trademarks SOA Software, Inc. product company names herein may trademarks and/or registered trademarks registered owners. SOA Software, Inc. Wilshire Blvd, Suite Los Angeles, 866-SOA-9876 www.soa.com info@soa.com http://www.soa.com/solutions/enterprise-api-management Copyright SOA Software, Inc. Disclaimer: information provided document provided WITHOUT ANY WARRANTIES ANY KIND INCLUDING WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, NON-INFRINGEMENT INTELLECTUAL PROPERTY. SOA Software may make changes document any time without notice. comparisons, functionalities measures related similar products services offered vendors based SOA Software's internal assessment and/or publicly available information SOA Software vendor product features, unless otherwise specifically stated. Reliance assessments comparative assessments made solely own discretion own risk. content document may date, SOA Software makes commitment update content. document may refer products, programs services not available country. Consult local SOA Software business contact information regarding products, programs services may available Applicable law may not allow exclusion implied warranties, above exclusion may not apply"},{"title":"Community Manager Installation Guide","url":"/cm/res-cm-install-guide.html","date":null,"type":"pdf","description":"The installation instructions for on-premise Community Manager deployments.","categories":[],"body":"Enterprise API Platform Installation Guide Windows UNIX Platforms Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Table Contents ENTERPRISE API PLATFORM INSTALLATION GUIDE WINDOWS UNIX PLATFORMS Preface System Requirements.......................................................................................................................... Installation Directory Guide Customer Support Chapter Installing Configuring Enterprise API Platform Overview Use Cases Setup Files SOA Software Platform Setup Files Community Manager Setup File Install Configure Enterprise API Platform.................................................................................... Step Install SOA Software Platform............................................................................................ Install SOA Software Platform (GUI)........................................................................................... Install SOA Software Platform (Console) Step Install SOA Software Platform Updates Step Install Community Manager Feature Repository Step Configure Standalone Container Instance Step Launch SOA Software Administration Console Step Install Community Manager Features Step Configure Community Manager Features Configure Policy Manager Console/Web Services Configure PKI Keys (Policy Manager Console/Web Services) Configure Database Options (Policy Manager Console/Web Services) Configure Policy Manager Administrator Credentials (Policy Manager Console/Web Services) Completing Configuration Perform SOA Software Administration Console Login Step Configure Network Director Container Instance Step Install Network Director Features Step Configure Network Director Features............................................................................... Configure WS-MetaDataExchange Options (Network Director) Manage PKI Keys (Network Director) Completing Configuration Step Register Network Director Container Run Community Manager Scripts Step Create Community Manager Tenant Step Import Tenant Documentation Community Manager................................................. Step Configure Email Capabilities Step Launch Community Manager Step Next Steps Chapter Applying Updates Existing Community Manager Deployment......... Apply Updates SOA Software Platform Confirm Installed Updates Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Manually Installing Schemas Update Existing SOA Software Platform Installation (Manual) Update Existing SOA Software Platform Installation (Silent Update) Apply Community Manager Update................................................................................................ Rollback Update Chapter Adding Policies Community Manager Tenant Organizaton Overview Tenant Default Policies Step Designate Policy Administrator Community Manager instance................................... Step Determine Policy Requirements....................................................................................... Step Add Default Policies Tenant Organization.................................................................... Step Define Policies Policy Manager (Process) Step Define Sample Policies.................................................................................................. Step Verify Policies Display Properly Community Manager Chapter Configuring Platform Certificate Authority Overview Determine Public Key Strategy Troubleshooting Configure Certificate Authority Trusted Certificates Chapter Installing OAuth Provider Features OAuth Domain Type Features.................................................................................................... Install OAuth OpenID Provider Features Identity System Domains Support OAuth Network Director........................................................................................................................... Install OAuth Provider Agent Feature Chapter Configuring Platform Login Domains Chapter Adding API Community Manager Appendix Start Stop Restart Container Instance Start Stop Container Instance Restart Container Instance Appendix Database Drivers Appendix Policies List......................................................................................... Appendix SOA Software Administration Console................................................ Overview Admin Console Organization Available Features........................................................................................................................ Feature List............................................................................................................................... Install Feature Installed Features Update Feature Rollback Feature....................................................................................................................... Uninstall Feature....................................................................................................................... Pending Installation Tasks Copyright SOA Software, Inc. Enterprise API Platform Installation Guide View Bundles Configuration Configuration Actions Configuration Properties Repository Install Container Updates Add Repository URL Apply Updates Perform System Rollback System Restart Container...................................................................................................................... Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Table Figures Figure SOA Software Platform Installation Directory--Directories Complete Installation Figure User App Internet App access business layer access Policy Manager Network Director Figure User App Internet direct access Internet Business Layer used additional security layer (DMZ) Figure Enter License Key--GUI Install Figure Introduction--GUI Install......................................................................................................... Figure SOA Software License--GUI Install Figure System Requirements--GUI Install Figure Choose Install Folder--GUI Install.......................................................................................... Figure Choose Shortcut Folder--GUI Install...................................................................................... Figure Pre-Installation Summary--GUI Install Figure Installing--Progress Indicator Figure Install Complete--GUI Install Figure Welcome Configure Container Instance--Standalone Deployment.................................. Figure Instance Name--Standalone Deployment Figure Default Admin User--Standalone Deployment Figure Instance Configuration Options--Standalone Deployment Figure Default Listener--Standalone Deployment................................................................. Figure Instance Setup--Standalone Deployment Figure Launch Admin Console--Standalone Deployment Figure Instance Configuration Summary--Standalone Deployment Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure Community Manager Installation--Available Features Tab Figure Community Manager Installation--Install Feature Resolve Phase Figure Community Manager Installation--Install Feature Feature Resolution Report Figure Community Manager Installation--Install Feature Install Progress................................ Figure Community Manager Installation--Install Feature Installation Complete Figure Manage PKI Keys Wizard (Select Key Management Option) Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate) Figure Manage PKI Keys Wizard (Summary) Figure Configure Database Options Wizard (Select Database Option--Create new database) Figure Configure Database Options Wizard (Select Database Option--Use existing database)..... Figure Specify Database Options SQL Server Figure Specify Database Options SQL Server Figure Specify Database Options (MySQL Server Figure Specify Database Options (MySQL Server Figure Specify Database Options (Oracle SID Figure Specify Database Options (Oracle SID Figure Specify Database Options (Oracle Service Name Figure Specify Database Options (Oracle Service Name Figure Specify Database Options Figure Specify Database Options Figure Configure Database Options Summary Figure Manage Schemas Wizard (Install Schemas) Figure Manage Schemas Wizard (Install Schemas Summary) Figure Define Policy Manager Administration Credentials Figure Define Policy Manager Administration Credentials Figure Complete Configuration Figure SOA Software Administration Console--Login Screen......................................................... Figure Welcome Configure Container Instance Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Figure Instance Name--Standalone Deployment Figure Default Admin User--Standalone Deployment Figure Instance Configuration Options--Standalone Deployment Figure Default Listener--Standalone Deployment................................................................. Figure Instance Setup--Standalone Deployment Figure Instance Configuration Summary--Standalone Deployment Figure SOA Software Administration Console--Login Figure Network Director Installation--Available Features Tab......................................................... Figure Network Director Installation--Install Feature Resolve Phase Figure Network Director Installation--Install Feature Feature Resolution Report Figure Network Director Installation--Install Feature Install Progress Figure Network Directory Installation--Install Feature Installation Complete................................ Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options)-- Network Director Figure Configure WS-MetadataExchange Options Wizard (WS-MetaDataExchange Options Summary)--Network Director Figure Manage PKI Keys Wizard (Select Key Management Option)--Network Director Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate) Figure Manage PKI Keys Wizard Summary..................................................................................... Figure Complete Configuration Figure Register Network Director--Add Container Wizard (Select Container Type) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) Figure Register Network Director--Add Container Wizard Certificate Not Trusted) Figure Register Network Director--Add Container Wizard (Specify Container Details) Figure Register Network Director--Add Container Wizard (Completion Summary) Figure Register Network Director--Container Details Figure Register Network Director--Hosted Services Summary Figure Email Summary Figure Modify SMTP Email Host Figure Community Manager Home Page......................................................................................... Figure Configure Container Instance Wizard--Welcome Configure Container Instance Figure Configure Container Instance Wizard--Instance Name Figure Instance Already Exists--Update Figure Configure Container Instance Wizard--Instance Configuration Summary (Complete Update) Figure Configure Container Instance Wizard--Update Complete...................................................... Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure SOA Software Administration Console--Login Figure SOA Software Administration Console--Available Features Tab Figure Administration Console--Community Manager Repository Figure Configure Container Instance Wizard--Welcome Configure Container Instance Figure Configure Container Instance Wizard--Instance Name Figure Instance Already Exists--Rollback Figure Configure Container Instance Wizard--Instance Configuration Summary (Rollback Progress) Figure Configure Container Instance Wizard--Rollback Complete Figure Policies Help Policy Manager Mangement Console.......................................................... Figure Policy Manager Management ConsoleCopy Policy............................................................ Figure Policy Manager Management ConsoleChange Organization Figure Sample Monitoring Policy Figure Sample API Security Policy Figure Add New API Wizard(Proxy Policies) Figure API Access Wizard(Policies) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Preface Figure Policy Manager Management ConsoleCertificates............................................................. Figure Policy Manager Online HelpCertificate Authority Figure Policy Manager Management ConsoleTrusted Certificates.......................................... Figure Policy Manager Online HelpTrusted Certificates Figure SOA Admin ConsoleOAuth OpenID Provider Features (Select Feature) Figure SOA Admin Console--OAuth OpenID Provider Features (Resolving) Figure SOA Admin Console--OAuth OpenID Provider Features (Feature Resolution Report) Figure SOA Admin ConsoleOAuth OpenID Provider Features (Installing) Figure SOA Admin Console--OAuth OpenID Provider Feature (Installation Complete)........... Figure SOA Admin Console--OAuth OpenID Provider Feature (Install Schemas)................... Figure SOA Admin Console--OAuth OpenID Provider Feature (Install Schemas Summary) Figure OAuth Featuresin Community Manager Site Administration Domains section............. Figure SOA Admin ConsoleOAuth Provider Agent Feature (Select Feature)................................ Figure SOA Admin Console--OAuth Provider Agent Feature (Resolving) Figure SOA Admin Console--OAuth Provider Agent Feature (Feature Resolution Report) Figure SOA Admin ConsoleOAuth Provider Agent Feature (Installing) Figure SOA Admin Console--OAuth Provider Agent Feature (Installation Complete) Figure Add Identity System (Active Directory) Figure SOA Software Administration Console--System Figure SOA Software Administration Console--Available Features Figure SOA Software Administration Console--Installed Features................................................. Figure SOA Software Administration Console--Configure.............................................................. Figure Admin Console--Repository (Add Repository) Figure Admin Console--Search Updates Button Figure Admin Console--Searching Updates.............................................................................. Figure Admin Console--Installed Features (Updates Found) Figure Admin Console--Installed Features (Updating) Figure Admin Console--Installed Features (Bundle Filter) Figure Admin Console--Rollback Changes Button Figure Admin Console--Installed Features (Rollback Changes) Figure Admin Console--Installed Features (Restart System after Rollback Message)................. Figure SOA Software Administration Console--System Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Preface Preface SOA Software's Enterprise API Platform helps drive API Economy meeting needs enterprise users collaborating around managing APIs complex environment. provides secure, robust platform companies use share APIs developer community choice. Enterprise API Platform manages, monitors, secures companies' APIs ensuring deliver level service customers partners require; security corporate customer information assets; integrity corporate brand. Enterprise API Platform includes following components: Policy Manager Provides services APIs support Enterprise API Platform Enterprise API Platform Network Director API proxy server providing security, monitoring, mediation runtime capabilities. guide provides instructions installing configuring Policy Manager, Enterprise API Platform, Network Director. installation configuration process includes installing SOA Software Platform, Enterprise API Platform features, running scripts create tenant, import tenant documentation, enable email capabilities. SOA Software Platform installed using platform-specific setup file loads \"SOA Software Platform Installation Wizard.\" configuration process performed using \"Configure Container Instance Wizard\" \"SOA Software Administration Console.\" Registering SOA Software Network Director performing using \"Policy Manager Management Console.\" SYSTEM REQUIREMENTS following table lists minimum system requirements running SOA Software Platform Windows UNIX platforms. Component Name Policy Manager Host Requirement Hardware Single CPU, 2Ghz, RAM Operating System Windows Windows Service pack Windows Service pack Windows Professional Version Service pack Windows Windows Enterprise Service pack Red Hat Enterprise Linux Solaris AIX Linux Solaris IBM AIX Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Preface Component Name Client Browser accessing Policy Manager User Interface Requirement Mozilla Firefox above Google Chrome above Database Management Systems Oracle (SID, Service Name)--Requires database driver ojdbc5.jar, version Microsoft SQL Server 2012--Database driver included Policy Manager. IBM Universal Database V9.7--Requires Universal JDBC Driver db2jcc.jar) specific installation. MySQL 5.1--Requires database driver mysql-connectorjava-5.0.8-bin.jar, version Note: After installing SOA Software Platform running \"Configure Container Instance Wizard,\" database driver .jar file must dropped \"/deploy\" directory container instance requires driver sm60/instances/<instance name>/deploy) prior running database configuration task via \"SOA Software Administration Console.\" Note: database usually not reside computer hosting SOA Software Platform. Database Sizing Guidelines base install, configuration data, consumes initial space. Each detailed transaction log consumes approximately bytes database storage space. Typically, however, transactions logged manner. means database storage space consumed every transactions. transaction rate used test 1250TPS database storage space consumed rate per hour. Assume average recorded message size Typically, however, transactions logged manner. Alerts, performance data SLA Rollup data add approximately per transactions. Memory Configuration default maximum heap size SOA Software Containers Java processes) subset SOA Software Platform product documentation published Portable Document Format (PDF) requires Acrobat Reader above. Documentation INSTALLATION DIRECTORY following figure shows directory structure SOA Software Platform installation: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Preface Figure SOA Software Platform Installation Directory--Directories Complete Installation GUIDE guide includes following chapters: Chapter \"Installing Configuring Enterprise API Platform,\" provides instructions install configure Enterprise API Platform. Chapter \"Applying Updates Existing Community Manager Deployment,\" provides instructions install SOA Software Platform Community Manager updates existing Community Manager deployment. Chapter \"Adding Policies Enterprise API Platform Tenant,\" provides instructions add security service level policies Enterprise API Platform Tenant organization used APIs add Enterprise API Platform. Chapter \"Configuring Platform Certificate Authority,\" provides instructions manage Certificate Authority Trusted Certificates Policy Manager instance Community Manager deployed. Chapter \"Installing OAuth Provider Features\" provides overview OAuth features supported Identity System Domains instructions installing Community Manager deployment based use case. Chapter \"Configuring Platform Login Domains,\" provides overview supported login domain types instructions configure, enable, manage login domians platform deployment. Chapter \"Adding API Enterprise API Platform,\" provides summary API setup process used add API Enterprise API Platform. Appendix \"Start Stop Restart Container Instance\" provides instructions start, stop, restart container instance. Appendix \"Database Drivers\" provides list required database drivers database types supported SOA Software Platform. Appendix \"Policies List\" provides summary commonly used Policy Manager security service level quota policies added Enterprise API Platform Tenant secure monitor APIs added Enterprise API Platform. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Preface Appendix \"SOA Software Administration Console\" provides functional overview SOA Software Administration Console. CUSTOMER SUPPORT SOA Software offers variety support services our customers. following options available: Support Options: Email (direct) Phone Email (Web) Documentation Updates support@soa.com SOA-9876 \"Support\" section SOA Software website (www.soa.com) provides option emailing product related inquiries our support team. Updates Policy Manager product documentation issued monthly basis available submitting email request support@soa.com. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Chapter Installing Configuring Enterprise API Platform OVERVIEW chapter provides instructions installing configuring Enterprise API Platform. following activities performed: Step Install SOA Software Platform Step Install SOA Software Platform Updates Step Install Community Manager Feature Repository Step Configure Standalone Container Instance Step Launch SOA Software Administration Console Step Install Community Manager Features Step Configure Community Manager Features Step Configure Network Director Container Instance Step Install Network Director Features Step Configure Network Director Features Step Register Network Director Container Step Create Community Manager Tenant Step Import Tenant Documentation Community Manager Step Configure Email Capabilities Step Launch Community Manager Step Next Steps USE CASES Enterprise API Platform supports following use cases. supporting OAuth Community Manager deployment, determine use case (below) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform matches current deployment scenario, refer Chapter Installing OAuth Provider Features after completing following installation processes. Note: feature installation requirements same both use cases, except Network Director serves DMZ, OAuth Provider Agent feature must installed Network Director SOA Container. Figure User App Internet App access business layer access Policy Manager Network Director Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Figure User App Internet direct access Internet Business Layer used additional security layer (DMZ) SETUP FILES need following setup files install Enterprise API Platform. Setup files both Windows UNIX platforms available. downloaded SOA Software Customer Support site (support.soa.com). SOA SOFTWARE PLATFORM SETUP FILES following table shows platform options SOA Software Platform setup executable. Refer support.soa.com Downloads Policy Manager section. Note: Installation setup files must copied local directory prior launch. Platform Windows Setup File Name Windows-pm-6.1.xxxsetup.exe Launch GUI Windows-pm-6.1.xxxsetup.exe Launch Console Windows-pm-6.1.xxxsetup.exe console Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Platform Linux Solaris AIX Setup File Name Linux-pm-6.1.xxx-setup.bin Solaris-pm-6.1.xxx-setup.bin AIX-pm-6.1.xxx-setup.bin Launch GUI Linux-pm-6.1.xxxsetup.bin Solaris -pm-6.1.xxxsetup.bin AIX-pm-6.1.xxxsetup.bin Launch Console Linux-pm-6.1.xxxsetup.bin console Solaris -pm-6.1.xxxsetup.bin console AIX-pm-6.1.xxx-setup.bin console COMMUNITY MANAGER SETUP FILE following setup file includes Community Manager Feature Repository: com.soa.communitymanager-<ver>.zip Refer support.soa.com Downloads EnterpriseAPIPlatform section. INSTALL CONFIGURE ENTERPRISE API PLATFORM section contains series steps required install configure Enterprise API Platform. STEP INSTALL SOA SOFTWARE PLATFORM section provides walkthrough installing SOA Software Platform. GUI Console installation instructions provided. Install SOA Software Platform (GUI) section provides instructions performing GUI installation SOA Software Platform application using \"SOA Software Platform Installation Wizard.\" order begin installation SOA Software Platform, must administrator privileges computer. Install SOA Software Platform (GUI) Step Procedure Launch SOA Software Platform installation setup file (Windows-pm-6.1.xxx-setup.exe). installation files begin extract. process complete, \"Enter License Key\" screen displays. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (GUI) Figure Enter License Key--GUI Install Enter license key supplied click Next. \"Introduction\" screen displays. Note: not license key, contact SOA Software Customer Service department. find contact information beginning guide. Figure Introduction--GUI Install Click Next. \"SOA Software License\" screen displays. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (GUI) Figure SOA Software License--GUI Install agree license terms, click accept\" option Next. \"System Requirements\" screen displays. Figure System Requirements--GUI Install perform complete installation, accept default click Next. \"Choose Install Folder\" screen displays. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (GUI) Figure Choose Install Folder--GUI Install install default folder, click Next. Otherwise, click Choose, select installation folder, click Next. \"Choose Shortcut Folder\" screen displays. Note: \"Choose Shortcut Folder\" contains number shortcuts use often configuring launching SOA Software Platform. Figure Choose Shortcut Folder--GUI Install Select installer create shortcut icons click Next. \"Pre-Installation Summary\" screen displays. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (GUI) Figure Pre-Installation Summary--GUI Install Review choices. wish make any changes, click Previous work way back correct screen. ready, click Install. \"Installing SOA Software Platform\" screen displays shows progress indicator representing state installation. Figure Installing--Progress Indicator installation complete, \"Install Complete\" screen displays continue configuration SOA container?\" option presented. default selection Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (GUI) Figure Install Complete--GUI Install Select click Done. completes SOA Software Platform Manager installation process. Install SOA Software Platform (Console) section provides instructions performing console installation SOA Software Platform application UNIX platforms. order begin installation SOA Software Platform, must administrator privileges computer. Install SOA Software Platform (Console) Step Procedure Copy Linux-pm-6.1.xxxx-setup.bin Solaris-pm-6.1.xxxx-setup.bin file folder local machine. Launch: Linux-pm-6.1.xxxx-setup.bin typing Linux-pm-6.1.xxxx-setup.bin console\" Solaris-pm-6.1.xxxx-setup.bin typing Solaris-pm-6.1.xxxx-setup.bin console\" AIX-pm-6.1.xxxx-setup.bin typing AIX-pm-6.1.xxxx-setup.bin console\" installation files begin extract. process complete, \"Enter Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install SOA Software Platform (Console) License Key\" screen displays. Enter License Key supplied Press Enter. \"Introduction\" screen displays. Note: not license key, contact SOA Software Customer Service department. find contact information beginning guide. Press Enter. License Agreement screen displays. agree license terms, enter press Enter. \"System Requirements\" screen displays. Review System Requirements, press Enter. \"Choose Install Folder\" screen displays. install default folder, press Otherwise, enter specify new installation folder press Enter. Review choices. ready, press Enter. install process begins. installation complete, command prompt displays. completes SOA Software Platform installation process. STEP INSTALL SOA SOFTWARE PLATFORM UPDATES installing SOA Software Platform first time, apply SOA Software Platform updates directly Release Directory before launching Configure Container Instance Wizard. Install SOA Software Platform Updates Step Procedure Copy SOA Software Platform Update .zip file (soa-update-6.1.X.zip) SOA Software Platform Release Directory Update .zip files obtained via SOA Software Customer Support website (https://support.soa.com/support). Extract soa-update-6.1.X.zip file SOA Software Platform Release Directory multiple updates being applied, files extracted version order (earliest version first). \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files SOA Software Platform Release Directory adds update SOA Software Administration Console \"Repository.\" already run Configure Container Instance Wizard need apply SOA Software Platform Updates, must perform additional configuration step using Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance Wizard. Refer Chapter Applying Updates Existing Community Manager Deployment. After installing updates, continue Step Install Community Manager Feature Repository. STEP INSTALL COMMUNITY MANAGER FEATURE REPOSITORY installing Community Manager Feature Repository newly installed SOA Software Platform installation first time, apply Community updates directly Release Directory before launching Configure Container Instance Wizard. Note: already run Configure Container Instance Wizard need apply Community Manager update, must perform additional configuration step using Configure Container Instance Wizard use Refresh option via Repository tab SOA Software Administration Console. Refer Chapter Applying Updates Existing Community Manager Deployment. After completing update, skip Step Install Community Manager Features. Community Manager Feature Repository (com.soa.communitymanager_<ver>.zip) includes repository.xml contains following Community Manager features: SOA Software Community Manager SOA Software Community Manager Policy Console SOA Software Community Manager Default Theme SOA Software API Security Policy Handler install feature repository unzipping com.soa.communitymanager_<ver>.zip Release directory. After configuring Community Manager container next step), Community Manager features available Available Features section SOA Software Administration Console. Install Community Manager Feature Repository Step Procedure Log SOA Software Administration Console. Download com.soa.communitymanager_<ver>.zip SOA Software Support site. Refer support.soa.com Downloads EnterpriseAPIPlatform CommunityManager section. Copy com.soa.communitymanager_<ver>.zip file Release directory. Extract .zip file directory. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform STEP CONFIGURE STANDALONE CONTAINER INSTANCE section provides instructions using \"Configure Container Instance Wizard\" configure Enterprise API Platform SOA container instance. container configuration process creates basic container configuration minimum set OSGI bundles, sets SOA Software Platform Default properties, sets SOA Software Default SOA Software Platform Repository. following procedure uses \"Configure Container Instance Wizard\" create Standalone Container Instance. Configure Container Instance--Standalone Deployment Step Procedure Navigate SOA Software Platform release directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Welcome Configure Container Instance--Standalone Deployment \"Instance Name\" screen displays. specify name container instance. instance name unique easily identifiable Enterprise API Platform). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Figure Instance Name--Standalone Deployment \"Default Admin User\" screen displays. Define \"Username\" \"Password\" credentials administrator using SOA Software Administration Console. \"Password\" field includes default password used log SOA Software Administration Console. \"Hide Password\" checkbox allows display password encrypted unencrypted. view default password, uncheck \"Hide Password\" checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Figure Default Admin User--Standalone Deployment \"Instance Configuration Options\" screen displays. select container deployment option. Figure Instance Configuration Options--Standalone Deployment Select \"Standalone Deployment.\" \"Default Listener\" screen displays. Set default Port Host Address instance. listener configuration used SOA Software Administration Console address. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Figure Default Listener--Standalone Deployment Default Listener Port--Represents default Port. Bind interfaces--If select option, listener binds address. \"localhost\" any valid machine used connect client/browser. Bind specific interface--If select option, selected host name used connect client/browser. Host Address: Default Listener information used compose SOA Software Administration Console URL follows: http://<hostname>:<port>/admin/ Note: trailing forward slash required Admin Console URL admin/). Click Next continue. \"Instance Startup\" screen displays. Three instance startup options provided. Start Standalone Process--Runs \"startup <instance>\" command line script located sm60\\bin directory. Install Windows Service--Installs instance Windows Service. Instance managed via \"Services\" dialog Windows Program Group (Control Panel/Administrative Tools/Services). Not Start Instance--Configures instance does not start Instance started manually after configuration complete executing \"startup <instance>\" command line script sm60\\bin directory. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Figure Instance Setup--Standalone Deployment Click radio button startup option use current container instance, click Next continue. Note: \"Instance Startup\" screen does not display UNIX systems manual startup required. Container Startup instructions provided later procedure. selected \"Start Standalone Process\" option, \"Launch Admin Console\" screen displays. \"Launch Admin Console\" checkbox selected default. not SOA Software Administration Console launch automatically after container instance started, click checkbox deselect Click Next continue. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Figure Launch Admin Console--Standalone Deployment \"Summary\" screen displays. Review summary information. confirm, click Finish. Figure Instance Configuration Summary--Standalone Deployment completes container configuration process. selected Not Start Instance\" option, following methods used start container instance: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Container Instance--Standalone Deployment Start Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Start Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Start--Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console: Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Feature SchemasIf requirement manually install feature schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. \"Launch Admin Console\" checkbox selected \"Launch Admin Console\" screen, SOA Software Administration Console launch automatically. selected Not Start Instance,\" refer \"Launch SOA Software Administration Console\" section instructions. STEP LAUNCH SOA SOFTWARE ADMINISTRATION CONSOLE After installing SOA Software Platform Community Manager Feature Repository, launch SOA Software Administration Console install Community Manager Policy Manager Features. Note: information use SOA Software Administration Console, refer Appendix Launch SOA Software Administration Console Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Launch SOA Software Administration Console Step Procedure After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Features\" tab. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Launch SOA Software Administration Console Figure SOA Software Administration Console--Available Features Tab next step install Community Manager features. Refer \"Step Install Community Manager Features\" section. STEP INSTALL COMMUNITY MANAGER FEATURES section provides instructions installing Community Manager features include: Policy Manager: SOA Software Policy Manager Services SOA Software Policy Manager Console Community Manager: SOA Software Community Manager SOA Software Community Manager Policy Console SOA Software Community Manager Default Theme Note: using OAuth Policy Manager deployment, refer Chapter Installing OAuth Provider Features after installing Comminity Manager features. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Community Manager Features Step Procedure SOA Software Administration Console, click \"Available Features\" tab. list available features displays. Figure Community Manager Installation--Available Features Tab Click checkbox next following features: SOA Software Policy Manager Services SOA Software Policy Manager Console SOA Software Community Manager SOA Software Community Manager Policy Console SOA Software Community Manager Default Theme begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Community Manager Features Figure Community Manager Installation--Install Feature Resolve Phase After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure Community Manager Installation--Install Feature Feature Resolution Report begin installing feature click \"Install Feature.\" \"Installing...\" status displays along progress indicator. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Community Manager Features Figure Community Manager Installation--Install Feature Install Progress installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. Figure Community Manager Installation--Install Feature Installation Complete After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer \"Step Configure Community Manager Features\" information. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform STEP CONFIGURE COMMUNITY MANAGER FEATURES section provides walkthrough SOA Software Administration Console \"Tasks\" apply Community Manager features installed previous step. Configure Policy Manager Console/Web Services After installing Community Manager features via \"Available Features\" tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking \"Configure\" button \"Installation Complete\" screen end feature installation process. second track allows resume configuration later time clicking \"Cancel\" \"Installation Complete\" screen executing \"Complete Configuration\" button \"Pending Installation Tasks\" section via \"Installed Features\" tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available \"Configuration Actions\" section \"Configuration\" tab. Tasks re-executed needed. Note: chapter assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Configure Community Manager Features Step Procedure Select following configuration tracks, begin configuration process Community Manager features. Installed Features Tab: Click \"Complete Configuration\" \"Pending Installation Tasks\" section. Available Features Tab: Click \"Configure\" \"Installation Complete\" screen feature installation wizard. first page \"Manage PKI Keys Wizard\" displays. starting point beginning Community Manager configuration. following sections provide walkthrough each task configuration wizard Community Manager features. Configure PKI Keys (Policy Manager Console/Web Services) section provides instructions configure keys current feature set. Configure PKI Keys (Policy Manager Console/Web Services) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure PKI Keys (Policy Manager Console/Web Services) Step Procedure \"Manage PKI Keys Wizard\" wizard allows configure private key certificate container communicating governance console. Figure Manage PKI Keys Wizard (Select Key Management Option) screen organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned object. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current object. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current object. Option categories include \"Generate,\" \"Import,\" \"Export,\" \"Delete.\" Available objects displayed focus\" based object's configuration \"state.\" Select \"Key Management Option\" click Next continue. walkthrough use default key option \"Generate PKI Keys Certificate.\" \"Generate PKI Keys Certificate\" screen displays. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure PKI Keys (Policy Manager Console/Web Services) Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate) \"Generate PKI Keys Certificate\" screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. screen organized follows: Key Length--A \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). \"Key Length\" section, select radio button key length based requirements. Certificate Details--Includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select radio button \"Key Length\" enter \"Certificate Details\" based requirements. After completing entries, click Finish. Certificate details displayed \"Summary\" screen. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure PKI Keys (Policy Manager Console/Web Services) Figure Manage PKI Keys Wizard (Summary) Click Next Task. \"Select Database Options\" screen displays. walkthrough configuration task outlined \"Configure Database Options\" section. Configure Database Options (Policy Manager Console/Web Services) \"Select Database Option\" screen provides options selecting database used current SOA Software Container configuration. Note: database schemas manually installed, select \"Use existing database\" option \"Configure Database Options Wizard.\" \"Manage Schemas Wizard\" displays schemas manually installed displayed \"Installed Schemas\" section. click Finish complete configuration. \"Create new database\" option creates new Policy Manager database associated properties based selected database type. \"Use existing database\" option uses existing Policy Manager tablespace, retains tables created any previous installation. \"Use JNDI datasource\" option allows connect database server using datasource name. option currently unavailable embedded implementations Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Step Procedure \"Database Options\" section, select database option click Next continue. Note: summary property information presented below \"Create new database\" \"Use existing database\" options. Figure Configure Database Options Wizard (Select Database Option--Create new database) Figure Configure Database Options Wizard (Select Database Option--Use existing database) \"Specify Database Options\" screen displays. \"Create new database\" \"Use existing database\" options, following \"Database Types\" supported: SQL Server, MySQL Server, Oracle SID, Oracle Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Service Name, Select \"Database Type\" drop-down list box, review configuration options each database type (below), configure options. NOTE: database properties each database option same except \"Administrator Credentials\" section not required \"Use existing database\" option database already exists permissions previously established. SQL SERVER section provides overview configuration options SQL Server. Database Details Database Type--Select SQL Server database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Named Instance--Used set separate SQL Server databases use specific instance store Policy Manager data. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Administrator Credentials Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options SQL Server Figure Specify Database Options SQL Server SQL section provides overview configuration options MySQL Server. Database Details Database Type--Select MySQL database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient Administrator Credentials Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Named Instance--Used set separate SQL Server databases use specific instance store Policy Manager data. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time--The maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options (MySQL Server Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options (MySQL Server Oracle SID section provides overview configuration options Oracle SID. Database Details Database Type--Select Oracle SID database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Username--Enter database Username. Password--Enter database Password. Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard Oracle installation. SID--Enter existing Oracle instance. Tablespace--Enter valid name new tablespace. Administrator Credentials Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options (Oracle SID Figure Specify Database Options (Oracle SID Oracle Service Name section provides overview configuration options Oracle Service Name. Database Details Database Type--Select Oracle Service Name database type. Name--Enter database name. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Administrator Credentials Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Username--Enter database Username. Password--Enter database Password. Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard Oracle installation. Service Name--Enter instance alias. Tablespace--Enter valid name new tablespace. Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options (Oracle Service Name Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options (Oracle Service Name section provides overview configuration options Database Details Database Type--Select database type. Name--Enter database name. Admin Username--Enter valid administrator Username. Admin Password--Enter valid administrator Password. Note: must supply Username Password user sufficient privileges create new tablespace, such DBA. Properties Hostname--Enter name address computer hosting database. Default entry [computer_name]. Port--Enter port number. Port default port assigned standard SQL Server installation. Note: Port default port assigned standard installation. Database--Enter database name. may enter any valid name. Username--Enter database Username. Password--Enter database Password. Tablespace--In Tablespace field, enter tablespace. may enter any valid name. Note: create tablespace same name existing tablespace, existing completely overwritten new Buffer Name new buffer?:--DB2 buffer pools caches database tables indexes. use buffer manage server performance, specify buffer name \"Buffer Name\" field. specified buffer access appropriate tuning script obtain pool size information. Administrator Credentials Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Policy Manager create buffer, click New Buffer\" checkbox enter \"Buffer Name.\" Policy Manager create new Buffer assign default size use Control Center\" update buffer configuration. Note: tablespace creation process requires buffer created. means configuring \"Buffer Name\" supported creating new database. modify pool size defined buffer, reconfiguring tablespace new \"Buffer Name\" not supported. Pool Configuration following \"Pool Configuration\" options available. Default values represent those used typical configuration. Max Pool Size--The maximum number active connections allocated pool same time, negative limit. default value Min Pool Size--The minimum number connections remain idle pool, without extra ones being created, zero create none. default value Max Wait Time-- maximum number milliseconds pool wait available connections) connection returned before throwing exception, wait indefinitely. default value Figure Specify Database Options Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Figure Specify Database Options After completing database properties entries, click Next continue. database configuration \"Summary\" screen displays. Figure Configure Database Options Summary Click Next Task. \"Install Schemas\" screen displays. \"Install Schemas\" screen used manage schemas associated current SOA Container. Schemas add tables database used SOA Container populate data. screen organized two sections: \"Available Schemas\" section displays list schemas available install current SOA Container. install available schema, click checkbox next Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) schema line item click Finish. \"Installed Schemas\" section provides list schemas currently installed SOA Container. uninstall schema, click checkbox next schema line item click Finish. After schema management process complete, \"Summary\" screen displays. Figure Manage Schemas Wizard (Install Schemas) Note: schema selected, system install preceding versions selected schema not previously installed. scenario, preceding schema versions display \"Installed Schemas\" section \"Manage Schemas Wizard\" (accessible via \"Configuration\" tab) after installation complete. Click checkbox schemas install and/or uninstall click Finish. \"Summary\" screen displays. Review summary information click Continue Next Task. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Database Options (Policy Manager Console/Web Services) Figure Manage Schemas Wizard (Install Schemas Summary) Configure Policy Manager Administrator Credentials (Policy Manager Console/Web Services) section provides instructions specify Policy Manager \"Administrator\" credentials allow log Policy Manager \"Management Console.\" Configure Policy Manager Administrator Credentials Step Procedure \"Policy Manager Administrator Credentials\" screen used create \"Administrator\" user account definition logging Policy Manager \"Management Console.\" user account definition composed \"Username\" \"Password.\" After restarting SOA Software Administration Console, log Policy Manager \"Management Console\" using administrator credentials. User Account definition updated via \"Security\" tab. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Policy Manager Administrator Credentials Figure Define Policy Manager Administration Credentials \"Credentials\" section, enter \"Username,\" \"New Password,\" \"Confirm New Password\" Policy Manager \"Administrator\" user account. After completing entries, click Finish. system restart message displays. Click restart system, click Cancel restart system later. Figure Define Policy Manager Administration Credentials \"Complete Configuration\" displays. Refer \"Completing Configuration\" section more information. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Completing Configuration \"Complete Configuration\" screen displays system restart progress indicator allows log SOA Software Administration Console after system restart complete. Complete Configuration Step Procedure \"Complete Configuration\" task performs configuration operations associated more \"Feature\" installations. Operations typically include starting components, setting property values, initializing credentials. system restart initiated Finish clicked \"Credentials Summary\" screen. After system restarts initializes installed features use, click Close log SOA Software Administration Console. exit wizard perform system restart later time, click Close. Configuration changes saved \"Complete Configuration\" task available via \"Installed Features\" tab \"Pending Installation Tasks\" section. Figure Complete Configuration Perform SOA Software Administration Console Login After system exits SOA Software Administration Console, \"Login\" screen displays. Select \"Admin Console\" domain click \"Enter\" log back continue system administration activities. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Figure SOA Software Administration Console--Login Screen STEP CONFIGURE NETWORK DIRECTOR CONTAINER INSTANCE Network Director API proxy server providing security, monitoring, mediation runtime capabilities. section provides instructions using \"Configure Container Instance Wizard\" configure Network Director container instance. Network Director includes following features: SOA Software Network Director SOA Software API Security Policy Handler recommended installation scenario install Network Director features separate container, installed Community Manager container. chose install Network features separate container, continue \"Step Configure Network Director Container Instance\" procedure. install Network Director features Community Manager container, skip \"Step Install Network Director Features.\" Configure Network Director Container Instance Step Procedure Navigate SOA Software Platform release directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance Figure Welcome Configure Container Instance \"Instance Name\" screen displays. specify name container instance. instance name unique easily identifiable Network Director). instance name display browser tab SOA Software Administration Console. Enter container instance name click Next continue. Figure Instance Name--Standalone Deployment \"Default Admin User\" screen displays. Define \"Username\" \"Password\" Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance credentials administrator using SOA Software Administration Console. \"Password\" field includes default password used log SOA Software Administration Console. \"Hide Password\" checkbox allows display password encrypted unencrypted. view default password, uncheck \"Hide Password\" checkbox. Use default password log SOA Software Administration Console, enter new password. After entering credential information, click Next continue. Figure Default Admin User--Standalone Deployment \"Instance Configuration Options\" screen displays. select \"Standalone Deployment\" option. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance Figure Instance Configuration Options--Standalone Deployment Select \"Standalone Deployment.\" \"Default Listener\" screen displays. Set default Port Host Address instance. listener configuration used SOA Software Administration Console address. Figure Default Listener--Standalone Deployment Default Listener Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance Port--Represents default Port. Note: Network Director container instance Policy Manager container instance installed same machine, different port numbers used. Host Address: Bind interfaces--If select option, listener binds address. \"localhost\" any valid machine used connect client/browser. Bind specific interface--If select option, selected host name used connect client/browser. Default Listener information used compose SOA Software Administration Console URL follows: http://<hostname>:<port>/admin/ Note: trailing forward slash required Admin Console URL admin/). Click Next continue. \"Instance Startup\" screen displays. Three instance startup options provided. Start Standalone Process--Runs \"startup <instance>\" command line script located sm60\\bin directory. Install Windows Service--Installs instance Windows Service. Instance managed via \"Services\" dialog Windows Program Group (Control Panel/Administrative Tools/Services). Not Start Instance--Configures instance does not start Instance started manually after configuration complete executing \"startup <instance>\" command line script sm60\\bin directory. Figure Instance Setup--Standalone Deployment Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance Click radio button startup option use current container instance, click Next continue. Note: \"Instance Startup\" screen does not display UNIX systems manual startup required. Container Startup instructions provided later procedure \"Summary\" screen displays. Review summary information. confirm, click Finish. Figure Instance Configuration Summary--Standalone Deployment completes container configuration process. selected Not Start Instance\" option, following methods used start container instance: Start Process Windows Start--Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Start Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Network Director Container Instance Start Process UNIX (Background) Start--Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Feature SchemasIf requirement manually install feature schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. \"Launch Admin Console\" checkbox selected \"Launch Admin Console\" screen, SOA Software Administration Console launch automatically. STEP INSTALL NETWORK DIRECTOR FEATURES section provides walkthrough installing Network Director Features: SOA Software Network Director SOA Software API Security Policy Handler OAuth Provider Agent (Use Network Director used DMZ) Install Network Director Features Step Procedure After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Network Director Features Figure SOA Software Administration Console--Login SOA Software Administration Console, click \"Available Features\" tab. list available features displays. Click checkbox next SOA Software Network Director SOA Software API Security Policy Handler features. After clicking checkbox, Install Feature button displays focus. Figure Network Director Installation--Available Features Tab begin installing selected features, click Install Feature. feature installation Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Network Director Features wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Figure Network Director Installation--Install Feature Resolve Phase After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure Network Director Installation--Install Feature Feature Resolution Report begin installing feature click Install Feature. \"Installing...\" status displays Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Install Network Director Features along progress indicator. Figure Network Director Installation--Install Feature Install Progress installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. Figure Network Directory Installation--Install Feature Installation Complete After installation complete, next step configure feature. done executing series one-time and/or repeatable tasks. Refer \"Step Configure Network Director Features\" information feature configuration. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform STEP CONFIGURE NETWORK DIRECTOR FEATURES After installing Network Director features via \"Available Features\" tab SOA Software Administration Console series configuration tasks must applied feature. Configuration tasks executed using two tracks. first track started clicking \"Configure\" button \"Installation Complete\" screen end feature installation process. second track allows resume configuration later time clicking Cancel \"Installation Complete\" screen executing \"Complete Configuration\" button \"Pending Installation Tasks\" section via \"Installed Features\" tab. Multiple configuration tasks executed single stream using wizard application. After configuration process complete, tasks \"repeatable\" available via \"Configuration\" tab re-executed needed. Note: section assumes starting point having launched configuration wizard using either track. Tasks procedures listed sequential order. Begin Network Director Feature Configuration Step Procedure Select following configuration tracks, begin configuration process Network Director features. Installed Features Tab: Click Complete Configuration \"Pending Installation Tasks\" section. Available Features Tab: Click Configure \"Installation Complete\" screen feature installation wizard. first page \"WS-MetaDataExchange Options\" displays. starting point beginning Network Director configuration. following sections provide walkthrough each task configuration wizard Network Director features. Configure WS-MetaDataExchange Options (Network Director) \"WS-MetaDataExchange Options\" screen allows specify URL Policy Manager \"Metadata Exchange Service.\" Connecting \"Metadata Exchange Service\" enables communication between current SOA Software Container instance Policy Manager retrieve key information service hosting, database, etc.). Specifying \"WS-MetaDataExhange\" URL required installation task \"SOA Software Network Director\" feature. Policy Manager Management Console, URL found viewing Access Point URL \"Metadata Exchange Service\" viewing WSDL \"Metadata Exchange Service\" <SOAP:address location>. Network Director, wsmex Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform address use URL WS-MetaDataExchange service Policy Manager instance hosting Network Director container. Configure WS-MetaDataExchange Options (Network Director) Step Procedure Enter \"Metadata Exchange Service\" URL field display: http://<hostname>:<port>/wsmex After completing entry, click Finish. \"Summary\" screen displays. Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options)--Network Director Review summary information click Continue Next Task. \"Select Key Management Option\" screen displays. \"Manage PKI Keys\" section details performing task. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure WS-MetaDataExchange Options (Network Director) Figure Configure WS-MetadataExchange Options Wizard (WSMetaDataExchange Options Summary)--Network Director Manage PKI Keys (Network Director) section provides instruction configuring PKI keys current container. Configure PKI Keys Step Procedure \"Manage PKI Keys Wizard\" executed either installation task configuration action Network Director various Agent features. wizard allows configure private key certificate container communicating governance console. first screen displays \"Manage PKI Keys Wizard\" \"Select Key Management Options\" screen. organized follows: PKI Keys Details--Displays \"Public Key\" generated assigned container. keys not generated assigned, \"None Found\" message displays. Certificate Details--Displays summary information certificate assigned current container. Assigned certificates generated imported using wizard. Certificate information presented includes Subject Issuer Serial Number, Effective Date, Expiration Date. certificate not assigned, \"None Found\" message displays. Key Management Options--Provides functions performing key certificate management current container. Option categories include \"Generate,\" \"Import,\" \"Export,\" Delete. Available objects displayed focus\" based object's configuration \"state.\" Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure PKI Keys Figure Manage PKI Keys Wizard (Select Key Management Option)--Network Director Select \"Key Management Option\" click Next continue. pre-selected option assigned default. \"Generate PKI keys Certificate\" screen displays. \"Generate PKI Keys Certificate\" screen allows generate PKI Keys certificate. PKI Keys access keys) guarantee message integrity signing message private key verifying message public key. certificate authentication mechanism provides visibility public information verifies private information while keeping secure. Credential Information embedded body SOAP Message, obtained HTTPS Context. \"key strength\" must specified. default key length bits. level cryptographic strength key depends its use replacement schedule, security levels, etc.). \"Key Length\" section, select radio button key length based requirements. \"Certificate Details\" section includes certificate elements configure certificate including Subject Distinguished Name elements, Validity Period represents expiration Date Time certificate. Select \"Key Length\" enter \"Certificate Details\" based requirements. After completing entries, click Finish. Certificate details displayed \"Summary\" screen. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure PKI Keys Figure Manage PKI Keys Wizard (Generate PKI Keys Certificate) continue Network Director click Next Task. \"Complete Configuration\" screen displays. Figure Manage PKI Keys Wizard Summary Completing Configuration \"Complete Configuration\" screen displays system restart progress indicator allows log SOA Software Administration Console after system restart complete. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Complete Configuration (Network Director) Step Procedure \"Complete Configuration\" task performs configuration operations associated more \"Feature\" installations. Operations typically include starting components, setting property values, initializing credentials. system restart initiated Finish clicked \"Credentials Summary\" screen. After system restarts initializes installed features use, click Close log SOA Software Administration Console. exit wizard perform system restart later time, click Close. Configuration changes saved \"Complete Configuration\" task available via \"Installed Features\" tab \"Pending Installation Tasks\" section. Figure Complete Configuration STEP REGISTER NETWORK DIRECTOR CONTAINER section provides instructions register Network Director Container. process involves configuring SOA Container Service Hosting. Register Network Director Container Step Procedure After successfully installing configuring Network Director feature, next step register Network Director Container Policy Manager \"Management Console.\" Login Policy Manager \"Management Console\" navigate Root level Containers folder. \"Containers Summary\" screen displays. Click Add Container. \"Add Container Wizard\" launches \"Select Container Type\" screen displays. \"SOA Container Types\" section click \"SOA Container\" Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Register Network Director Container radio button. Figure Register Network Director--Add Container Wizard (Select Container Type) Click Next continue. \"Specify Metadata Import Options\" screen displays organized follows: Metadata Options Metadata URL--This option used enter URL address represents location Network Director Metadata retrieved. Computer Name Port Number Hostname Port Number Network Director. Metadata Path--This option used enter file system path metadata document. obtain Metadata Document perform following steps: Access Metadata URL any browser. After accessing URL browser, Right click page select \"View Page Source\" Save opened page using .xml format. Authentication Options section allows specify options pass credentials used retrieve container metadata. Three options available: Anonymous--This option does not pass user credentials container retrieve its metadata. Logged User--This option passes current logged user's credentials container retrieve its metadata. Specify Credentials--This option passes supplied credentials Username, Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Register Network Director Container Password, Domain fields container retrieve its metadata. Configure Metadata Authentication option click Next continue. Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options) Figure Register Network Director--Add Container Wizard (Specify Metadata Import Options Metadata Path selected) metadata contains certificate does not reside Policy Manager Trusted Certificate Authority store, receive Certificate Not Trusted\" screen. add current certificate Trusted Certificate Authority store, manually add using Import Trusted Certificate function \"Configure Security Certificates Trusted Certificates\" section \"Management Console. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Register Network Director Container Select \"Yes\" add certificate Policy Manager Trusted Certificate Authority store, click Next. \"Specify Container Details\" screen displays. Selecting returns \"Select Container Type\" screen. Click \"Yes\" radio button, click Next continue. Figure Register Network Director--Add Container Wizard Certificate Not Trusted) \"Container Details\" screen displays. Each container definition needs instance name description distinguish container types, encryption seed Container Key) ensure security launched, must assigned Organization. \"Organization\" represents owner container. screen organized two sections: Container Details Type--Displays container type. Container Key--A field display used specify custom container encryption key. custom key specified, Policy Manager auto-generate key. Instance Name--A field display allows specify instance name container. Description--A field display allows specify description container. \"Organization Tree\" allows select organization represents owner container. Organization Tree Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Register Network Director Container Figure Register Network Director--Add Container Wizard (Specify Container Details) Complete entries click Finish continue. \"Add Container Wizard\" configures container saves information Policy Manager data repository. configuration process complete, \"Completion Summary\" screen displays. After reviewed summary screen, click Close. Figure Register Network Director--Add Container Wizard (Completion Summary) Network Director Container successfully registered \"Management Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Register Network Director Container Console\" Container Details screen displays. Figure Register Network Director--Container Details After registering Network Director \"Management Console,\" proxy API services add using Add New API Wizard Community Manager automatically hosted Network Director display Container Details Hosted Services screen. Figure Register Network Director--Hosted Services Summary RUN COMMUNITY MANAGER SCRIPTS After Community Manager Network Director features installed configured, final step execute following command line scripts initialize tenant address information, import user documentation, enable email capabilities. STEP CREATE COMMUNITY MANAGER TENANT Community Manager requires least tenant. Each tenant logically separate every tenant keyed hostname used access console. section provides instructions configure Community Manager tenant address information. following table provides brief description each script element: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Script Element --url Description base url Platform API. URL normally structured similar following: http://[hostname]:9900. hostname SOA container running normally context unless product running application server. friendly name tenant may used emails, etc. internal tenant. cannot spaces special characters. lower case. normally lower case (without spaces) version tenant name above. appear object ids URLs system. base URL tenant. hostname must unique. hostname used browser accessing product use identify tenant. normally context unless product running application server. same --address, includes context Community Manager running. full URL used browser accessing theme identifier. typically set \"default\" unless custom theme developed. email address used default tenant administrator. password configure default tenant administrator. Used email templates. Account used system send email. comma-separated list host names product accept \"open.soa.com\") --tenantName --tenantId --address -consoleAddress --theme --email --password --contactEmailAddress --fromEmailAddress --virtualHosts Create Community Manager Tenant Step Procedure installation's /bin directory enter following jython script: Windows: Jython.bat ../scripts/Lib/soa/ enterpriseapi/tenant.py --url [url] --tenantName [tenantName] --tenantId [tenantId] --address [tenantAddress] --consoleAddress [consoleAddress] --theme [theme] --email [default tenant administrator] --password [default tenant administrator password] ----contactEmailAddress Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Create Community Manager Tenant [contactEmailAddress] --fromEmailAddress [fromEmailAddress] -virtualHosts [virtualHosts] UNIX: /jython.sh../scripts/Lib/soa/ enterpriseapi/tenant.py --url [url] -tenantName [tenantName] --tenantId [tenantId] --address [tenantAddress] --consoleAddress [consoleAddress] --theme [theme] --email [default tenant administrator] --password [default tenant administrator password] ----contactEmailAddress [contactEmailAddress] --fromEmailAddress [fromEmailAddress] --virtualHosts [virtualHosts] example: Windows: jython.bat ../scripts/Lib/soa/ enterpriseapi/tenant.py --url http://enterprise.soa.local:9900 --tenantName EnterpriseAPI--tenantId enterpriseapi --address http://enterpriseapi.soa.local:9900 -consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --email administrator@<yoursite>.com --password password -contactEmailAddress yourname@soa.com --fromEmailAddress yourname@soa.com UNIX: ./jython.sh ../scripts/Lib/soa/enterpriseapi/tenant.py --url enterpriseapi.soa.local:9900 --tenantName EnterpriseAPI -tenantId enterpriseapi--address http://enterpriseapi.soa.local:9900 -consoleAddress http://enterpriseapi.soa.local:9900/enterpriseapi --theme default --email administrator@<yoursite>.com --password password -contactEmailAddress yourname@soa.com --fromEmailAddress yourname@soa.com STEP IMPORT TENANT DOCUMENTATION COMMUNITY MANAGER section provides instructions import user documentation Community Manager. Import Tenant Documentation Community Manager Step Procedure installation's /bin directory enter following jython script: Windows: jython.bat ../scripts/Lib/soa/enterpriseapi/content.py --url email --password --file UNIX: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Import Tenant Documentation Community Manager ./jython.sh ../scripts/Lib/soa/enterpriseapi/content.py --url -email --password --file Example Windows: Import User Documentation UNIX: ./jython.sh ../scripts/Lib/soa/enterpriseapi/content.py --url %ATMO_URL% --email administrator@enterpriseapi --password password -file %ATMO_HOME%/lib/enterpriseapi/com.soa.enterpriseapi.content.userdocs_X.X. X.zip Windows: jython.bat ../scripts/Lib/soa/enterpriseapi/content.py --url %ATMO_URL% --email administrator@enterpriseapi --password password -file %ATMO_HOME%/lib/enterpriseapi/com.soa.enterpriseapi.content.userdocs_X.X. X.zip %ATMO_URL% Represents Enterprise API Platform site URL http://enterpriseapi.soa.local:9900) %ATMO_HOME%\" Represents file system path installation directory Import API Documentation Adding own API documentation performed after add API Enterprise API Platform using Add New API function. Refer \"Getting Started add setup API Community Manager?\" section details. find additional information content guidelines details uploading API documentation via Community Manager user interface. STEP CONFIGURE EMAIL CAPABILITIES section provides instructions configure email capabilities Policy Manager using SMTP Email Host function. Policy Manager SMTP Email Host function provides centralized location configuring Service global email setting (SMTP Email Host). composition SMTP Email Host includes Host Name Port, option authentication information. global email setting works conjunction any Policy Manager feature utilizes email address. following procedure illustrates add SMTP Email Host. default port setting default \"Authenticated\" setting unchecked (false). Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Email Capabilities Step Procedure add SMTP email host Login Policy Manager \"Management Console.\" Enter following navigation path: Configure Email. Email Summary screen displays. Figure Email Summary add SMTP Email Host, click Modify SMTP Email Host. Modify SMTP Email Host screen displays. Figure Modify SMTP Email Host screen organized follows: Host Name IP--Enter Host Name address email server via Policy Manager sends email messages. mail server Policy Manager access, rather mail server(s) group members. Port--Enter Port number via Policy Manager connects mail server. default SSL Required--Click checkbox SMTP connection Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Email Capabilities secured SSL (SMTPS). Use STARTTLS--Click checkbox upgrade plain text connection encrypted connection. \"SSL Required\" option checked, plain text connection upgraded encrypted SSL connection. \"SSL Required\" option not checked, plain text connection upgraded encrypted TSL connection. Address--This field not used. Instead, Community Manager uses Address\" provided part tenant configuration jython script. Authenticated--If mail server requires Policy Manager authenticate itself order send messages, click \"Authenticated\" check box. default unchecked False). Username--Enter valid Username. Password--Enter valid Password. Configure options based email server requirements. save \"SMTP Email Host\" configuration, click Apply. Modify SMTP Email Host screen closes new definition displays Email Summary screen. During save process, configuration saved database. STEP LAUNCH COMMUNITY MANAGER After completed installation configuration processes, successfully run Community Manager scripts, launch Community Manager. Community Manager Network Director containers must started order launch Community Manager. \"Appendix Start Stop Restart Container Instance\" details. following procedure illustrates launch Community Manager. Launch Community Manager Step Procedure launch Community Manager, enter following URL. http://<hostname>:<port>/enterpriseapi Community Manager home page displays: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Launch Community Manager Figure Community Manager Home Page STEP NEXT STEPS After completing Community Manager installation, perform following next steps: Configure Policies Certificate Authority following chapters configure security monitoring policies Policy Manager Management Console APIs added Community Manager deployment, configure Certificate Authority upload Trusted Certificates support Certificates Certificate Signing Requests uploaded Applications added Community Manager. Chapter Adding Policies Community Manager Tenant Organization Chapter Configuring Platform Certificate Authority Configure OAuth using OAuth Community Manager, following chapter determine feature options match Community Manager deployment use case. Chapter Installing OAuth Provider Features Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing Configuring Enterprise API Platform Configure Login Domains platform deployment includes default Platform Login domain allows users login using Email Password credentials. configure additional platform login approaches Facebook, OpenID, LDAP, SiteMinder) platform deployment, following chapter more information. Chapter Configuring Platform Login Domains Add API Community Manager ready add API Community Manager, refer following chapter summary steps jump-off points Community Manager help documentation started. Chapter Adding API Community Manager Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Chapter Applying Updates Existing Community Manager Deployment already Community Manager deployment installed new updates available either SOA Software Platform Community Manager, perform following steps: APPLY UPDATES SOA SOFTWARE PLATFORM Confirm Installed Updates need confirm SOA Software Platform updates currently installed perform following steps: Launch SOA Software Administration Console click \"Installed Features\" tab. view bundles associated current update, click \"Installed Features\" tab, select \"Bundle\" \"Filter\" drop-down list box, click \"Version\" column sort version. view \"Bundle Details\" click bundle line item. Manually Installing Schemas requirement manually install SOA Software Platform schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. Update Existing SOA Software Platform Installation (Manual) section provides instructions applying SOA Software Platform Update SOA Software Platform Installation. GUI Silent Update instructions provided. update must applied SOA Container Instances Policy Manager, Network Director, Tomcat agent, etc.). update process involves series configuration steps including: Copying SOA Software Platform Update .zip files SOA Software Platform Release Directory extracting automated .zip file. Applying update(s) running \"Configure Container Instance Wizard\" (GUI) running Silent Update. Starting SOA Container Instance after \"Configure Container Instance Wizard\" (GUI) Silent Update completed update process. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Updating database schemas via SOA Software Administration Console (GUI), using third-party Database Schema Management Tool (Silent Update). SOA Software Platform Update .zip files obtained via SOA Software Customer Support website www.support.soa.com Downloads Policy Manager Updates section. existing SOA Software Platform installation more SOA Containers configured. Files required task include: SOA Software Platform .zip File soa-update-6.1.X.zip) Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Make backup copy SOA Software Platform Release Directory database(s). Copy SOA Software Platform Update .zip file (soa-update-6.1.X.zip) SOA Software Platform Release Directory Update .zip files obtained via SOA Software Customer Support website (https://support.soa.com/support). Extract soa-update-6.1.X.zip file SOA Software Platform Release Directory multiple updates being applied, files extracted version order (earliest version first). \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files SOA Software Platform Release Directory adds update SOA Software Administration Console \"Repository.\" After automated zip file completes its processing, stop SOA Container Instance update applied Stop Process Windows Close DOS Window type Ctrl-C. Stop Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services). Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Stop Process UNIX Send process KILL signal Ctrl-C. Stop Process UNIX (Background) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Navigate sm60/bin type shutdown.sh After applying .zip file update(s), delete /sm60/instances/configurator/cache directory exists. next step launch \"Configure Container Instance Wizard\" enter SOA Container Instance Name SOA Software Platform update(s) applied Two methods used launch \"Configure Container Instance Wizard.\" Launch SOA Software Platform Program Group: Click Start menu, navigate SOA Software Platform Program Group, click Configure Container Instance. Perform manual start: Navigate SOA Software Platform Release Directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Configure Container Instance Wizard--Welcome Configure Container Instance \"Instance Name\" screen displays. specify name \"SOA Software Container Instance\" update(s) applied Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Figure Configure Container Instance Wizard--Instance Name Enter Container Instance Name click Next continue. Note: find Container Instance Name, navigate sm60/instances folder view instances currently defined. Note Container Instance Name case sensitive. \"Instance Already Exists\" screen displays. apply update selected container instance, click Update radio button click Next. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Figure Instance Already Exists--Update \"Instance Configuration Summary\" screen displays. apply update(s), click Finish. Note SOA Container Instance must stopped prior applying update(s). Figure Configure Container Instance Wizard--Instance Configuration Summary (Complete Update) SOA Container update process begins progress indicator displays. After update process complete \"Update Complete\" dialog displays indicates Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure number bundles updated. Note: number bundles displayed \"Update Complete\" message vary based specific SOA Container configuration number updates being applied.\" Figure Configure Container Instance Wizard--Update Complete Click \"Update Complete\" dialog. \"Configure Container Instance Wizard\" closes. Start updated SOA Container. Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Perform following prerequisite steps before launching SOA Software Administration Console Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install Policy Manager schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. Users not utilizing SOA Software Administration Console skip remainder procedure. After successfully starting container instance, deploying database driver, clearing browser cache, launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Update (Existing Installation--Manual) Step Procedure Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Features\" tab. Figure SOA Software Administration Console--Available Features Tab previously installed \"SOA Software Policy Manager Services\" feature, verify additional schemas must installed using \"Manage Schemas Wizard.\" perform task, SOA Software Administration Console, click \"Configure\" tab. \"Configuration Actions\" section click \"Manage Schemas.\" \"Manage Schemas Wizard\" launches displays \"Install Schemas\" screen. \"Available Schemas\" section, select checkbox available Policy Manager schema click \"Finish.\" Note: not previously installed \"SOA Software Policy Manager Services\" feature, skip section refer \"Chapter Installing Configuring SOA Software Platform Step Install Policy Manager Features.\" Complete procedure. During database schemas configuration process select \"Available\" schemas \"Manage Schemas Wizard\" screen. After configuration tasks complete, navigate \"Repository\" tab verify repository installed update present. not, click Refresh update repository. final step, navigate \"System\" tab click Restart. update process complete. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Update Existing SOA Software Platform Installation (Silent Update) section describes steps applying \"SOA Software Platform Update\" using automated configuration properties file existing SOA Software Platform installation. existing SOA Software Platform installation SOA Container installed. Files required task include: SOA Software Platform Update .zip File soa-update-6.1.X.zip). Silent Update Properties File configured wizard.mode=update option. Apply SOA Software Platform Silent Update (Existing Installation) Step Procedure Make backup copy SOA Software Platform Release Directory database(s). Copy SOA Software Platform Update .zip file (soa-update-6.1.X.zip) SOA Software Platform Release Directory update .zip file obtained via SOA Software Customer Support website (https://support.soa.com/support). Extract soa-update-6.1.X.zip SOA Software Platform Release Directory multiple updates being applied, files extracted version order (earliest version first). \"Confirm file replace\" dialog displays, click Yes automated zip file updates series files SOA Software Platform Release Directory adds update SOA Software Administration Console \"Repository.\" After automated zip file completes its processing, stop SOA Container Instance update applied Stop Process Windows Close DOS Window type Ctrl-C Stop Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Stop Process UNIX Send process KILL signal Ctrl-C Stop Process UNIX (Background) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Silent Update (Existing Installation) Navigate sm60/bin type shutdown.sh After applying .zip file update(s), delete /sm60/instances/configurator/cache directory exists. \"Configure Container Instance Wizard\" update process set run automated mode silent). done defining properties file predefining set property values used \"Configure Container Instance Wizard\" automatically configure Container instance. Define Silent Update Property File Define properties file update.properties) Add following default content: container.instance.name=instancename wizard.mode=update Run Silent Configuration \"Configure Container Instance Wizard (Silent Update)\" properties file accepts following system properties together used perform silent update: silent True, silent configuration performed) properties (location filesystem property file used configuration) Windows: \\sm60\\bin>startup.bat configurator \"-Dsilent=true\" \"Dproperties=<property file directory location>/update.properties\" UNIX: \\sm60\\bin>startup.sh configurator -Dsilent=true Dproperties=opt/<property file directory location>/update.properties Run silent update. Perform following prerequisite steps before launching SOA Software Administration Console Deploy Database DriverBefore performing database configuration SOA Software Administration Console, verify database driver database used current SOA Container configuration deployed c:\\sm60\\instances\\<container instance>\\deploy folder. database driver not deployed, copy database driver \\deploy directory. Refer \"Appendix Database Drivers\" list supported database drivers. Clear Browser CacheBefore launching SOA Software Administration Console, clear browser cache. necessary ensure user interface changes included SOA Software Platform update(s) display properly. Manually Installing Policy Manager SchemasIf requirement manually install SOA Software Platform schemas, contact SOA Software Customer Support prior beginning installation obtain series schema installation scripts additional instructions. After update complete, start updated SOA Container Instance. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Silent Update (Existing Installation) Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Users not utilizing SOA Software Administration Console skip remainder procedure. Launch \"SOA Software Administration Console\" updated SOA Container Instance: Enter: http://<hostname>:<port>/admin Figure SOA Software Administration Console--Login Select \"Admin Console\" domain, enter \"Username\" \"Password,\" click Login. SOA Software Administration Console launches displays \"Available Features\" tab. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Apply SOA Software Platform Silent Update (Existing Installation) Figure SOA Software Administration Console--Available Features Tab previously installed \"SOA Software Policy Manager Services\" feature, verify additional schemas must installed using \"Manage Schemas Wizard.\" perform task, SOA Software Administration Console, click \"Configure\" tab. \"Configuration Actions\" section click \"Manage Schemas.\" \"Manage Schemas Wizard\" launches displays \"Install Schemas\" screen. \"Available Schemas\" section, select checkbox available Policy Manager schema click \"Finish.\" Note: not previously installed \"SOA Software Policy Manager Services\" feature, skip section refer \"Chapter Installing Configuring SOA Software Platform Step Install Policy Manager Features.\" Complete procedure. During database schemas configuration process select \"Available\" schemas \"Manage Schemas Wizard\" screen. After configuration tasks complete, navigate \"Repository\" tab verify repository installed update present. not, click Refresh update repository. final step, navigate \"System\" tab click Restart. After configuration tasks complete, navigate \"System\" tab click Restart. update process complete. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment APPLY COMMUNITY MANAGER UPDATE download Community Manager updates via SOA Software Support Site (support.soa.com) following location: Downloads EnterpriseAPIPlatform CommunityManager install option pack unzipping com.soa.communitymanager_X.X.X.zip Release directory. After option pack installed, Community Manager features available Available Features section SOA Software Administration Console. launch Configure Container Instance Wizard use Update option illustrated Figure Instance Already Exists--Update) after specifying container name described previous procedure updating SOA Software Platform) launch SOA Software Administration Console click Refresh via Repository tab illustrated procedure below. Install Community Manager Update (Update via SOA Software Platform Repository) Step Procedure Log SOA Software Administration Console. Download com.soa.communitymanager_X.X.X.zip SOA Software Support site. Refer www.support.soa.com Downloads EnterpriseAPIPlatform CommunityManager section. Copy com.soa.communitymanager_X.X.X.zip file Release directory. Extract .zip file directory. Log SOA Software Administration Console. Click Repository tab. Repository Summary displays. Click Refresh control add SOA Software Community Manager repository. After refresh complete, screen look similar following: Figure Administration Console--Community Manager Repository Navigate Installed Features screen verify any Pending Installation Tasks completed related new update. additional tasks, click Configure cycle through complete update tasks. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment ROLLBACK UPDATE \"Configure Container Instance Wizard\" includes Rollback option allows rollback updates previous snapshot. Note SOA Container Instance rollback applied must stopped prior completing rollback process. rollback SOA Software Platform Update, perform following steps: Rollback Update Step Procedure Launch \"Configure Container Instance Wizard\" enter SOA Container Instance Name includes update rollback. Two methods used launch \"Configure Container Instance Wizard.\" Launch SOA Software Platform Program Group. Click Start menu, navigate SOA Software Platform Program Group, click Configure Container Instance. Perform manual start: Navigate SOA Software Platform Release Directory c:\\sm60\\bin enter: startup configurator \"Welcome Configure Container Instance Wizard\" screen displays. Review information click Next continue. Figure Configure Container Instance Wizard--Welcome Configure Container Instance \"Instance Name\" screen displays. specify name \"SOA Software Container Instance\" includes update rollback. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Rollback Update Step Procedure Figure Configure Container Instance Wizard--Instance Name Enter Container Instance Name click Next continue. Note: find Container Instance Name, navigate sm60/instances folder view instances currently defined. Note Container Instance Name case sensitive. \"Instance Already Exists\" screen displays. rollback update, click Rollback radio button, select update listing rollback previous snapshot, click Next. Note: must run \"Configure Container Instance Wizard\" each rollback perform. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Rollback Update Step Procedure Figure Instance Already Exists--Rollback \"Instance Configuration Summary\" screen displays. complete rollback, click Finish. Note SOA Container Instance must stopped prior applying rollback. Figure Configure Container Instance Wizard--Instance Configuration Summary (Rollback Progress) SOA Container update process begins progress indicator displays. After Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Applying Updates Existing Community Manager Deployment Rollback Update Step Procedure update process complete \"Rollback Complete\" dialog displays indicates number bundles updated. Figure Configure Container Instance Wizard--Rollback Complete Click \"Rollback Complete\" dialog. \"Configure Container Instance Wizard\" closes. Start updated SOA Container. Start Process Windows Navigate sm60\\bin type startup <instance name> Start Process Windows Service Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Start. Start Process UNIX Navigate sm60/bin type startup.sh <instance name> Start Process UNIX (Background) Navigate sm60/bin type startup.sh <instance name> Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Chapter Adding Policies Community Manager Tenant Organizaton OVERVIEW Before API's added Community Manager, API security monitoring policies meet API Provider's specific security monitoring requirements must defined Policy Manager. After policies defined Policies folder Community Manager Tenant Organization, available selection Community Manager Add New API function via Plus menu, Edit function API Details page. Note: Community Manager customers must designate policy administrator users responsible defining policies adding Community Manager Tenant Organization using Policy Manager \"Management Console.\" Note: Changes made policies Policy Manager instance Community Manager Tenant deployed become available immediately Community Manager portal. TENANT DEFAULT POLICIES Policy Manager instance Community Manager Tenant Organization installed includes Policies folder root organization includes following default security monitoring policies assigned API's added Community Manager. add more default policies Community Manager Tenant Organization, configure own custom policies. platform allows secure monitor APIs following pre-configured policies. policies selected default assigned newly created APIs. Three policy categories supported: Simple Header Security Used identify (authenticate) application attempting consume API determine authorized not. policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth Monitoring Collects transaction details including recorded messages every transaction. OAuth Provides support applications performing authentication authorization using OAuth. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Note: following policies not display default Policies folder, create following using specification outlined table below. Policy Manager Management Console, navigate Policies folder Community Manager Tenant Organization, click Help, follow instructions Add Policy. Figure Policies Help Policy Manager Mangement Console Policy Name ApplicationSecurityUnsigned Description default security policy Community Manager applications. Policy Category: Simple Header Security Policy Type: API Consumer Application Security Configuration: Signature checked. ApplicationSecuritySigned default security policy Enterprise API Platform applications. provides support SHA1 (Shared Secret). Policy Category: Simple Header Security Policy Type: API Consumer Application Security Configuration: Shared Secret checked BasicAuditing Provides basic auditing messages. Message metrics recorded Usage Logs Monitoring tab. messages themselves not audited. achieved using Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton DetailedAuditing policy. Policy Category: Monitoring Policy Type: WS-Auditing Service Policy Configuration: Audit Messages, Audit Message Size, Audit Identities (Consumer End User), Reporting Options (Log) DetailedAuditing Provides detailed auditing messages. Message metrics recorded Usage Logs Monitoring tab entire messages each exchange. Policy Category: Monitoring Policy Type: WS-Auditing Service Policy Configuration: Audit Messages, Audit Input Message, Audit Output Message, Audit Fault Message, Audit Message Size, Audit Binding, Audit Transport, Audit Contract, Audit Identities (Consumer End User), Reporting Options (Log) OAuthSecurity OAuthSecurity Policy uses OAuth configuration assigned API enforcing OAuth tokens received request. Note: Selection policy typically assigned API after performing Edit OAuth Details configuration API Details page Community Manager portal. Use Edit API Details page, Proxy page, Advanced Options select OAuthSecurity Policy section. Policy Category: OAuth Policy Type: XML Policy Configuration: Add Community Manager Tenant using Copy Policy Change Organization option. not configure. OAuth Trusted Token Policy OAuth Trusted Token Policy provides OAuth Pass-thru support. policy provides support OAuth used. policy selected, app requesting OAuth token Target API's OAuth Provider. Note: Selection policy typically assigned API after performing Edit OAuth Details configuration API Details page Community Manager portal. Use Edit API Details page, Proxy page, Advanced Options select OAuth Trusted Token Policy section. Policy Category: OAuth Policy Type: XML Policy Configuration: Add Community Manager Tenant using Copy Policy Change Organization option. not configure. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton STEP DESIGNATE POLICY ADMINISTRATOR COMMUNITY MANAGER INSTANCE Contact SOA Software Customer Support (https://support.soa.com/support/) request authorization designated Policy Manager Administrator obtain access Policy Manager instance associated Community Manager deployment. Upon approval, receive URL address, username password access Policy Manager \"Management Console.\" STEP DETERMINE POLICY REQUIREMENTS Determine API security service level policy requirements API's plan add Community Manager deployment. Discuss requirements SOA Software Customer Support member receive recommendations based policy requirements. Step Add Default Policies Tenant Organization information copy move tenant default policies (list above) Policies folder Tenant Organization. Step Define New Policies simple walkthrough define policy. STEP ADD DEFAULT POLICIES TENANT ORGANIZATION add more Community Manager default policies Tenant Organization, perform following procedure. process uses Policy Manager Copy Policy Change Organization functions. Note: create policy directly Policies folder Community Manager Tenant recreating more policy configurations defined Tenant Default Policies section. Add Default Policies Tenant Step Procedure Community Manager default policies stored Policy Manager root level Policies Organizational Policies folder. process adding Community Manager default policy Tenant Organization involves: Making copy policy using Copy Policy function, Moving policy Policies folder Tenant Organization using Change Organization function. Login Policy Manager \"Management Console.\" Organizational Tree, navigate SOA Software Organization, select Policies folder. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Add Default Policies Tenant example add BasicAuditing Policy Tenant Organization. Select Basic Auditing Policy click Copy Policy Actions Portlet. Update \"Policy Key\" \"Policy Name\" make unique BasicAuditingNEW), click Apply. replicated policy stored root Policies folder. more information, click Help upper right corner screen follow instructions Copy Policy. Figure Policy Manager Management ConsoleCopy Policy next step move policy Policies folder Tenant Organization. Select BasicAuditingNEW click Change Organization Actions Portlet. policy move root Policies folder Policies folder selected Tenant Organization. Click Help upper right corner screen follow instructions Change Organization. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Add Default Policies Tenant Figure Policy Manager Management ConsoleChange Organization repeat process any default policies add Policies folder Tenant Organization. customize policies based requirements. STEP DEFINE POLICIES POLICY MANAGER (PROCESS) three-part procedure provides overview policy creation process, walks through creating sample policy, shows verify policies display properly API definition Community Manager. Define Policies Policy Manager Step Procedure Launch Policy Manager \"Management Console\" login using username/password credentials provided SOA Software Customer Support. After Policy Manager successfully loaded Tenants Organization Organization Tree. Click expand organization. organization another Tenant organization. Click expand Tenant organization. Policies folder. Expand Policies folder. Compliance, Operational, QoS Policies folders: Policies added Operational folder display section Proxy API page Community Manager Add New API Wizard. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Define Policies Policy Manager Select Operational Policies folder. upper right-hand corner Policy Manager \"Management Console\" click Help. Policy Manager Online Help loads. Review Workbench Browse Organization Views Policies View Policies Policy Configuration section Policy Manager Online Help Information Policy Manager policies organized. complete reference policies offered Policy Manager. add new policy. Refer Appendix Policies Listing review summary listing policies use started. Additional documentation policies available Policy Manager Online Help. API Consumer Application Security Policy minimum requirement. add additional service level auditing policies based requirements. Policies folder root Organization includes set sample policies. Community Manager default set listed Tenant Default Policies section (above), additional policies listed Appendix Policy List. Use Copy Policy function replicate copy policy. Use Change Organization select Tenant Organization move policy. configure policy based requirements. Use Add Policy function define API security monitoring policies Policies Organizational Policies folder API Consumer Application Security Policy WS-Auditing Service policy types) Tenant Organization. Use Modify function details page each policy complete custom policy configuration. STEP DEFINE SAMPLE POLICIES section illustrates two simple policies define security monitoring. Define Sample Policies Policy Manager Step Procedure define following API Security Monitoring policies started using Add Policy function Policy Manager \"Management Console.\" Follow instructions Policy Manager Online Help create following Operational Policies: \"WS-Auditing Service Policy\" named \"DetailedAuditing\" configured follows: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Define Sample Policies Policy Manager Figure Sample Monitoring Policy \"API Consumer Application Security Policy\" named \"ApplicationSecurityUnsigned\" configured follows: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Define Sample Policies Policy Manager Figure Sample API Security Policy STEP VERIFY POLICIES DISPLAY PROPERLY COMMUNITY MANAGER Verify Policies Display Properly Community Manager Step Procedure Launch Community Manager, select Add New API Wizard Plus Menu. Configure API until Proxy API page displays. Confirm Policies defined Community Manager Tenant Organization display Policies section. screen look similar following. Figure Add New API Wizard(Proxy Policies) verify monitoring policies selected Policies page API Access Wizard (API Details Access). Note must app defined use function. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding Policies Community Manager Tenant Organizaton Verify Policies Display Properly Community Manager Figure API Access Wizard(Policies) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Certificate Authority Chapter Configuring Platform Certificate Authority OVERVIEW securing application Community Manager using Public Key option, must import existing Certificate (CER) Certificate Signing Request (CSR). prerequisite step support CER CSR import options, Policy Manager instance Community Manager Tenant deployed must configured Certificate Authority, configured set Trusted Certificates apart internal Certificate Authority. task performed System Administrator. Configuring internal Platform Certificate Authority post installation task performed Site Administrator. most cases, formal VeriSign) aligns security policy requirements uploaded, addition any Trusted Certificates may required. Changes made policies Policy Manager instance Community Manager Tenant deployed become available immediately Community Manager portal. Note: Changes made Certificate Authority Trusted Certificates Policy Manager instance Community Manager Tenant deployed become available immediately Community Manager portal. DETERMINE PUBLIC KEY STRATEGY Based established public key strategy platform least following Public Key options must established Community Tenant before successfully import Certificate Signing Request (CSR) Certificate (CER). Certificate Authority (internal third-party) issue renew certificates must previously configured Policy Manager instance Community Manager Tenant deployed. Trusted Certificates may required must uploaded Trusted Certificates section Tenant. TROUBLESHOOTING try import Certificate (CER) Certificate Signing Request (CSR), receive error message indicating Certificate Certificate Signing Request (CSR) attempting import not trusted Certificate Authority does not exist, typically mean either Certificate Authority not configured Policy Manager, CER/CSR not valid based Certificate Authority Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Certificate Authority uploaded, CER trying upload does not match Trusted Certificate uploaded Policy Manager. CONFIGURE CERTIFICATE AUTHORITY Configure Security Certificates Certificate Authority section Policy Manager \"Management Console\" provides series functions managing Certificate Authority. Policy Manager provides Certificate Authority functionality issues certificates guarantees validity binding between certificate owner its public key. trusted authority, any certificate issued identifies owner certificate. Therefore private key corresponds public key certificate deemed known specific owner. Two Certificate Authority options supported. Policy Manager provides simplified version Certificate Authority issue renew certificates, imported. Policy Manager Certificate Authority intended used test environment verifying features related Policy Manager. production environments, importing formal recommended VeriSign) aligns security policy requirements. Note: Performing certificate management using script not supported. certificate management tasks must performed Policy Manager \"Management Console\" Configure Security Certificates section. configure Certificate Authority, login Policy Manager, navigate Certificates section, click Help information available options, add manage Certificate Authority based requirements. Figure Policy Manager Management ConsoleCertificates Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Certificate Authority Figure Policy Manager Online HelpCertificate Authority TRUSTED CERTIFICATES Trusted Certificate Authority third party identity qualified specified level trust. Trusted Certificates used identity being validated entity claims Certificates imported Policy Manager instance Community Manager Tenant deployed must issued Trusted Authority. Trusted Certificates must configured prior importing certificates Applications Community Manager via Apps Details Security. Configure Security Certificates Trusted Certificates section Policy Manager \"Management Console\" provides series certificate management options managing Trusted Certificates. configure Trusted Certificates, login Policy Manager, navigate Trusted Certificates section, click Help information available options, add manage Trusted Certificates based requirements. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Certificate Authority Figure Policy Manager Management ConsoleTrusted Certificates Figure Policy Manager Online HelpTrusted Certificates Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Chapter Installing OAuth Provider Features Community Manager deployment support OAuth, must install SOA Software Community Manager OAuth Provider feature via SOA Software Administration Console. must install more Domain Types Resource Owners) based requirements. Domain Types added either installing feature OpenID) via SOA Software Administration Console, configuring Identity System Policy Manager Management Console. Installed features available (OAuth Provider OpenID) Community Manager portal via Administration Domains section. OAuth Provider option added Select Domain Types menu via Administration Domains section Community Manager portal. Domain Types display OAuth Provider Wizard \"Resource Owner Authentication Domain.\" Network Director SOA Container used additional security layer (DMZ) Community Manager deployment supporting OAuth, need install SOA Software Community Manager OAuth Provider Agent feature Network Director SOA Container instance. Note: Use case reference OAUTH DOMAIN TYPE FEATURES following features install OAuth Provider Open domain types: SOA Software Community Manager OAuth Provider feature SOA Software Community Manager add-on OAuth Provider installs top SOA Software Community Manager feature. installs OAuth Provider domain SOA Software Open deployment. domain type allows select \"Resource Owner Authentication Domain\" login process), configure grant types, access tokens, grant properties, branding. SOA Software Community Manager OpenID Provider feature SOA Software Community Manager add-on OpenID Provider installs top SOA Software Community Manager feature. installs \"OpenID Relying Party\" domain SOA Software Open deployment. domain type supports login process. After feature installed, defined domain selectable Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features \"Resource Owner Authentication Domain\" drop-down configure OAuth Provider domain. INSTALL OAUTH OPENID PROVIDER FEATURES Based requirements, install following features via SOA Software Administration Console. SOA Software Community Manager OAuth Provider SOA Software Community Manager OpenID Provider Install OAuth OpenID Provider Features Step Procedure Login SOA Software Administration Console. Click \"Available Features\" tab. list available features displays. Figure SOA Admin ConsoleOAuth OpenID Provider Features (Select Feature) Click checkbox next following features: SOA Software Community Manager OAuth Provider SOA Software Community Manager OpenID Provider Note: not supporting OpenID Community Manager deployment, not check SOA Software Community Manager OpenID Provider feature. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth OpenID Provider Features begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Figure SOA Admin Console--OAuth OpenID Provider Features (Resolving) After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure SOA Admin Console--OAuth OpenID Provider Features (Feature Resolution Report) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth OpenID Provider Features begin installing feature click \"Install Feature.\" \"Installing...\" status displays along progress indicator. Figure SOA Admin ConsoleOAuth OpenID Provider Features (Installing) installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. Figure SOA Admin Console--OAuth OpenID Provider Feature (Installation Complete) next step install OAuth schema. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth OpenID Provider Features Click Configure. \"Install Schemas\" screen displays. Select \"OAuth\" schema checkbox click Finish. After schema management process complete, \"Summary\" screen displays. Click Close exit wizard. Figure SOA Admin Console--OAuth OpenID Provider Feature (Install Schemas) Figure SOA Admin Console--OAuth OpenID Provider Feature (Install Schemas Summary) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth OpenID Provider Features final step restart SOA Container. Select System tab, click Restart. After SOA Container restarted, features display selectable options via Community Manager Site Administration Domains section. Figure OAuth Featuresin Community Manager Site Administration Domains section IDENTITY SYSTEM DOMAINS SUPPORT OAUTH addition OAuth Provider OpenID domain types available through two SOA Software features, configure LDAP SiteMinder Identity System support Single-Sign SOA Software Products support OAuth Community Manager). configuring performed using Add Identity System function Configure Security Identity Systems section Policy Manager Management Console. SiteMinder SiteMinder Option Pack provides functionality allows configure SiteMinder Identity System integrate SOA Software products support OAuth. Contact SOA Software Customer Support more information option pack. LDAP Policy Manager default installation includes Directory Server domain type allows configure LDAP Identity System integrate SOA Software products support OAuth. Refer \"Integrate LDAP Enterprise API Platform\" technical note available SOA Software \"Support\" website more information. NETWORK DIRECTOR Network Director used additional security layer (DMZ) Community Manager deployment supporting OAuth, need install following feature Network Director container: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features SOA Software Community Manager OAuth Agent feature used OAuth Provider needed container without database access. Figure User App Internet direct access Internet Business Layer used additional security layer (DMZ) \"Use Cases\" section Chapter Installing Configuring Enterprise API Platform more information. INSTALL OAUTH PROVIDER AGENT FEATURE Community Manager deployment uses Network Director additional security layer (DMZ) outlined Figure Chapter Installing Configuring Enterprise API Platform Use Cases, must install SOA Software Community Manager OAuth Provider Agent feature Network Director SOA Container instance. Install OAuth Agent Provider Agent Feature Step Procedure Login SOA Software Administration Console. Click \"Available Features\" tab. list available features displays. Click checkbox next following feature: Figure SOA Admin ConsoleOAuth Provider Agent Feature (Select Feature) begin installing selected features, click Install Feature. feature installation wizard goes through several prerequisite steps verify installation. \"Resolve\" phase, system determines bundle package dependencies selected feature. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth Agent Provider Agent Feature Figure SOA Admin Console--OAuth Provider Agent Feature (Resolving) After \"Resolve\" phase complete, \"Feature Resolution Report\" presented includes list dependencies selected feature. Figure SOA Admin Console--OAuth Provider Agent Feature (Feature Resolution Report) begin installing feature click \"Install Feature.\" \"Installing...\" status displays along progress indicator. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Installing OAuth Provider Features Install OAuth Agent Provider Agent Feature Figure SOA Admin ConsoleOAuth Provider Agent Feature (Installing) installation process completed, \"Installation Complete\" screen displays feature(s) being installed removed listing under \"Available Features\" tab transitioned \"Installed Features\" tab. complete installation, click restart SOA Software Administration Console. Figure SOA Admin Console--OAuth Provider Agent Feature (Installation Complete) Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Login Domains Chapter Configuring Platform Login Domains next step platform configuration process define login domains. platform domain types used log platform, configured OAuth Provider. After each domain installed entries show platform follows: Site Administration Domains section, defined domain selectable Resource Owner Authentication Domain drop-down configure OAuth Provider domain. Site Administration Config Users section defined domain available List Users page enabled login option. table below describes available login domain types, installation method, location installation reference documentation: Login Domain Type Platform Login (Default) Description login domain type allows users login using default platform login page using Email Address Password credentials. Note: Platform Login (Default) system generated, cannot deleted, not display Resource Owner Authentication Domain drop-down OAuth Provider domain. Installation Method: default platform login automatically added enabled part platform default installation. option disabled another login approach used deselecting \"Enable\" checkbox login line item Site Administrator Config Logins section. Documentation: Site Admin Config Logins sections Community Manager online help more information. Facebook Connector Facebook Connector domain allows log platform using Facebook credentials. Installation Method: Facebook Connector domain option installed default) Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Login Domains Facebook Connector domain type. launches Add Connector Domain Wizard assign App App Secret. enable domain perform login management activities Site Administrator Config Logins section. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. OAuth Provider SOA Software Community Manager OAuth Provider feature SOA Software Community Manager add-on OAuth Provider. domain type allows select Resource Owner Authentication Domain login process), configure grant types, access tokens, grant properties, branding. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs OAuth Provider domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select OAuth Provider domain type configure domain. domain available Edit OAuth Details page API Details page customize OAuth configuration API. Note: domain type adds OAuth Provider domain option \"Select Domain Type\" menu not posted Login option Site Administration Config Logins section. Documentation: Site Admin Domains section platform online help more information. Open Relying Party SOA Software Community Manager Open Provider feature SOA Software Community Manager add-on Open Provider. Installation Method: feature installed via SOA Software Administration Console installs top SOA Software Community Manager feature. installs Open Relying Party domain Site Administration Domains section platform deployment. Using Add Domain function, Site Administrators select Open Relying Party domain type configure domain. enable domain perform login management Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Login Domains activities Site Administrator Config Logins section. Documentation: Site Admin Domains Site Admin Config sections platform online help more information. LDAP LDAP domain allows log platform using LDAP domain defined Policy Manager Management Console. Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Refer Add Identity System (Active Directory) topic Policy Manager Online Help instructions add LDAP domain. Figure Add Identity System (Active Directory) SiteMinder SiteMinder domain allows log platform using SiteMinder domain defined Policy Manager \"Management Console.\" Installation Method: feature installed via Configure Security Identity Systems section Policy Manager \"Management Console.\" enable domain Site Administrator Config Logins section platform select Resource Owner Authentication Domain defining OAuth Provider. Documentation: Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Configuring Platform Login Domains Add SiteMinder Domain Integrating SiteMinder Policy Manager Guide available via SOA Software Support Site (support.soa.com Downloads PolicyManager PM61_CASiteMinder_Integration.pdf) instructions setup SiteMinder install identity system (domain) Policy Manager. Configure SiteMinder Domain Site Admin Domains Site Admin Config Logins sections Community Manager online help instructions use SiteMinder domain OAuth Provider domain definition, enable SiteMinder login. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Chapter Adding API Community Manager Chapter Adding API Community Manager After successfully installed Community Manager policy administrator added desired set security service level policies ready add APIs Community Manager. achieved using Add New API function Community Manager Plus menu. API setup process involves adding API Community Manager, uploading API documentation, uploading activating legal agreements, assigning API administrators. After completed API setup process, test API assuming role App Developer creating app requesting access API using API Access Wizard. Refer \"Getting Started add setup API\" topic Community Manager online help complete walkthrough API setup process. topic provides jump points more detailed documentation each steps. refer \"Publish API\" section complete set FAQs cover API setup process. Adding API Community Manager multi-step process involves: Before register API: Before register API must define operational API Security) monitoring policies Community Manager Tenant Organization. Register API: process registering API involves following activities: Define API: Add API description, Target URL, Proxy URL applicable) Community Manager using Add New API Wizard. Upload API Legal Agreements: Develop, upload, activate legal agreements added API Access Wizard viewed API Legals section. Upload API Documentation: Add API documentation users view API Documents section. Select API Administrators: Send invitations individuals API maintenance privileges. Invite Users Private API: Create API Group sending invitations individuals group member. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix Start Stop Restart Container Instance Appendix Start Stop Restart Container Instance section provides instructions start stop container instance. START STOP CONTAINER INSTANCE following methods used start stop container instance. Start Stop Container Methods Start Stop Process Windows Start--Navigate sm60\\bin type startup <instance name> Stop--Close DOS Window type Ctrl-C Start Process Windows Service Start--Launch Program Group (Settings /Control Panel/Administrative Tools/Services) Select <Container Instance> Note instance name displayed Container Key. Stop--Select <Container Instance> Note instance name displayed Container Key. \"Actions\" menu, select Stop. Start Stop Process UNIX Start--Navigate sm60/bin type startup.sh <instance name> Stop--Send process KILL signal Ctrl-C Start Stop Process UNIX (Background) Start--Navigate sm60/bin type startup.sh <instance name> Stop--Navigate sm60/bin type shutdown.sh RESTART CONTAINER INSTANCE restart current SOA Software Container instance associated bundles, click \"Restart.\" Note \"Restart\" applies standalone deployments Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix Start Stop Restart Container Instance Figure SOA Software Administration Console--System Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix Database Drivers Appendix Database Drivers Database drivers deployed c:\\sm60\\instances\\<container instance>\\deploy Release directory. following database drivers supported: Database Type Oracle (SID, Service Name) Microsoft SQL Server IBM Universal Database MySQL Driver Requirement Requires database driver ojdbc5.jar, version Database driver included SOA Software Platform. Requires Universal JDBC Driver db2jcc.jar) specific installation. Requires database driver mysql-connector-java5.0.8-bin.jar, version Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix Policies List Appendix Policies List appendix provides summary commonly used Policy Manager security monitoring policies added Community Manager Tenant secure monitor APIs added Community Manager. Operational Policies Policy Name API Consumer Application Security Policy Description Used identify (authenticate) application *attempting consume API determine authorized not. policy type supports multiple mechanisms App present its identity, including plain text App signed header shared secret, OAuth Category: Security WS-Auditing Message Policy WS-Auditing SOAP Message Policy WS-Auditing SOAP Service Policy WS-Auditing Service Policy Used audit service operations binding operations. Used audit service operations binding operations. Category: Auditing Used audit SOAP binding operations. Category: Auditing Used audit Services, Bindings, Operations, Access Points. Category: Auditing WS-Auditing Transaction Tracking Policy Supports Transaction Tracking functionality correlates related web service events single activity transaction. example, service Container uses SOA Software Delegate call another service different container managed SOA Software Agent, automatically insert correlation information message collected used Policy Manager collect tracking log information. Category: Auditing Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Appendix SOA Software Administration Console OVERVIEW SOA Software Platform configuration administration performed using \"SOA Software Administration Console.\" After \"SOA Software Platform Installation Wizard\" installs SOA Software Platform application, \"Configure Container Instance Wizard\" used define container host selected \"Features,\" \"SOA Software Administration Console\" used install configure \"Features.\" assessing deployment requirements, determine many container instances required features installed each container instance. Configuration Administration each Feature Installation performed using variety different options offered \"SOA Software Administration Console.\" Base features include SOA Software Policy Manager Console SOA Software Policy Manager Web Services. two features represent Policy Manager application installed single container separate containers. feature list available per-version basis based specific customer requirements. ADMIN CONSOLE ORGANIZATION SOA Software Administration Console organized five functional areas. AVAILABLE FEATURES \"Available Features\" tab displays list features available installed current SOA Software Container instance. Feature List feature list filtered show \"Product Feature\" \"Tool\" via \"Filter\" dropdown. Install Feature install feature, select corresponding checkbox, click \"Install Feature.\" Select additional checkboxes install multiple features. After installation process complete, feature listed \"Installed Features\" tab additional configuration steps may required complete installation. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Figure SOA Software Administration Console--Available Features INSTALLED FEATURES \"Installed Features\" tab displays list features installed current SOA Software Container instance. feature list \"Filter\" drop-down list box allows filter features \"Product Feature\" \"Bundle\" categories. Update Feature update features, select \"Feature\" line item click \"Search Updates.\" installation wizard displays presents listing available updates applicable). install updates proceed installation process. After update complete, \"Version\" number updated features changed reflect installed version. Rollback Feature rollback feature, select \"Feature\" line item click \"Rollback Changes.\" system uninstalls selected feature, removes \"Installed Features\" tab, moves back \"Available Features\" tab. Uninstall Feature uninstall feature, select icon click system uninstalls selected feature, removes \"Installed Features\" tab, moves back \"Available Features\" tab. Pending Installation Tasks \"Pending Installation Tasks\" list configuration tasks applicable) required complete installation process. perform pending installation tasks, click \"Complete Configuration.\" Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console View Bundles view bundles associated current update, click \"Installed Features\" tab, select \"Bundle\" \"Filter\" drop-down list box, click \"Version\" column sort version. view \"Bundle Details\" click bundle line item. Figure SOA Software Administration Console--Installed Features CONFIGURATION \"Configuration\" tab provides two methods modifying container configuration including \"Configuration Actions\" left sidebar execute wizards, \"Properties\" presented table format. After modifying any container configuration properties must restart container. \"Appendix Start Stop Restart Container Instance\" more information. CONFIGURATION ACTIONS Configuration Actions located bottom left sidebar area \"Configuration\" tab SOA Software Administration Console. represent \"repeatable\" tasks performed during initial container configuration. modify properties specific configuration area, click task link launch wizard configure properties. Configuration Properties Configuration properties organized \"Configuration Categories\" located top left sidebar area \"Configuration\" tab SOA Software Administration Console. view properties, click \"Configuration Category\" link properties table displays. update property, modify property information table row click Apply Changes. add additional properties click, Add Property. \"Configuration Categories\" section displays list property categories expand display specific property names values. initial property configuration created during installation configuration features. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console update property value, select property name \"Configuration Categories\" section, update property value, click Apply Changes. add property value, select \"Configuration Category\" add property click \"Add Property.\" \"Add Configuration Property\" popup displays. Enter \"Property Name\" \"Property Value\" click Apply. \"Configuration Actions\" section displays list maintenance actions. Figure SOA Software Administration Console--Configure REPOSITORY \"Repository\" screen displays list repositories identified \"Location\" store product features available installation current SOA Software Container instance. default repository (SOA Software Default Policy Manager Repository) added part initial Policy Manager installation. Install Container Updates SOA Software Container Updates distributed using Repository URL points repository contains designated product features updates. Repository URL added \"Repository\" tab via SOA Software Administration Console. Updates include bundles represent new features, updates existing features. After Repository URL added \"Repository,\" updates specific feature applied clicking \"Search Updates\" button via \"Installed Features\" tab applying list updates found. section provides instructions adding Repository URL SOA Software Administration Console applying update. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Add Repository URL SOA Software product updates installed via SOA Software Administration Console. first step applying product update add Repository URL includes update data via \"Repository\" tab. Add Repository URL Step Procedure add Repository URL contains SOA Software product updates, enter paste Repository URL provided SOA Software Customer Support \"Repository URL\" field display. Note: must reformat Repository URL prepending \"file:/\" URL changing backslashes forward slashes After URL reformatted, click Add. URL added Repository follows: Figure Admin Console--Repository (Add Repository) successfully added Repository URL. next step update process apply updates. Refer \"Apply Updates\" section more information. Apply Updates After successfully adding Repository URL, next step update process search product updates apply following two update scenarios apply: update delivers new feature, new feature available installation via \"Available Features\" tab. update delivers updates currently installed features, updates applied viewed selecting \"Bundle\" filter \"Installed Updates\" screen. Each bundle labeled update version number. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Search Apply Update Step Procedure After adding Repository URL current update, navigate \"Installed Features\" tab. Click Search Updates. Figure Admin Console--Search Updates Button \"Searching updates...\" screen displays. Figure Admin Console--Searching Updates After query updates completed, \"Updates Found\" screen displays presents list features updates available install updates list features, click Apply. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Search Apply Update Figure Admin Console--Installed Features (Updates Found) \"Updating\" screen displays while update process being performed. After updating process complete wizard closes. Figure Admin Console--Installed Features (Updating) view updates, select \"Bundle\" \"Filter\" dropdown list box. Review list updates bundles). Items sorted update \"Version\" number. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Search Apply Update Figure Admin Console--Installed Features (Bundle Filter) Perform System Rollback changes made SOA Container installing, updating, uninstalling features, etc.), snapshot taken reflects date time change occurred. state SOA Container rolled back previous date. following procedure illustrates perform system rollback. Perform System Rollback Step Procedure Navigate \"Installed Features\" tab. Click \"Rollback Changes.\" Figure Admin Console--Rollback Changes Button \"Rollback Changes\" screen includes \"Snapshots Taken\" display window Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Perform System Rollback includes Date/Time entries represent changes made current SOA Container. rollback state current SOA Container previous Date/Time, select Snapshot line item click Rollback Changes. Figure Admin Console--Installed Features (Rollback Changes) system displays \"Processing Request\" indicator, performs system rollback, provides prompt restart system. Figure Admin Console--Installed Features (Restart System after Rollback Message) Click restart, log back SOA Software Administration Console. SYSTEM \"System\" tab provides summary Policy Manager process characteristics states. Information includes last start time process, memory details Total, Used, Free), listing associated system properties. System details used review system health troubleshooting purposes. Copyright SOA Software, Inc. Enterprise API Platform Installation Guide Appendix SOA Software Administration Console Restart Container restart current SOA Software Container instance associated bundles, click \"Restart.\" Note \"Restart\" applies standalone deployments Figure SOA Software Administration Console--System Copyright SOA Software, Inc. Enterprise API Platform Installation Guide"},{"title":"SOA Software Community Manager Documents","url":"/go_live.html","date":null,"type":"document","description":"The document template for CM","categories":[],"body":"Request production access API, live, monitor app's use API. Request manage production access API. Monitor app performance adherence defined API access contract."},{"title":"SOA Software Product Documents","url":"/index.html","date":null,"type":"document","description":"The docs.soa.com landing page","categories":[],"body":"SOA Software Documentation Repository provides centralized storage solution SOA Software's Community Manager, API Gateway (Policy Manager, Network Director, Agents), LifeCycle Manager product offerings. repository designed provide quick access installation, configuration, concept, usage documentation through use search facility. Documentation accessible either PDF format (downloadable), HTML (view print). Community Manager sophisticated product help enterprises develop API portal attract, manage, support developers build Apps using APIs. View Community Manager Document Index. API Gateway allows organizations quickly cost-effectively develop, secure, manage monitor APIs increasingly connected world securely rapidly connecting applications across platforms, devices channels. View API Gateway Document Index. Lifecycle Manager industry-leading API lifecycle management platform automates machine- role-based validations signoffs across software development lifecycle. View Lifecycle Manager Document Index."},{"title":"AnySource Asset Adapter User Guide","url":"/lm/asaa_user_guide.html","date":null,"type":"pdf","description":"The AnySourceTM Asset Adapter toolkit is a framework for automatically assembling and loading assets into Repository Manager.This document will show you how to get started using the Asset Adapter from installation, to running a sample, to creating your own rules file for auto-loading assets.","categories":[],"body":"ANYSOURCE ASSET ADAPTER USER GUIDE AnySource Asset Adapter User Guide Contents AnySource Asset Adapter User Guide Overview Functional Overview Sample XML Rules File System Requirements...................................................................................................... Install Instructions J2EE...................................................................................................................... Running Sanity Test Sample XML Rules File Invoking Asset Adapter Encrypting Passwords Ant-specific Tasks Asset Adapter Tasks assetadapter connection assetfiles assembly.................................................................................................................... uploadincompletepolicy assembly.................................................................................................................... childassembly............................................................................................................ Asset Collaboration Tasks Retriever Tasks fsfileset include exclude parserretriever Parser Tasks textparser key expression xmap any Mapper task) xmlparser................................................................................................................... key expression xmap any Mapper task) javaxmlparser ejbfunctionsparser javafunctionsparser Value Tasks parservalue Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE parserkeys parserevaluate url urlpath urlparameter latestversion namevalueattribute Asset Modifier Tasks assetattribute parservalue classifier classifiername classifiervalue parservalue parserkeys artifact artifactname............................................................................................................... artifactcategory artifactreference artifacttype artifactversion artifactcontent assetrelationship relationshipname assetname assetversion assetmerge artifactinclude artifactexclude classifierinclude classifierexclude relatedassetinclude relatedassetexclude Mapper Tasks encodeurl prepend substitute substring xmap.......................................................................................................................... xsltmapper Miscellaneous Tasks variable assetsource connection cachetemplates assetdiff artifactinclude artifactexclude classifierinclude classifierexclude relatedassetinclude relatedassetexclude Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE assetskip Conditional else script retrieverwriter CVS Tasks (optional) cvsfileset ClearCase Tasks (optional) cc_attributevalues cc_files cc_files cc_attribute cc_fileattribute cc_fileversion Metallect Server Tasks (optional) iqsresourceretriever iqsresourceinclude iqsresourceexclude iqsresourceparser....................................................................................................... keyaggregator iqsreferenceretriever Rational Team Concert (RTC) Tasks (optional) rtcconnection rtcfileinfo................................................................................................................... rtcfileset..................................................................................................................... Team Foundation Server (TFS) Tasks (optional) tfsconnection tfsfileinfo tfsfileset WebDAV Tasks (optional) webdavfileset Overview AnySourceTM Asset Adapter toolkit framework automatically assembling loading assets Repository Manager. toolkit provides rich set functions loading common assets, extensible framework creating customized solutions fit particular needs. document show started using Asset Adapter installation, running sample, creating own rules file auto-loading assets. information extending capabilities toolkit, \"AnySource Asset Adapter Developer Guide\". Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Using Asset Adapter create assets most useful capturing large quantities assets automating asset updates based changes asset information artifacts held third party tools. external tools referred Asset Sources, may include source code control systems, document control systems, UDDI registries, etc. Asset Adapter provides XML-driven framework used define automate asset capture process. addition, Asset Adapter capabilities directly accessed through programmatic (Java) command line means desired. Underlying capabilities series SOAP-based Web services connect underlying Automation Extensions client library. AnySource Asset Adapter framework uses AnySource parsers extract interpret information various files make asset. Parsers typically used analyze gather asset metadata eventual inclusion asset being assembled, invoked XML-driven tasks define asset capture process. Asset Adapter directly publishes asset information Asset Library automatically made available asset users optionally, reviewed, corrected augmented ACEs Asset Publishers appropriate. SOA Software provides out-of-the-box parsers open-ended text-based XMLbased processing, specialized Java sources WSDL parsers. addition, custom AnySource parsers written Java, optionally taking advantage Java's ability call languages choice, including scripting languages such Perl, Python, etc. AnySource Asset Adapter integrated leading SCM systems such Serena Dimensions Version Manager, IBM ClearCase, CVS, WebDAV, Metallect Server, allowing asset artifacts loaded retrieved Library conjunction associated SCM system. Each integration separately licensed feature. Tasks related each integration documented indicated optional. Contact support more information. Documentation provided AnySource Asset Adapter includes: User Guide describes install use AnySource Asset Adapter toolkit Developer Guide describes write AnySource Asset Adapter extensions Best Practices documents provide SCM-specific guidance usage deployment AnySource Asset Adapter Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Functional Overview AnySource Asset Adapter runs Windows workstation. reads XML rules file executes tasks defined file various Retrievers, Parsers, Asset Modifiers. Retrievers read file system, Web server, Source Control Manager appropriate. Parsers take data Retrievers extract information. Asset Modifiers use Parsers Retrievers build metadata values Asset. Asset Adapter publishes assets via Automation Extensions. Repository Manager client may retrieve asset artifact files directly Repository Manager Web server. Web server may work concert particular SCM, allowing files reside natural system record instead Repository Manager. Sample XML Rules File Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE initial understanding AnySource Asset Adapter works, example may helpful. consists sample XML rules file shows basic tasks required assembling publishing asset. Following sample short description different elements. intended overview details point not important, explained more depth later. <?xml version=\"1.0\"?> <project name=\"Asset Adapter default=\"load\"> <property name=\"default-overview-file\" value=\"default-overview.txt\"/> <property environment=\"env\"/> <property name=\"connections-file\" value= \"${env.ASSET_ADAPTER_AE_HOME}/data/connections.xml\"/> <property name=\"connection-name\" value=\"default\"/> <property name=\"source-dir\" value=\"${basedir}\"/> <taskdef file= \"${env.ASSET_ADAPTER_HOME}/bin/assetadapter.properties\"/> <target name=\"load\"> <assetadapter action=\"publish\" offline=\"false\"> <connection file=\"${connections-file}\" name=\"${connection-name}\"/> Define primary asset files <assetfiles id=\"assetfiles\" assemblyid=\"app1\"> fileset used locate primary asset files <fsfileset id=\"textfiles\" dir=\"${source-dir}\"> <include name=\"*.txt\"/> </fsfileset> </assetfiles> <assembly id=\"app1\" template=\"generic\"> Set variables use metadata values <variable name=\"asset-dir\" value=\"@asset-uri@\"> <xmap </variable> <variable name=\"asset-file\" value=\"@asset-uri@\"> <xmap </variable> <variable name=\"asset-name-no-ext\" value=\"@asset-file@\"> <xmap </variable> Parse description file, set description first characters <textparser id=\"description-parser\" file=\"@asset-uri@\"> <key name=\"description\" multivalue=\"false\" expression=\"^(.{0,240})\"/> </textparser> <assetattribute name=\"name\" value=\"@asset-name-no-ext@\"/> <assetattribute name=\"version\" value=\"1.0\"/> <assetattribute name=\"description\"> <parservalue parserid=\"description-parser\" parserkey=\"description\"/> </assetattribute> <classifier name=\"asset-type\" value=\"Application\"/> <classifier name=\"vendor\" value=\"LLI\"/> <classifier name=\"intended-domain-general\" value=\"Education\"/> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <classifier name=\"autoload\" value=\"current\"/> <artifact category=\"overview\" type=\"by-value\" failonerror=\"true\" maxoccurs=\"1\" variable=\"overview-file-name\" file=\"@asset-uri@\"/> </assembly> </assetadapter> </target> </project> executed, default task, named \"load\", run. invokes \"assetadapter\" task defines \"connection\" Library \"assembly\" creating assets type \"Application\" using \"generic\" asset capture template. \"assetfiles\" task defines set primary asset files ending \".txt\" extension directory ${source.dir}, \"samples/sanity\" sub-directory Asset Adapter home (install) directory. list primary asset files passed \"assembly\" task associated \"assemblyid\" attribute. each file list, set tasks invoked sequence. First, predefined variable \"asset-uri\" implicitly set current primary asset filename. predefined variable \"primary-retriever-id\" set primary retriever, \"assetfiles\", not used example). first few tasks set variables named \"asset-dir\", \"asset-file\", \"asset-name-noext\". derived \"asset-uri\" variable. values variables set using nested Mapper tasks, case \"xmap\", define regular expressions remove portions filename. Next Parser extracting first characters primary asset file. set Asset Modifiers set asset name, version description, few classifiers, finally, overview artifact consists asset file itself. System Requirements Windows Server Automation Extensions Support Center/Download Center) Disk space required: (Asset Adapter) (Automation Extensions) Install Instructions Install Automation Extensions Create install directory, example, c:\\Program Files\\AnySource Asset Adapter Unzip contents assetadapter.zip directory J2EE command window: install directory Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE bin directory copy setup.bat.tpl setup.bat Edit setup.bat text editor. Change @ASSET_ADAPTER_HOME@ install directory Save setup.bat Run setup.bat Running Sanity Test Sample Create test library Admin Console installation. Create connection Automation Extensions connections.xml file: %LLI_AUTOMATION%\\data Edit connections.xml does not exist, sample connections.xml file: create <?xml version=\"1.0\" encoding=\"UTF-8\"?> <connections active=\"default\"> <connection name=\"default\" library=\"mylibrary\" host=\"host\" user=\"support\" authenticator=\"LDAP_AUTHENTICATOR\" password=\"\" </connections> file needs contain entry connection library wish publish Fill library name, host installation, userid ACE authority library. Note: make password entry blank. may multiple connection entries. Connection names arbitrary, sanity test uses connection named \"default\". Cache password connections file connection named \"default\" ..\\bin LLICmd start LLICmd login \"..\\data\\connections.xml\" default Type password LLICmd stop check connections.xml file. encrypted password connection entry. sanity test sample files samples\\sanity directory installation directory %ASSET_ADAPTER_HOME%\\samples\\sanity run test.bat results asset created named \"TestAsset/1.0\"in library. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE XML Rules File AnySource Asset Adapter built Jakarta Ant uses Ant build file run. file referred XML rules file contain instructions set assembling assets. Since file Ant build file, may contain Antspecific tasks Asset Adapter-specific tasks. more information Ant, http://jakarta.apache.org/ant. main task Asset Adapter \"assetadapter\" task must contained Ant \"target\" element. target executed Ant specifying target name names run invoked, specifying default target entire file. example shell Asset Adapter rules file: <?xml version=\"1.0\"?> <project name=\"Asset Adapter default=\"load\"> <property environment=\"env\"/> <taskdef file=\"${env.ASSET_ADAPTER_HOME}/bin/assetadapter.properties\"/> <target name=\"load\"> <assetadapter action=\"publish\" </assetadapter> </target> </project> Note project \"name\" attribute, required, arbitrary, \"default\" attribute specifies default target execute. \"target\" listed named \"load\" contains \"assetadapter\" task. property element creates property values case currently defined environment variables system uses prefix \"env\" followed period name each variable. taskdef element reads assetadapter.properties file provides mappings XML element names classes provide implementation element runtime. Note use property ${env.ASSET_ADAPTER_HOME} substitutes current value environment variable ASSET_ADAPTER_HOME pathname properties file. important note XML case-sensitive, element attribute names must proper case. example, <assetadapter> correct, while <AssetAdapter> not. Invoking Asset Adapter Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Asset Adapter run via command line invocation executed script batch file. following example invocation samples\\sanity directory: %ASSET_ADAPTER_ANT_HOME%\\bin\\startant.bat -buildfile test.xml -verbose debug ASSET_ADAPTER_ANT_HOME environment variable set setup.bat file. \"-buildfile\" argument points XML rules file use. case, default target executed. Otherwise target name specified command line. \"verbose\" \"-debug\" arguments set logging message level optional. Output messages printed standard output. Output may redirected file via command line, facilities Ant setting output listeners handle specialized logging functions. outside scope document. Encrypting Passwords Asset Adapter tasks accept encrypted password attribute. password encrypted using \"encryptpw\" command found Asset Adapter \"bin\" directory. prompt password hidden view) display encrypted version password copied pasted appropriate \"encryptedpassword\" attribute given Asset Adapter task. Ant-specific Tasks Ant-specific tasks needed Asset Adapter \"taskdef\" element defines mappings between XML element names corresponding class implementations, \"property\" task defines values used throughout file. saw earlier, \"taskdef\" element take file attribute contains list XML element name class name mappings properties file format. Another form \"taskdef\" element takes \"name\" \"classname\" attribute single mapping. documentation Apache Ant http://jakarta.apache.org/ant more information. \"property\" element form takes two attributes \"name\" \"value\". sets property value specified used throughout rest file using ${propertyname} syntax. Note once properties set, immutable cannot changed throughout life invocation). Properties passed command line, override any settings XML rules file, loaded file. documentation Apache Ant more information. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Asset Adapter Tasks assetadapter \"assetadapter\" element primary task responsible implementing Asset Adapter. takes few attributes number child elements control connection, policies assembly assets. Attributes assetadapter Attribute Description action Set \"publish\" \"dryrun\". Default \"publish\" offline Set \"true\" \"false\". Default \"false\". Work offline create assets not publish Offline means connection not established library. helpful during development debugging. requires \"templatesdir\" set templates downloaded directory previous run though use \"cachetemplates\" task. assetcachedir directory cache asset files generated tool. files used subsequent runs three-way merge algorithm preserve updates assets made outside Asset Adapter example manual edits using thin client, IDE extensions Capture Tool products, programmatic updates through Automation Extensions.) templatesdir directory cache templates library. useful offline work. Required not set, threeway merge not performed. Yes offline set \"true\". Nested Elements assetadapter connection Sets library connection information. \"connection\" task allowed required. connection must defined connections.xml file Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE password cached. connections.xml file created using Automation Extensions. Install Instructions section information creating file. Attributes connection Attribute Description file connections.xml file stores connection information. name name connection use. Required Yes. Yes. assetfiles assetfiles task creates list primary asset files drive assembly each asset. task contain Retriever fsfileset creating file list. More task may listed fsfileset, last element must Retriever must return final list. allows multiple tasks collaborate special way create list files, most cases, Retriever necessary. Attributes assetfiles Attribute Description Required assemblyid assembly executed each file Yes. URI returned assetfiles task. string identify assetfiles task. specified, may used child assembly referencing variable @primary-retriever-id@, implicitly set before assembly executed. Examples assetfiles Create list files under directory source.dir directory whose filenames end \".asset\". each entry list, parent assembly task assign variable \"asset-uri\" filename current asset being assembled. Subsequent child elements assembly task make use variable using \"@asset-uri@\" token filtering syntax. Filtering. <assetfiles variable=\"asset-uri\"> <fsfileset dir=\"${source.dir}\"> <include name=\"*.asset\"/> </fileset> </assetfiles> assembly Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE assembly task performs assembly assets. may multiple assembly tasks. assembly task defined below. Custom Nested Elements assetadapter Since AnySource Asset Adapter extensible framework, nested elements may appear children assetadapter task. task implemented class extends IPublishPolicy IMergePolicy interface, class instantiated policy governing publishing assets merging asset changes, respectively. default publishing policy merge policy automatically provided. \"AnySource Asset Adapter Developer Guide\" more information. Publish Merge Policies uploadincompletepolicy uploadincomplete policy instructs assetadapter ignore any validation errors may encountered creating assets. Assets uploaded, may not published, regardless missing incomplete artifacts, classifiers, relationships. Therefore, manual intervention catalog may required actually publish assets. Attributes uploadincompletepolicy Attribute Description publish set true, asset published passes validation. set false asset fails validation, stored catalog, not published. default \"false\". Examples uploadincompletepolicy <assetadapter action=\"publish\" offline=\"false\" assetcachedir=\"${cache.dir}\" templatesdir=\"${templates.dir}\"> <connection file=\"${connection.file}\" name=\"default\"/> <uploadincompletepolicy publish=\"false\"/> <assetfiles assemblyid=\"app1\"> </assetfiles> <assembly id=\"app1\" template=\"default\"> </assembly> </assetadapter> Required Examples assetadapter <assetadapter action=\"publish\" offline=\"false\" assetcachedir=\"${cache.dir}\" templatesdir=\"${templates.dir}\"> <connection file=\"${connection.file}\" name=\"default\"/> <assetfiles assemblyid=\"app1\"> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE </assetfiles> <assembly id=\"app1\" template=\"default\"> </assembly> </assetadapter> assembly \"assembly\" task defines set rules assembling assets. rules set sub-task elements identify primary asset file each asset series tasks collaborate build asset metadata. tasks called iteratively sequence. say, three primary asset files identified, tasks called sequence first asset, again second asset, again third. Attributes assembly Attribute Description template asset capture template name use validating assets created assembly. must correspond name attribute XML template. not template filename. publishtemplate filename publish template use setting publish information contacts, owning org group, etc.). replace Set \"true\" \"false\". Completely replace contents existing asset new contents, circumventing merge policy. Default \"false\". failonerror Set \"true\" \"false\". Stop processing assets error occurs while assembling asset. Default \"false\". Nested Elements assembly Required Yes. childassembly \"childassembly\" task defines set rules assembling finer grained assets based way asset being assembled parent assembly task. task used, example, create asset every method Java class each Java file processed parent assembly task. childassembly its nested elements refer tasks parent assembly Attributes childassembly addition assembly task attributes) Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Attribute Description primaryretrieverid Retriever used assemble assets childassembly. @asset-uri@ variable set each file URI turn Retriever. Nested Elements childassembly assembly. Examples childassembly Required Yes. Use child assembly create asset per method name Java source file. <parserretriever id=\"method-names\" parserid=\"java-parser\" parserkey=\"methodnames\"/> Service Operation assets <childassembly id=\"method-assets\" primaryretrieverid=\"methodnames\" template=\"Operation\"> <variable name=\"class-name\"> <parservalue parserid=\"java-parser\" parserkey=\"classname\"/> </variable> <variable name=\"asset-version\" value=\"1.0\"/> Operation asset name: classname.operation <variable name=\"operation-asset-name\" value=\"@classname@.@asset-uri@\"/> <assetattribute name=\"name\" value=\"@operation-asset-name@\"/> <assetattribute name=\"version\" value=\"1.0\"/> <assetattribute name=\"description\" value=\"@operation-assetname@\"/> <artifact category=\"overview\" type=\"by-value\" failonerror=\"true\" tempdir=\"${temp-artifact-dir}\" name=\"overview\"> <artifactcontent> <parserevaluate parserid=\"java-parser\" parserexpression=\"//class/methods/method[@name='@asseturi@']/comment/content/html\"/> </artifactcontent> </artifact> Make relationshp \"outer\" asset asset-name asset-version defined outside childassembly <assetrelationship name=\"containing-class\" assetname=\"@assetname@\" assetversion=\"@asset-version@\"/> </childassembly> Nested Elements assembly \"assembly\" task take any number tasks extend Task TaskContainer classes and/or implement Asset Collaboration Interfaces. described Asset Collaboration Tasks Miscellaneous Tasks below. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Asset Collaboration Tasks order build metadata asset, many different types tasks may need employed. metadata may come text file XML file. Artifacts asset may certain file extensions reside directory structure known format. Asset Adapter defines set components work together pull disparate information together asset ready publish. components three main types: Retrievers, Parsers, Asset Modifiers. miscellaneous tasks work filters implement variable passing mechanism components make use components may specify attribute referenced components aid collaboration. Retrievers produce list file URIs (filenames, URLs, etc.) retrieve content given file. Parsers parse contents file collection files produce set key/value(s) represent information interest asset. Parsers use Retrievers list files file contents interested Asset Modifiers update metadata asset. pull information Retrievers Parsers update asset attributes (name, version, description), classifiers, artifacts relationships. example miscellaneous task \"variable\" task associates value token replaced via \"@variable@ notation tasks. mechanism designed overcome restriction Ant properties act variables, immutable, restriction not allow changing values each iteration through assembly loop. Retriever Tasks fsfileset \"fsfileset\" task Retriever works file system produces list files and/or directories match patterns specified include/exclude list. mechanism very similar Ant's \"fileset\" task. Attributes fsfileset Attribute Description dir starting directory. Required Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE casesensitive type Set \"true\" \"false\". Determines filenames matched respect case. Default \"false\". unique string identify Retriever. string arbitrary must unique against Retrievers assembly. Return files (\"file\"), directories (\"dir\"), Default \"file\". Nested Elements fsfileset include include element takes required attribute \"name\" whose value pattern used match filename. pattern may include match any string matches any number subdirectories. Directory paths specified using forward slashes rather backslashes. Apache Ant documentation fileset more information. exclude exclude element takes required attribute \"name\" whose values pattern used match filename. file name matched pattern, excluded list. pattern matches directory, subdirectories excluded. Apache Ant documentation fileset more information. Examples <fsfileset dir=\"/my/source/dir\"> <include name=\"*.java\"/> <exclude name=\"Test*\"/> </fsfileset> Matches files end .java except those start Test directory /my/source/dir. <fsfileset dir=\"/my/source/dir\"> <include name=\"**/*.java\"/> </fsfileset> Matches files end .java /my/source/dir subdirectories. <fsfileset dir=\"/my/source/dir\"> <include name=\"**/*.java\"/> <exclude name=\"**/test/\"/> </fsfileset> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Matches files end .java /my/source/dir subdirectories except those directory subdirectory named \"test\". parserretriever \"parserretriever\" task turns values Parser key Retriever processed tasks work Retrievers. useful processing child assembly tasks childassembly). Attributes parserretriever Attribute Description unique string identify Retriever. string arbitrary must unique against Retrievers assembly. parserid Parser retrieve value parserkey Parser lookup key value interest. Nested Elements parserretriever None. Examples Return values \"methodnames\" key Parser \"java-parser\" Retriever interface. <parserretriever id=\"method-names\" parserid=\"java-parser\" parserkey=\"methodnames\"/> Required Yes. Yes. Parser Tasks textparser \"textparser\" task Parser parsing information regular text file. takes information Retriever applies expressions defined nested elements pull data text file associate key names. expressions Perl regular expressions pattern matching replacement. www.perl.org information Perl. Attributes textparser Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Attribute file Description file parse. retrieverid retrieveruri Retriever retrieve file contents parsed. URI file processed Retriever. not specified, first file retrieved. unique string identify Parser. string arbitrary must unique against Parsers assembly. Required Either file retrieverid required, file overrides retrieverid. Yes, unless file specified. Nested Elements textparser key \"key\" element used define key name expression expressions retrieving more values text being parsed Parser. may multiple key elements nested under textparser. Attributes key Attribute Description name key name. multivalue Set \"true\" \"false\". Determines multiple matches may performed produce more value key. Default \"false\". expression Perl regular expression. expression used match string text being parsed Parser. attribute used, replacement expression assumed nested expression elements may not used. expression entire file contents matched. expression empty string, not specified nested expression elements specified, entire file contents matched. Nested Elements key Required Yes. expression Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE expression attribute not specified, key element accepts two nested expression elements. first expression define Perl regular expression pattern used match text. second expression, specified, determines replacement pattern value. replacement pattern may include etc., indicate parentheses matched first expression. default replacement expression assumed second expression not given. xmap any Mapper task) Multiple Mapper elements may used serially transform expression. Mapper. result last Mapper used value key. Note developers: any task implements IMapper interface may used place Mapper. Examples textparser simple property file parser Parses text \"property-fileset\" Retriever produces two keys: \"version\" \"description\". former set text after string \"com.myproject.version=\" latter set text after string \"com.myproject.description=\". first key uses two expression elements, although second not needed default second key uses single expression attribute implied replacement expression. <textparser id=\"property-parser\" retrieverid=\"property-files\"> <key name=\"version\" multivalue=\"false\"> <expression value=\"^com.myproject.version=(.*)$$\"/> <expression value=\"\\1\"/> </key> <key name=\"description\" expression=\"^com.myproject.description=(.*)$$\" multivalue=\"false\"/> </textparser> Take contents file \"description-fileset\" Retriever, match entire contents, take first characters assign key \"description\". <textparser id=\"description-parser\" retrieverid=\"description-files\"> <key name=\"description\" expression=\"*\" multivalue=\"false\"> <xmap </key> </textparser> Retrieve current file primary asset files retriever based \"@asseturi@\" variable. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <textparser id=\"current-file\" retrieverid=\"asset-files\" retrieveruri=\"@asset-uri@\"> <key name=\"whole-file\" expression=\"*\"/> </textparser> xmlparser \"xmlparser\" task Parser parsing information XML file. takes information Retriever applies expressions defined nested elements pull data file associate key names. expressions XPath expressions http://www.w3.org/TR/xpath). Attributes xmlparser Attribute Description file file parse. retrieverid retrieveruri namespaceaware Retriever retrieve file contents parsed. URI file processed Retriever. not specified, first file retrieved. unique string identify Parser. string arbitrary must unique against Parsers assembly. Set \"true\" \"false\". Determines parsing acknowledge XML namespaces XPath expressions. Default \"false\". Required Either file retrieverid required, file overrides retrieverid. Yes, unless file specified. Nested Elements xmlparser key \"key\" element used define key name expression expressions retrieving more values text being parsed Parser. may multiple key elements nested under xmlparser. Attributes key Attribute Description name key name. multivalue Set \"true\" \"false\". Determines multiple matches may performed produce more value key. Default \"false\". Required Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE expression XPath expression. expression used match string text being parsed Parser. Nested Elements key expression expression attribute not specified, key element accepts nested expression element defines XPath pattern used match content XML file. xmap any Mapper task) Multiple Mapper elements may used serially transform expression. Mapper. result last Mapper used value key. Note developers: any task implements IMapper interface may used place Mapper. Examples xmlparser Parse contents XML file elements include \"<version>\" \"<description>\" elements store values parser's key/value list. <xmlparser id=\"property-parser\" retrieverid=\"xml-files\"> <key name=\"version\" expression=\"//version/text()\" multivalue=\"false\"/> <key name=\"description\" expression=\"//description/text()\" multivalue=\"false\"/> </xmlparser> Parse contents XML file includes namespaces set \"asset-name\" key value \"name\" attribute \"wsdl:service\" element. <xmlparser id=\"wsdl-parser\" namespaceaware=\"true\" retrieverid=\"xmlfiles\"> <key name=\"asset-name\" expression=\"//*[name()='wsdl:service']/@name\" multivalue=\"false\"/> </xmlparser> javaxmlparser Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE \"javaxmlparser\" task Parser parsing information Java source file using XPath expressions. takes information Retriever applies expressions defined nested elements pull data XML representation file associate key names. expressions XPath expressions http://www.w3.org/TR/xpath). Javadoc comments javadoc tags converted XML representation any HTML tags converted XHTML format. XML content run through XSLT stylesheet format content desired. \"xsltmapper\" task. Attributes javaxmlparser Attribute Description file Java file parse. retrieverid retrieveruri namespaceaware Retriever retrieve file contents parsed. URI file processed Retriever. not specified, first file retrieved. unique string identify Parser. string arbitrary must unique against Parsers assembly. Set \"true\" \"false\". Determines parsing acknowledge XML namespaces XPath expressions. Default \"false\". Required Either file retrieverid required, file overrides retrieverid. Yes, unless file specified. Nested Elements javaxmlparser xmlparser. Example XML file following Java source file produce internal XML representation \"javaxmlparser\" task parse. SampleService.java: Copyright SOA Software, Inc. rights Reserved. package com.logiclibrary.service.sample; import com.logiclibrary.common.*; Sample service demo AnySource Asset Adapter's Java parsing capability. @author dgross Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE public interface SampleService Creates instance sample service. @return SampleService object @throws LLException error creating service public SampleService createSampleService() throws LLException; Method test service public void test() throws RemoteException; Configure class supplied string. @param str configuration string @throws LLException error configuring service public void configure(String str) throws LLException; Execute class. @param arg1 first String argument @param arg2 second String argument @return int return value, error @throws LLException error configuring service public int execute(String arg1, String arg2) throws LLException; Private method private void internal(); Resulting XML: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <java> <class qname=\"com.logiclibrary.service.sample.SampleService\" name=\"SampleService\"> <comment> <content> <html> <head> <title </head> <body>Sample service demo AnySource Asset Adapter's Java parsing capability.</body> </html> </content> <tags> <tag> <name>author</name> <value>dgross</value> </tag> </tags> </comment> <methods> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <method name=\"createSampleService\" signature=\"com.logiclibrary.service.sample.SampleService createSampleService()\" returns=\"com.logiclibrary.ser vice.sample.SampleService\"> <comment> <content> <html> <head> <title </head> <body>Creates instance sample service.</body> </html> </content> <tags> <tag> <name>return</name> <value>SampleService object</value> </tag> <tag> <name>throws</name> <value>LLException error creating service</value> </tag> </tags> </comment> </method> <method name=\"test\" signature=\"void test()\" returns=\"void\"> <comment> <content> <html> <head> <title </head> <body>Method test service</body> </html> </content> <tags </comment> </method> <method name=\"configure\" signature=\"void configure(java.lang.String str)\" returns=\"void\"> <comment> <content> <html> <head> <title </head> <body>Configure class supplied string.</body> </html> </content> <tags> <tag> <name>param</name> <value>str configuration string</value> </tag> <tag> <name>throws</name> <value>LLException error configuring service</value> </tag> </tags> </comment> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE </method> <method name=\"execute\" signature=\"int execute(java.lang.String arg1, java.lang.String arg2)\" returns=\"int\"> <comment> <content> <html> <head> <title </head> <body>Execute class.</body> </html> </content> <tags> <tag> <name>param</name> <value>arg1 first String argument</value> </tag> <tag> <name>param</name> <value>arg2 second String argument</value> </tag> <tag> <name>return</name> <value>int return value, error</value> </tag> <tag> <name>throws</name> <value>LLException error configuring service</value> </tag> </tags> </comment> </method> <method name=\"internal\" signature=\"void internal()\" returns=\"void\"> <comment> <content> <html> <head> <title </head> <body>Private method</body> </html> </content> <tags </comment> </method> </methods> </class> </java> Examples javaxmlparser Parse contents current Java file setting classname key name Java class method names key list method names. key return contents XML file produced Java file. <javaxmlparser file=\"@asset-uri@\" id=\"java-parser\" validate=\"false\"> <key name=\"all\" expression=\"*\"/> <key name=\"classname\" expression=\"//class/@name\"/> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <key name=\"methodnames\" expression=\"//class/methods/method/@name\" multivalue=\"true\"/> </javaxmlparser> ejbfunctionsparser \"ejbfunctionsparser\" task Parser parsing information Enterprise Java Bean source file creating Functions XML file representation methods defined interface. content added asset standard interfacefunctions artifact run through XSLT stylesheet format content desired. \"xsltmapper\" task. Attributes ejbfunctionsparser Attribute Description file Java file parse. retrieverid retrieveruri Retriever retrieve file contents parsed. URI file processed Retriever. not specified, first file retrieved. unique string identify Parser. string arbitrary must unique against Parsers assembly. Required Either file retrieverid required, file overrides retrieverid. Yes, unless file specified. Nested Elements ejbfunctionsparser textparser. Note: parser return whole contents Functions XML file regardless key expression passed Examples ejbfunctionsparser Parse EJB file add interface-functions artifact resulting Functions XML produced. <ejbfunctionsparser file=\"@ejb-file@\" id=\"ejb-parser\"> <key name=\"all\" expression=\"*\"/> </ejbfunctionsparser> <artifact category=\"interface-functions\" type=\"by-value\" failonerror=\"true\" tempdir=\"${temp-artifact-dir}\"> <artifactcontent parserid=\"ejb-parser\" parserkey=\"all\"/> </artifact> javafunctionsparser Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE \"javafunctionsparser\" task Parser parsing method information Java source file creating Functions XML file representation methods defined class. content added asset standard interface-functions artifact run through XSLT stylesheet format content desired. \"xsltmapper\" task. Attributes javafunctionsparser Attribute Description file Java file parse. retrieverid retrieveruri Retriever retrieve file contents parsed. URI file processed Retriever. not specified, first file retrieved. unique string identify Parser. string arbitrary must unique against Parsers assembly. Required Either file retrieverid required, file overrides retrieverid. Yes, unless file specified. Nested Elements javafunctionsparser textparser. Note: parser return whole contents Functions XML file regardless key expression passed Examples javafunctionsparser Parse Java file add interface-functions artifact resulting Functions XML produced. <javafunctionsparser file=\"@java-file@\" id=\"java-parser\"> <key name=\"all\" expression=\"*\"/> </javafunctionsparser> <artifact category=\"interface-functions\" type=\"by-value\" failonerror=\"true\" tempdir=\"${temp-artifact-dir}\"> <artifactcontent parserid=\"java-parser\" parserkey=\"all\"/> </artifact> Value Tasks following tasks used retrieve values parser retriever used construct value variable. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE parservalue \"parservalue\" task used retrieve value Parser specifying parser key. value retrieved override \"value\" attribute parent element. given parser key may return multiple values, case parent element handles multiple values. element may contain nested tasks such Mappers construct/modify value. Attributes parservalue Attribute Description parserid Parser retrieve value parserkey Parser lookup key value interest. defaultvalue Return value values retrieved parser given key. failonerror Set \"true\" \"false\". Fail value found given key. Ignored defaultvalue attribute specified. Default \"false\". Examples parservalue Set asset version value parser. <assetattribute name=\"version\"> <parservalue parserid=\"xml-parser\" parserkey=\"version\"/> </assetattribute> Required Yes. Yes. parserkeys \"parserkeys\" task used iterate multiple parser keys match given key and/or value expression. iteration used its parent task iterate individual key/values matched. useful creating multiple items (classifiers, artifacts, relationships) parser key name encodes information type item added. Attributes parserkeys Attribute Description keyexpression regular expression used match keys interest associated Parser. Perl Regular Expression Syntax. parserid Parser retrieve keys valueexpression regular expression used match values interest associated keys matched keyexpression. Perl Required Yes. Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE keyvar valuevar Regular Expression Syntax. variable set current key while iterating list keys returned. variable set current value current key while iterating list keys values returned. Examples parserkeys Using parserkeys task create asset relationships based keys Parser form \"relatedasset.xxx\" \"xxx\" relationship name: <assetrelationship> <parserkeys keyexpression=\"^relatedasset\\..*\" parserid=\"textparser\" keyvar=\"key\" valueexpression=\".*\" valuevar=\"value\"/> <relationshipname value=\"@key@\"> <xmap from=\"relatedasset\\.(.*)\" </relationshipname> <assetname value=\"@value@\"/> <assetversion value=\"1.0\"/> </assetrelationship> parserevaluate \"parserevaluate\" task uses Parser evaluate expression. used evaluate expression based variable may not known Parser time, such child assembly. childassembly. element may contain nested tasks such Mappers construct/modify value. Attributes parserevaluate Attribute Description parserid Parser retrieve value parserexpression Parser expression evaluate. must match expression syntax given Parser. defaultvalue Return value values retrieved parser given expression. failonerror Set \"true\" \"false\". Fail value found given key. Ignored defaultvalue attribute specified. Default \"false\". maxoccurs positive integer. limit maximum number values returned task. Examples parserevaluate Copyright LogicLibrary, Inc. Rights Reserved. Required Yes. Yes. ANYSOURCE ASSET ADAPTER USER GUIDE Evaluate XPath expression javaxmlparser based current value @asset-uri@ may childassembly task) create overview artifact. <artifact category=\"overview\" type=\"by-value\" failonerror=\"true\" tempdir=\"${temp-artifact-dir}\" name=\"overview\"> <artifactcontent> <parserevaluate parserid=\"java-parser\" maxoccurs=\"1\" parserexpression=\"//class/methods/method[@name='@asseturi@']/comment/content/html\"/> </artifactcontent> </artifact> url \"url\" task used simplify creation URL by-reference purposes). used wherever parser value required. handles encoding specifying url parameters. URL constructed following form: protocol://host:port/path?param1name=param1value&param2name=param2value Attributes url Attribute Description protocol protocol URL. example: host hostname server use URL. port port URL. port not specified, default port used depending protocol. path path resource. Required Yes. Yes. Yes, nested urlpath element not specified. Nested Elements url urlpath \"urlpath\" task represents path portion URL. specified url task, main purpose using urlpath nested task allow Mappers operate its contents. element inherits attributes behavior namevalueattribute task. urlparameter \"urlparameter\" task used set parameter URL. url task manage encoding name value parameter correctly. element inherits attributes behavior namevalueattribute task. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Attributes urlpath addition namevalueattribute attributes) Attribute Description Required name name URL parameter Yes. Examples url example used, inside artifactreference task by-reference artifact create url performs search Google. depends variable called query being set replace any \"hello\" occurrences query \"goodbye\". <url protocol=\"http\" host=\"www.google.com\" port=\"80\"> <urlpath value=\"/search\"/> <urlparameter name=\"q\" value=\"@query@\"> <xmap from=\"hello\" to=\"goodbye\"/> </urlparameter> </url> latestversion \"latestversion\" task used anywhere parservalue expected, most likely case relatedasset modifier. latestversion task enumerates versions asset return most recent alphanumerically. example asset Repository Manager version ABC. text \"ABC\" asset returned. Attributes latestversion Attribute Description assetname name asset latest version returned. Examples latestversion example creates related predecessor relationship latest version asset \"Base\" <assetrelationship name=\"predecessor\" assetname=\"Base\"/> <assetversion> <latestversion assetname=\"Base\"/> </assetversion> </assetrelationship> Required Yes. namevalueattribute \"namevalueattribute\" element not used directly, used tasks inherit its implementation hold name/value pair. value Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Retriever Parser, may specified directly \"value\" attribute. element may contain nested tasks such Mappers construct/modify value. Token filtering may used value attribute using \"@variable@\" token filtering syntax. Filtering. Tasks inherit behavior attributes task \"artifactcategory\", \"artifactcontent\", \"artifactname\", \"artifactreference\", \"artifacttype\", \"artifactversion\", \"relationshipname\", \"assetname\", \"assetversion\", \"cc_attribute\", \"classifiername\", \"classifiervalue\", \"urlparameter\", \"urlpath\". Attributes namevalueattribute Attribute Description value value attribute. Required Yes, unless nested elements used set value. Asset Modifier Tasks assetattribute \"assetattribute\" task used set asset name, asset version asset description asset. takes name/value pair name \"name\", \"version\" \"description\". element may contain nested tasks such Mappers construct/modify value. Token filtering may used value attribute using \"@variable@\" token filtering syntax. Filtering. Attributes assetattribute Attribute Description name \"name\", \"version\" \"description\". value value asset attribute. Required Yes. Yes, unless nested elements used set value. Nested Elements assetattribute parservalue \"parservalue\" task may used set value asset attribute. parservalue returns multiple values, first value used. parservalue above. Examples assetattribute Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Set name, version description asset using variable substitution Parser values. <assetattribute name=\"name\" value=\"@asset-name-no-ext@\"/> <assetattribute name=\"version\"> <parservalue parserid=\"xml-parser\" parserkey=\"version\"/> </assetattribute> <assetattribute name=\"description\"> <parservalue parserid=\"description-parser\" parserkey=\"description\"/> </assetattribute> classifier \"classifier\" task Modifier adding replacing asset classifier. classifier name value. Valid classifiers defined Global Definition Template library. classifier value may set based value variable, results Parser. Attributes classifier Attribute Description name name classifier. value value classifier. maxoccurs failonerror parserid parserkey positive integer. maximum number classifiers added task. Set \"true\" \"false\". task fail error processing classifier? Default \"false\". Parser retrieve value(s) Parser lookup key value(s) interest. Required Yes, unless nested elements used set name. Yes, unless nested elements parserid/parserkey used set value. Nested Elements classifier classifiername optional \"classifiername\" element used set name classifier. overrides \"name\" attribute parent classifier element. element inherits attributes behavior namevalueattribute task. classifiervalue Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE optional \"classifiervalue\" element used set value classifier. overrides \"value\" attribute parent classifier element. element inherits attributes behavior namevalueattribute task. parservalue \"parservalue\" task may used set value classifier. parservalue returns multiple values, multiple classifiers created, value maxoccurs. parservalue above. parserkeys \"parserkeys\" task may used iterate number parser keys/values order create multiple classifiers. parserkeys above. Examples classifier Set asset-type classifier: <classifier name=\"asset-type\" value=\"Application\"/> Create author classifiers values parser: <classifier name=\"author\"> <parservalue parserid=\"xml-parser\" parserkey=\"author\"/> </classifier> Use parserkeys task create classifiers based keys Parser form \"classifier.xxx\" \"xxx\" classifier name: <classifier> <parserkeys keyexpression=\"^classifier\\..*\" parserid=\"textparser\" keyvar=\"key\" valueexpression=\".*\" valuevar=\"value\"/> <classifiername value=\"@key@\"> <xmap from=\"classifier\\.(.*)\" </classifiername> <classifiervalue value=\"@value@\"/> </classifier> artifact \"artifact\" task Modifier adding replacing asset artifact. reference actual artifact may physical filename URI. reference specified \"file\" attribute using Retriever allows multiple artifacts added asset. artifact name, category type (by-value by-reference), may set corresponding attribute nested element. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Normally, artifact referenced URI type by-reference, special case asset overview artifact required by-value. case, file must written temporary file physical filename added reference artifact. \"tempdir\" attribute used purpose point directory task write temporary file Attributes artifact Attribute Description retrieverid Retriever retrieve artifact references and/or file contents. file filename asset artifact. Overrides retrieverid. variable variable name set filename/URI current artifact being processed. variable used child tasks via \"@variablename@\" token filtering syntax, variablename value variable attribute. Filtering. maxoccurs positive integer. maximum number artifacts added task. replace Set \"true\" \"false\". artifact category already exists, replaced. Default \"false\". failonerror Set \"true\" \"false\". task fail error processing artifact (say file doesn't exist Retriever returned empty list)? Default \"true\". category category artifact. list artifact categories defined Global Definition Template library. name artifact name. Default artifact category. Allows different name displayed particular artifact. Either \"by-reference\", \"by-value\", by\"description\". version info artifact. Default timestamp file. asset republished, change notification generated based difference between current previous version. contents artifact alone changes, notification not generated. specifying different artifact version, change notification generated. Normally, default behavior Required Yes, unless artifactcategory nested element used. type version Yes, unless artifacttype nested element used. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE tempdir adequate. directory store temporary file. Used artifact type \"by-value\" reference URI/URL Retriever. file retrieved stored directory before being loaded repository. file not deleted. Nested Elements artifact artifactname optional \"artifactname\" element used set name artifact. overrides \"name\" attribute parent artifact element. element inherits attributes behavior namevalueattribute task. artifactcategory optional \"artifactcategory\" element used set category artifact. overrides \"category\" attribute parent artifact element. element inherits attributes behavior namevalueattribute task. artifactreference optional \"artifactreference\" element used set reference artifact. default, artifact reference filename URI/URL Retriever temporary filename \"tempdir\" attribute). value overridden, say, modify URL change directory prefix. element inherits attributes behavior namevalueattribute task. artifacttype optional \"artifacttype\" element used set type artifact. overrides \"type\" attribute parent artifact element. type must \"by-reference\" \"by-value\". element inherits attributes behavior namevalueattribute task. artifactversion Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE optional \"artifactversion\" element used set version information artifact. overrides \"version\" attribute parent artifact element. element inherits attributes behavior namevalueattribute task. artifactcontent optional \"artifactcontent\" element used set contents by-value artifact. element inherits attributes behavior namevalueattribute task. Examples artifact Set overview artifact contents Retriever. <artifact category=\"overview\" type=\"by-value\" retrieverid=\"overview-fileset\" failonerror=\"true\" maxoccurs=\"1\" variable=\"overview-file-name\"> <artifactreference value=\"@overview-file-name@\"/> </artifact> assetrelationship \"assetrelationship\" task used specify asset related current asset. relationship held asset does not exist its own (meaning asset removed, relationship removed Attributes assetrelationship Attribute Description name name relationship. assetname name asset relationship points assetversion failonerror version asset relationship points Set \"true\" \"false\". task fail error processing assetrelationship? Default \"true\". Required Yes. Unless assetid not specified assetname child element not specified. Unless assetname used. Nested Elements assetrelationship relationshipname optional \"relationshipname\" element used set name relationship. overrides \"name\" attribute parent assetrelationship Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE element. element inherits attributes behavior namevalueattribute task. assetname optional \"assetname\" element used set name relationship. overrides \"assetname\" attribute parent relationship element. element inherits attributes behavior namevalueattribute task. assetversion optional \"assetversion\" element used set name relationship. overrides \"assetversion\" attribute parent relationship element. element inherits attributes behavior namevalueattribute task. Examples assetrelationship <assetrelationship name=\"uses\" assetname=\"otherasset\" assetversion=\"1.0\"/> assetmerge \"assetmerge\" task used merge information another asset nested elements assetmerge allow include exclude certain artifacts, classifiers, relationships. default, artifacts included artifactinclude artifactexclude statements given. any artifactinclude artifactexclude statements given, artifact must match least include excludes. same applies classifiers relationships. Each nested elements may take use wildcard match multiple values. example \"support-*\" match support-level support-person. Attribute assetname assetversion Description name asset merge. version asset merge. Required Yes. Yes. Nested Elements assetmerge artifactinclude artifactexclude \"artifactinclude\" task artifactexclude tasks used limit artifacts merged asset. Attribute Description Required Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE category category name artifact existing asset must match included excluded. Yes. classifierinclude classifierexclude \"classifierinclude\" task classifierexclude tasks used limit classifiers merged asset. Attribute Description name name classifier existing asset must match included excluded. Required Yes. relatedassetinclude relatedassetexclude \"relatedassetinclude\" task relatedassetexclude tasks used limit related assets merged asset. Attribute Description Name relationship name related asset existing asset must match included excluded. Examples assetmerge Required Yes. <assetmerge assetname=\"@asset-name@\" assetversion=\"@latest-version@\"> <artifactinclude category=\"overview <classifierinclude name=\"*\"/> <classifierexclude name=\"internal-*\"/> <relatedassetexclude name=\"*\"/> </assetmerge> Mapper Tasks Mapper tasks used child elements tasks. passed value parent modify way. encodeurl \"encodeurl\" task Mapper retrieves URL form file Retriever. Retriever entrusted creating URL used browser IDE retrieve file. useful by-reference artifacts \"artifactreference\" task. \"encodeurl\" task does not support any child elements. value passed Mapper its parent file name returned Retriever. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Attributes encodeurl Attribute Description retrieverid Retriever. Examples encodeurl Required Yes. <artifact category=\"usage-guide\" type=\"by-reference\" retrieverid=\"usage-guide-retriever\" maxoccurs=\"1\" variable=\"usage-guide-file-name\"> <artifactreference value=\"@usage-guide-file-name@\"> <encodeurl retrieverid=\"usage-guide-retriever\"/> </artifactreference> </artifact> prepend \"prepend\" Mapper adds given string beginning its input string. Attributes prepend Attribute Description value string prepend. Examples prepend Prepend text \"http://myserver\" beginning input string: <prepend value=\"http://myserver\"/> Required Yes. substitute \"substitute\" task transforms its input substituting text. Attributes substitute Attribute Description string match. value assigned. replaceall Set \"true\" \"false\". occurrences replaced? Default \"true\". Examples substitute transformation backslash forward slash look <substitute Required Yes. Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE substring \"substring\" task returns portion its input. Attributes substring Attribute Description startindex integer index first character keep. index value must integer length input string minus Default length number characters keep including starting character. Must greater zero. number characters start index end input string less value length, rest input string returned. Examples substring Return first characters input string: <substring startindex=\"0\" length=\"200\"/> Required Yes. xmap \"xmap\" task Mapper takes regular expression replacement expression transform its input. Token filtering may used attribute using \"@variable@\" token filtering syntax. Filtering. Attributes xmap Attribute Description regular expression match input. Perl Regular Expression Syntax below. replacement expression. may include replacement tokens form positive number represents expression matched attribute. syntax description below. Perl Regular Expression Syntax following brief overview Perl regular expressions. more information, consult Perl documentation. matches beginning line Required Yes. Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE matches end line (note double dollar sign must used since special character Ant) matches arbitrary character matches zero more previous character expression matches more previous character expression groups portions expression associated etc. numbered left right outermost innermost grouping. matches previous character expression times. [abc] matches characters matches space character matches non-space character matches digit matches non-digit matches period matches single backslash Examples xmap Transform filename optional \"Chess\" \"chess\" its name ends \".jpr\" string start \"Sample Chess\" end rest original name: <xmap from=\"^.*/([Cc]hess)?(.+)\\.jpr$$\" to=\"Sample Chess Transform asset URI directory pathname removing everything after last backslash: <variable name=\"asset-dir\" value=\"@asset-uri@\"> <xmap </variable> xsltmapper \"xsltmapper\" task Mapper takes performs XSLT translation its XML input using XSLT stylesheet. Attributes xsltmapper Attribute Description style filename XSLT stylesheet. Required Yes. Examples xsltmapper Run results javaxmlparser through XSLT stylesheet produce overview artifact. <artifact category=\"overview\" type=\"by-value\" failonerror=\"true\" tempdir=\"${temp-artifact-dir}\" name=\"overview\"> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <artifactcontent parserid=\"java-parser\" parserkey=\"all\"> <xsltmapper style=\"overview.xsl\"/> </artifactcontent> </artifact> Miscellaneous Tasks variable \"variable\" task implements simple name/value pair association. name value set directly result filtering transformation and/or more mapping transformations parservalue. Token filtering may used value attribute using \"@variable@\" token filtering syntax. Filtering. Attributes variable Attribute Description name name given variable. value value assigned. Required Yes. Yes, unless child mapping transformation specified. Examples variable simple filtering transformation look <variable name=\"foo\" value=\"@token@\"/> more complex mapping transformation requires child elements implement IMapper interface: <variable name=\"foo\" value=\"@token@\"> <map </variable> Setting variable value returned parser: <variable name=\"asset-name\" value=\"@token@\"> <parservalue parserid=\"my-parser\" parserkey=\"name\"/> </variable> assetsource Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE \"assetsource\" task used cache capture templates locally. normally used debugging conjunction \"offline\" attribute \"assetadapter\" task. Nested Elements assetsource connection connection above. cachetemplates optional \"cachetemplates\" task used child \"assetsource\" task. used copy capture templates (XML files) local directory use \"offline\" attribute \"assetadapter\". Attributes parservalue Attribute Description dir Directory store templates Example artifact <target name=\"offline-setup\"> <mkdir dir=\"${templates-dir}\"/> <assetsource> <connection file=\"${connections-file}\" name=\"${connection-name}\"/> <cachetemplates dir=\"${templates-dir}\"/> </assetsource> </target> Required Yes. assetdiff \"assetdiff\" task used determine current asset different another. method comparing asset specified quite simple. artifacts, artifact asset must exist specified asset same category, name, version. classifiers, each must exist specified asset same name value. related assets, each must exist specified asset same relationship name, asset name, asset version. artifact, classifier, related asset processed asset doesn't exist asset specified, resultvariable set \"true\". Otherwise not set. elements compare limited using nested elements. default artifacts, classifiers, related assets compared diff. Attributes assetdiff Attribute Description assetname name asset compare Required Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE assetversion resultvariable version asset compare variable set \"true\" assets differ. Otherwise not set Yes. Yes. Nested Elements assetdiff artifactinclude artifactexclude \"artifactinclude\" task artifactexclude tasks used limit artifacts diff'ed specified asset. Attribute Description category category name artifact existing asset must match included excluded diff comparison. Required Yes. classifierinclude classifierexclude \"classifierinclude\" task classifierexclude tasks used limit classifiers diff'ed specified asset. Attribute Description name name classifier existing asset must match included excluded diff comparison. Required Yes. relatedassetinclude relatedassetexclude \"relatedassetinclude\" task relatedassetexclude tasks used limit related assets diff'ed specified asset. Attribute Description Name relationship name related asset existing asset must match included excluded diff comparison. Examples assetdiff example compares asset asset asset artifacts differ, assets-differ variable set \"true\". <assetdiff assetname=\"@asset-name@\" assetversion=\"@latest-version@\" Copyright LogicLibrary, Inc. Rights Reserved. Required Yes. ANYSOURCE ASSET ADAPTER USER GUIDE resultvariable=\"assets-differ\"> <artifactinclude category=\"*\"/> </assetdiff> assetskip \"assetskip\" task used skip processing current asset. Most likely result conditional. Examples assetskip example skips processing current asset variable skip set \"true\". <istrue value=\"@skip@\"/> <assetskip/> task very powerful allows Asset Adapter perform actions depending content certain variables. task sections: condition, clause, \"else\" clause. condition evaluates true, clause executed. Otherwise \"else\" clause executed. condition clause element, must appear first subelement task, though contain nested elements. \"else\" clauses multiple clauses. Nested Elements Conditional condition portion task include variety test conditions. task groups conditions, logically and'ed together arrive result. <equals arg1=\"@test1@\" arg2=\"testval\"/> <equals arg1=\"@test2@\" arg2=\"testval\"/> equals equal task returns true both its arguments (arg1, arg2) equal. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <equals arg1=\"@test1@\" arg2=\"testval\"/> isfalse task return true its argument \"false\". <isfalse value=\"@testval@\"/> isset task returns true its argument, variable name set. <isset variable=\"variable-name\"/> istrue task return true its argument \"true\". <istrue value=\"@testval@\"/> not not task inverts meaning nested task. contain direct subtask. <not> <equals arg1=\"1\" arg2=\"2\"/> </not> task groups conditions, logically or'ed together arrive result. <equals arg1=\"@test@\" arg2=\"testval1\"/> <equals arg1=\"@test@\" arg2=\"testval2\"/> Attribute Description category category name artifact existing asset must match included excluded diff comparison. Required Yes. \"else\" clause doesn't fixed set tasks may specified accept any valid asset adapter task, long makes sense context. example \"assembly\" not nested task. else \"else\" clause doesn't fixed set tasks may specified accept any valid asset adapter task, long makes sense context. example \"assembly\" not nested task. Examples Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE \"old-version\" variable set, set variable called asset-version append otherwise set asset-version variable <isset variable=\"old-version\"/> <variable name=\"asset-version\" value=\"@old-version@.0\"/> <else> <variable name=\"asset-version\" value=\"1.0/> </else> script \"script\" task allows asset adapter perform work does not fit confines Asset Adapter tasks. supported scripting language currently JavaScript. not meant complete JavaScript reference, more definitive sources Instead meant guide integrate JavaScript Asset Adapter tasks Asset Adapter encounters script task, must way JavaScript able process content Repository Manager variables. future may extended Asset Adapter concepts, such Mappers, Parsers, limited variables. retrieve Asset Adapter variable script task, app1 assembly filters app1.getLocalFilters(); testvalue filters.replaceTokens(\"@testvariablename@\"); set Asset Adapter variable, app1 assemblyid: prop project.createTask(\"variable\"); prop.setFilters(app1.getLocalFilters()); prop.setName(\"newvariable\"); prop.setValue(\"variablevalue\"); prop.perform(); Attributes script Attribute Description language scripting language use. Currently \"javascript\" supported. Required Yes. Examples script following example assumes \"version\" variable set integer example increments <script language=\"javascript\"><![CDATA[ version variable filters app1.getLocalFilters(); Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE ver filters.replaceTokens(\"@version@\"); Parse increment variable jsversion parseInt(ver); jsversion jsversion Set version variable task project.createTask(\"variable\"); task.setFilters(app1.getLocalFilters()); task.setName(\"version\"); task.setValue(jsversion); task.perform(); ]]></script> retrieverwriter \"retrieverwriter\" task create file contents retriever. Attributes retrieverwriter Attribute Description file output filename. retrieverid Retriever retrieve file contents. retrieveruri URI file retrieved Retriever. not specified, first file retrieved. Nested Elements retrieverwriter None. Examples retrieverwriter Save contents file retrieved primary asset retriever saving temporary file. <retrieverwriter file=\"${temp-file}\" retrieverid=\"asset-files\" retrieveruri=\"@asset-uri@\"/> Required Yes. Yes. CVS Tasks (optional) cvsfileset \"cvsfileset\" task Retriever works CVS repository produces list files and/or directories match patterns specified include/exclude list. requires use Web interface CVS such CVS Web order allow retrieving Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE files via URL. returns pathnames URL form relative provided \"weburl\" attribute. task makes use Ant's \"cvs\" task. Attributes cvsfileset Attribute Description weburl URL CVS web server used retrieve contents given file server. cvsroot CVS root specification. :pserver:user@host:rootdir. dest directory checked files placed. package CVS package/model name. casesensitive Set \"true\" \"false\". Determines filenames matched respect case. Default \"false\". passwordfile Path CVS password file. .cvspass. command CVS command execute. Default \"checkout\". unique string identify Retriever. string arbitrary must unique against Retrievers assembly. type Return files (\"file\"), directories (\"dir\"), Default \"file\". Nested Elements cvsfileset fsfileset. Examples <cvsfileset cvsroot=\":pserver:bsmith@cvshost:/usr/local/cvsroot\" package=\"componentx\" dest=\"/cvs/client/dir\" weburl=\"http://cvshost/cvs/bin/cvsweb.cgi/~checkout~\" id=\"xmlfiles\"> <include name=\"**/*.xml\"/> </cvsfileset Required Yes. Yes. Yes. Yes. ClearCase Tasks (optional) cc_attributevalues \"cc_attributevalues\" retriever enumerates ClearCase attribute values elements versions. main purpose task enumerate list values assetfiles task process. example, ClearCase elements contain asset_name attributes, cc_attributevalues task (nested assetfiles task) used Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE enumerate values process asset each Since task retriever, does not return file references, results undefined try use retriever files expected returned. instance, cc_files ClearCase task. Attributes cc_attributevalues Attribute Description attribute attribute value name ClearCase enumerate. path path ClearCase view contains elements/versions search. onelement set true, ClearCase attributes search element. Otherwise, onelement not set set false attributes search attached ClearCase version. delimiter delimiter use separates distinct values ClearCase attribute. example, ClearCase attribute contains value \"asset1, asset2\" delimiter set task return results: \"asset1\", \"asset2\". delimiter not set, result returned: \"asset1, asset2\" Examples cc_attributevalues <assetfiles id=\"assettypes\" assemblyid=\"app1\"> <cc_attributevalues attribute=\"asset_name\" path=\"m:\\viewdirectory\" onelement=\"true\" delimiter=\",\"/> </assetfiles> Required Yes. Yes previous example searches ClearCase view directory m:\\viewdirectory any elements attribute set asset_name. assetfiles task execute assembly named app1 once every distinct value found asset_name attribute. interpret comma separated values attribute distinct values. cc_files \"cc_files\" retriever finds ClearCase files view match set configured attributes. Attributes cc_files Attribute Description retriever referred artifact tasks create artifacts reference ClearCase files. Required Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE path path ClearCase view contains elements/versions search attributes onelement set true, ClearCase attributes search element. Otherwise, onelement not set set false attributes search ClearCase version. Examples cc_files Yes <cc_files id=\"ccfiles\" path=\"m:\\viewdirectory\" onelement=\"true\"> <cc_attribute name=\"asset_name\" value=\"@asset-name@\" delimiter=\",\"/> <cc_attribute name=\"artifact_type\"/> </cc_files> previous example searches elements ClearCase view directory m:\\viewdirectory any elements asset_name set value @asset-name@ variable artifact_type attribute set. nested task cc_files \"cc_files\" retriever finds ClearCase files view match set configured attributes. Attributes cc_files Attribute Description retriever referred artifact tasks create artifacts reference ClearCase files. path path ClearCase view contains elements/versions search attributes onelement set true, ClearCase attributes search element. Otherwise, onelement not set set false attributes search ClearCase version. Nested Elements cc_files Required Yes. Yes cc_attribute \"cc_attribute\" restrict types files cc_files task retrieves. Multiple cc_attribute elements specified cc_files task retrieve those elements/version match specified cc_attribute nested Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE tasks. filter criteria either just name, both name value. delimiter specified ClearCase attribute set say, comma delimited list attribute values. example <cc_attribute name=\"asset_name\" value=\"asset1\" delimiter=\",\"/> match ClearCase element contains attribute asset_name=\"asset1, asset2\". delimiter not set, element not returned. Attributes cc_attribute Attribute Description name name attribute ClearCase element/version must set file retrieved cc_files. value value corresponding name attribute ClearCase matched. value not set cc_files task return files attribute set regardless value contain. delimiter delimiter set file retrieved cc_files task any delimiter separated values matched. Required Yes Examples cc_files <cc_files id=\"ccfiles\" path=\"m:\\viewdirectory\" onelement=\"true\"> <cc_attribute name=\"asset_name\" value=\"@asset-name@\" delimiter=\",\"/> <cc_attribute name=\"artifact_type\"/> </cc_files> previous example searches elements ClearCase view directory m:\\viewdirectory any elements any value comma delimited set ClearCase asset_name values set value @asset-name@ variable artifact_type ClearCase attribute set. cc_fileattribute \"cc_fileattribute\" task simple task used wherever parservalue required, classifier value example. task returns ClearCase attribute value attached element/version. Attributes cc_fileattribute Attribute Description file ClearCase file view) contains attribute value. attribute name attribute whose value returned Required Yes. Yes Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE onelement set true, ClearCase attribute used element. Otherwise, onelement not set set false attribute used ClearCase version. Examples cc_fileattribute <artifact variable=\"file-uri\" retrieverid=\"ccfiles\" type=\"by-value\" failonerror=\"false\" maxoccurs=\"1\" reference=\"m:\\viewdirectory\\vob\\src\\Main.java\" version=\"1.0\"> <artifactcategory> <cc_fileattribute file=\"m:\\viewdirectory\\vob\\src\\Main.java\" attribute=\"artifact_type\" onelement=\"true\"/> </artifactcategory> </artifact> example creates by-value artifact based contents ClearCase file m:\\viewdirectory\\vob\\src\\Main.java. artifact's category set value ClearCase artifact_type attribute attached element. cc_fileversion \"cc_fileversion\" task simple task used wherever parservalue required, classifier value example. task returns version ClearCase file, view. Attributes cc_fileversion Attribute Description file ClearCase file view). version visible file returned. Examples cc_fileattribute <artifact variable=\"file-uri\" retrieverid=\"ccfiles\" type=\"by-value\" category=\"Component\" failonerror=\"false\" maxoccurs=\"1\" reference=\"m:\\viewdirectory\\vob\\src\\Main.java\"> <artifactversion> <cc_fileversion file=\"m:\\viewdirectory\\vob\\src\\Main.java\"/> </artifactversion> </artifact> Required Yes. example creates by-value artifact based contents ClearCase file m:\\viewdirectory\\vob\\src\\Main.java. artifact's version set version ClearCase file. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Metallect Server Tasks (optional) Although Server exposes resources via XML, standard tasks ASAA cannot handle relationships XML. Therefore, several Server specific tasks written handle relationships between resources. Several Server tasks require XML file process. XML file resource report Server must generated saved ASAA use following section describes usage server specific tasks. iqsresourceretriever iqsresourceretriever task used both assembly task retrieve Server resources assetfiles task define resources asset candidates. default resources returned iqsresourceretriever element, instead must included excluded using iqsresourceinclude iqsresourceexclude tasks. iqsresourceretriever task used assembly, child elements called once every matching resource iqsresourceinclude iqsresourceexclude). Attributes iqsresourceretriever Attribute Description retriever file XML file exported Server retrieve resources resultvar used assembly, variable assigned resourceid every matching resource. variable available child tasks enumerated once every resource. Required Yes. iqsresourceinclude iqsresourceexclude iqsresourceinclude iqsresourceexclude task used subtasks iqsresourceretriever task specifies resources include exclude list returned resources. Every resource Server returns checked against every iqsresourceinclude iqsresourceexclude subtask. last matching include exclude subtask determines whether resource added list resources retrieved parent iqsresourceretriever task. Three types parameters specified include exclude task: type, environment, component, correspond properties Server resource. more not specified assumed wild card always matches resource unless specified parameter does not match. example <iqsresourceinclude type=\"PARAMETER\" environment=\"JAVA\" matches resources type value \"PARAMETER\" environment value \"JAVA\" anything component value. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE Attributes iqsresourceinclude iqsresourceexclude Attribute Description type Server type property match against available resources environment Server environment property match against available resources component Server component property match against available resources Required iqsresourceparser iqsresourceparser may included directly subtask assembly task, subtask iqsresourceretriever task. purpose task make keys available asset modifiers (classifiers, relationships, artifacts). resourceid must specified subtasks extract various values resource. Since iqsresourceparser may called several times child iqsresourceretriever), any keys fixed names may overwritten. Therefore another task, keyaggregator, allows keys qualified resource retrieved. keyaggregator description example. Attributes iqsresourceparser Attribute Description parser, used parserkeys task others. resourceid Server resource parse values Required Yes. Yes keyaggregator keyaggregator used parent iqsresourceparser task qualify keys resources IDs avoid being overwritten multiple resources returned parent parser. name attribute includes descriptive name normal key task), include resource variable qualifies key. Later match keys using name and/or part resourceid. value attribute includes property name parse resource. case XML file, either attribute element name. Attributes keyaggregator Attribute Description Required name name key create. name Yes. qualified resource variable. example value XML file, either more Yes. attributes element names, enclosed braces, resource corresponding value key set example below. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE multivalue operates same multivalue attribute key task. default=false Example: <iqsresourceretriever id=\"retid\" file=\"${iqsfile}\" resultvar=\"interfaces\"> <iqsresourceinclude component=\"SOURCE_INTERFACE\"/> <iqsresourceparser id=\"apprelparser\" resourceid=\"@interfaces@\"> <keyaggregator name=\"iname:@interfaces@\" value=\"{shortDescription}/{description}\"/> </iqsresourceparser> </iqsresourceretriever> iqsreferenceretriever task enumerates set resources directional relationship resource interest. must child assembly not allowed assetfiles task. resourceretriever, task call its child tasks once every matching resource. resultvar variable set resource retrieved subtasks called. Attributes iqsreferenceretriever Attribute Description file XML file use contains resource specified resourceid attribute references interest. resourceid resource interest. list matching resources determined direction, type, fullyenumerated attributes. direction INCOMING, OUTGOING, PARENT. set INCOMING, resources incoming relationship resourceid matched. set OUTGOING, resources outgoing relationship resourceid matched. set PARENT, parent resourceid matched. fullyenumerated set true, matching resources whether level many levels away resourceid matched. mathematical terms, set returned retriever closed. type type relationship match direction attribute set INCOMING, OUTGOING. resultvar variable set every matching resource. variable used child iqsresourceretriever iqsresourceparser tasks extract data matching resources. Required Yes. Yes. Yes. default=false Yes. Yes. Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <iqsreferenceretriever file=\"${iqsfile}\" resourceid=\"@asset-uri@\" direction=\"PARENT\" resultvar=\"containers\" fullyenumerated=\"true\"> <iqsresourceparser id=\"parentparser\" resourceid=\"@containers@\"> <keyaggregator name=\"parent.@containers@\" multivalue=\"false\" value=\"${app-component}/${shortDescription}\"/> </iqsresourceparser> </iqsreferenceretriever> Rational Team Concert (RTC) Tasks (optional) Integration Rational Team Concert enumerate RTC source code system create assets based files identified RTC. use RTC tasks, bin/rtc.properties file needs added list tasks XML rules file, <taskdef file=\"ASSET_ADAPTER_HOME\\bin\\rtc.properties\"/> rtcconnection \"rtcconnection\" task defines connection server used retrieve RTC content. connection referred RTC related tasks, otherwise most currently run rtcconnection information used RTC tasks rtcfileset). Attributes rtcconnection Attribute Description server URL RTC server. must URL already defined Visual Studio client. connection task used related tasks refer connection use task. username user connect server password password user connect server Nested Elements rtcconnection None. Examples Defines connection RTC server located example.com:9443/ccm/. <rtcconnection id=\"rtcconn\" server=\"https://example.com:9443/ccm/\" username=\"user\" password=\"secret\"/> Required Yes. Yes. Yes Yes rtcfileinfo Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE \"rtcfileinfo\" task parser predefines set parserkeys used retrieve version information RTC file. Attributes rtcfileinfo Attribute Description item reference file RTC queried information. item set RTC reference following format: \"/directory/path.txt\" parser used related tasks. connectionid rtcconnection use retrieving files. attribute not specified, defaults last executed rtcconnection task. filesetid RTC fileset contains item being referenced. uses fileset identify version file being used. Defined parserkeys rtcfileinfo following parser keys available parser related tasks. Parser key timestamp content-type type url Parser value description timestamp file. content type file type resource (\"file\" \"directory\"). URL representing version file found asset adapter task executed. used alongside RTC Artifact Source Library Process Configuration Guide) refer files library. Depending rtcfileset file retrieved URL contain workspace, component, baseline, snapshot parameters. Required Yes. Yes. Yes. Nested Elements rtcfileset None. Examples example pulls information item creates artifact <rtcfileinfo id=\"rtcitem\" item=\"@asset-uri@\" filesetid=\"rtcxsds\"/> <variable name=\"artifactreference\"> <parservalue parserid=\"rtcitem\" parserkey=\"url\"/> </variable> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <artifact name=\"@filename@\" category=\"schema-definition\" type=\"by-reference\" failonerror=\"false\" reference=\"${rtc-artifactprefix}/@artifactreference@\" file=\"\" version=\"@artifactversion@\"/> rtcfileset \"rtcfileset\" task extends fsfileset task enumerate files directories stored RTC retrieve content those files. fsfileset basic information filesets work. RTC task works version files based specified baseline snapshot. rtcfileinfo task information retrieve information enumerated files. retrieved file references (possibly used asset-files task) contain RTC server references format \"/directory/file.txt\" Attributes rtcfileset Attribute Description dir directory RTC used base reference include content. follow standard server syntax naming locations RTC, /directory/path fileset used related tasks. connectionid rtcconnection use retrieving files. attribute not specified, defaults last executed rtcconnection task. workspace workspace use enumerating retrieving files. component baseline component files reside baseline use enumerating retrieving files. snapshot use enumerating retrieving files. Required Yes. Yes. snapshot workspace, baseline, snapshot required. Yes. workspace, baseline, snapshot required. workspace, baseline, snapshot required. Nested Elements rtcfileset fsfileset. Examples example executes assembly named \"xsds\" once each XSD found RTC system, setup rtcconnection task (not shown). <assetfiles id=\"xsds\" assemblyid=\"xsds\"> Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE <rtcfileset component=\"WebServices\" id=\"rtcxsds\" dir=\"${rtc-folder}\" workspace=\"TestProject Stream\"> <include name=\"**/*.xsd\"/> </rtcfileset> </assetfiles> Team Foundation Server (TFS) Tasks (optional) ASAA tasks require assemblies connection information provided Visual Studio TFS client. Therefore TFS client need available system hosting TFS. Depending version TFS using, may need instruct Asset Adapter use version assemblies version TFS installed. Edit ASAA_HOME/bin/ant153cmd.exe.config file insert section after </startup> tag. Modify newVersion attributes set follows. using TFS use version using TFS use version using TFS use version <runtime> <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\"> <dependentAssembly> <assemblyIdentity name=\"Microsoft.TeamFoundation.Client\" publicKeyToken=\"b03f5f7f11d50a3a\" <bindingRedirect oldVersion=\"8.0.0.0-10.0.0.0\" newVersion=\"10.0.0.0\"/> </dependentAssembly> <dependentAssembly> <assemblyIdentity name=\"Microsoft.TeamFoundation.VersionControl.Client\" publicKeyToken=\"b03f5f7f11d50a3a\" <bindingRedirect oldVersion=\"8.0.0.0-10.0.0.0\" newVersion=\"10.0.0.0\"/> </dependentAssembly> </assemblyBinding> </runtime> tfsconnection \"tfsconnection\" task defines connection server used retrieve TFS content. connection referred TFS related tasks, otherwise most currently run tfsconnection information used TFS tasks tfsfileset). Attributes tfsconnection Attribute Description Required Server URL TFS server. must Yes. URL already defined Visual Studio client. connection task used Yes. related tasks refer connection use task. Nested Elements tfsconnection Copyright LogicLibrary, Inc. Rights Reserved. ANYSOURCE ASSET ADAPTER USER GUIDE None. Examples Defines connection TFS server located example.com\\FirstCollection. <tfsconnection id=\"tfsconn\" server=\"example.com\\FirstCollection\"/> tfsfileinfo \"tfsfileinfo\" task parser predefines set parserkeys used retrieve version information TFS file. Attributes tfsfileinfo Attribute Description item reference file TFS queried information. item set TFS item server reference following format: \"$/directory/path.txt\" parser used related tasks. connectionid tfsconnection use retrieving files. attribute not specified, defaults last executed tfsconnection task. Defined parserkeys tfsfileinfo following parser keys available parser related tasks. Parser key changeset-id checkin-date size deletion-id encoding type path version-url Parser value description changeset file. date file checked size file. deletion identifier file, probably number represents encoding (code page/code set) file. item's \"file\" \"dir\" depending type item referred path file URL representing version file found asset adapter task executed. used alongside TFS Artifact Source refer files library. does not include prefix escaped use URL. URL representing latest version file. used alongside TFS Artifact Source refer files library. Copyright LogicLibrary, Inc. Rights Reserved. Required Yes. Yes. latest-url ANYSOURCE ASSET ADAPTER USER GUIDE does not include prefix escaped use URL. used TFS artifact source parser key always refer same version file, regardless whether newer files checked TFS. Nested Elements tfsfileset None. Examples example pulls information item creates artifact <tfsfileinfo id=\"tfsitem\" item=\"@asset-uri@\"/> <variable name=\"artifactreference\"> <parservalue parserid=\"tfsitem\" parserkey=\"latest-url\"/> </variable> <variable name=\"artifactversion\"> <parservalue parserid=\"tfsitem\" parserkey=\"changeset-id\"/> </variable> <artifact name=\"@filename@\" category=\"message-definition\" type=\"by-reference\" failonerror=\"false\" reference=\"${tfs-artifactprefix}/@artifactreference@\" file=\"\" version=\"@artifactversion@\"/> tfsfileset \"tfsfileset\" task extends fsfileset task enumerate files directories stored TFS retrieve content those files. fsfileset basic information filesets work. TFS task always works latest version files TFS. tfsfileinfo task information retrieve version information enumerated files. retrieved file references (possibly used asset-files task) contain TFS server references format \"$/directory/file.txt\" Attributes tfsfileset Attribute Description dir directory TFS used base reference include content. follow standard server syntax naming locations TFS, $/directory/path fileset used related tasks. connectionid tfsconnection use retrieving files. attribute not specified, defaults last executed tfsconnection task. Nested Elements tfsfileset Copyright LogicLibrary, Inc. Rights Reserved. Required Yes. Yes. ANYSOURCE ASSET ADAPTER USER GUIDE fsfileset. Examples example executes assembly named \"wsdls\" once each wsdl found TFS system, setup tfsconnection task (not shown). <assetfiles id=\"assetfiles\" assemblyid=\"wsdls\"> <tfsfileset id=\"tfscodefiles\" dir=\"$/WebServices <include name=\"**/*.wsdl\"/> </tfsfileset> </assetfiles> WebDAV Tasks (optional) webdavfileset \"webdavfileset\" task Retriever works repository supports WebDAV protocol produces list files and/or directories match patterns specified include/exclude list. mechanism very similar Ant's \"fileset\" task. Attributes webdavfileset Attribute Description serverurl URL WebDAV server. dir starting directory. casesensitive Set \"true\" \"false\". Determines filenames matched respect case. Default \"false\". unique string identify Retriever. string arbitrary must unique against Retrievers assembly. type Return files (\"file\"), directories (\"dir\"), Default \"file\". user WebDAV user. password Clear text user password. Deprecated. Use encryptedpassword attribute. encryptedpassword Encrypted user password created using encryptpassword script. Encrypting Passwords. Nested Elements webdavfileset fsfileset. Examples Copyright LogicLibrary, Inc. Rights Reserved. Required Yes. Yes. ANYSOURCE ASSET ADAPTER USER GUIDE Retrieve Java files WebDAV server using user credentials encrypted password. <webdavfileset serverurl=\"http://mywebdav:8088/dav\" user=\"rsmith\" encryptedpassword=\"yPR2NO7Caj4=\" dir=\"/project/source/dir\" id=\"sourcefiles\"> <include name=\"**/*.java\"/> </webdavfileset> Copyright LogicLibrary, Inc. Rights Reserved."},{"title":"Getting Started with Lifecycle Manager","url":"/lm/getting-started.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"Refer our Concept Guide quickly. need Install product, refer J2EE Install Guide System Administrator Guide section."},{"title":"SOA Software Lifecycle Manager","url":"/lm/index.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"demo content Lifecycle Manager"},{"title":"Learning about Lifecycle Manager","url":"/lm/learning.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"Use articles documents below learn use platform specific tasks functions."},{"title":"Concept Guide for Lifecycle Manager 6.5","url":"/lm/lm-concept-guide-v6.5.html","date":null,"type":"pdf","description":"The goal of this document is to introduce the basic concepts of Lifecycle Manager and provide enough background information to use Lifecycle Manager effectively.","categories":[],"body":"Lifecycle Manager Concepts Facilities Guide SOA Software, Inc. Wilshire Blvd, Suite Los Angeles, 866-SOA-9876 www.soa.com info@soa.com Copyright SOA Software, Inc. Disclaimer: information provided document provided WITHOUT ANY WARRANTIES ANY KIND INCLUDING WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE, NON-INFRINGEMENT INTELLECTUAL PROPERTY. SOA Software may make changes document any time without notice. comparisons, functionalities measures related similar products services offered vendors based SOA Software's internal assessment and/or publicly available information SOA Software vendor product features, unless otherwise specifically stated. Reliance assessments comparative assessments made solely own discretion own risk. content document may date, SOA Software makes commitment update content. document may refer products, programs services not available country. Consult local SOA Software business contact information regarding products, programs services may available Applicable law may not allow exclusion implied warranties, above exclusion may not apply Table Contents Using Guide.............................................................................................. document resources Introduction Lifecycle Manager Asset Library Why deploy development-time asset repository? Software Development Asset (SDA)? Lifecycle Manager? SDA Production/Distribution/Consumption Lifecycle.......................................... assets important? asset template? Governing asset production consumption using Smart ControlsTM user find Library assets? Reference Model? uses Lifecycle Manager? Lifecycle Manager fit organizational project team structure? started? Assessing Situation Setting Strategy Approach Assessing Need Determining Roll Ideal Pilot Projects Setting Realistic Goals Building Library: Integrating Existing Development Environment Development Tool Integration Data Library Given Asset Type? Using Asset Templates Template Types www.soa.com Copyright SOA Software, Inc. rights reserved. Reference Model Definition Tools Help Build Lifecycle Manager Reference Model Two Reference Model Approaches Creating Working Assets............................................................................ Asset Capture Artifact Management Validating, Reviewing, Publishing Asset Asset Submission Automation Capabilities Lifecycle Manager Configuration Designer Eclipse Plug-in Users Roles Organizational Groups Project-level Customization Considerations Groups Visualization Federated Libraries Key Library Configuration Points Quickest Way Started Locating Using Assets Modes Locating Assets Browsing Assets Searching Assets Asset Tree Preconfigured Custom Searches Saved Searches Searching Asset Query Search Results RAD Eclipse Plug-ins......................................................................................... Visual Studio Add-in IDEs Copyright SOA Software, Inc. rights reserved. www.soa.com Employing Assets Total Asset Virtual Asset WindowTM Studying Discussing Software Development Assets Visualizing Assets Relationships.................................................................. Acquiring Assets Use Active Asset Analysis Integrated Asset Project Usage Metrics Subscribing Assets Keep Informed Assessing On-going Process Reporting Effectiveness Library Reporting Views Integrated Reports Eclipse BIRT Reporting Engine Extending Lifecycle Manager Project Management Deployment Environments55 Project Management, Development Deployment General-Purpose Integration Interfaces Inbound Integration Lifecycle Manager Outbound Integration Lifecycle Manager Prebuilt Lifecycle Manager Integrations Service Registry Synchronization Module................................................................... Asset Import Center Works: Lifecycle Manager Architecture Lifecycle Manager Asset Library Presentation/Client Layers Application Layer Integration Layer Persistence Layer Copyright SOA Software, Inc. rights reserved. www.soa.com Lifecycle Manager Java IDE Plug-ins/Add-ins Lifecycle Manager Add-in Visual Studio Conclusion www.soa.com Copyright SOA Software, Inc. rights reserved. Using Guide goal document introduce basic concepts Lifecycle Manager provide enough background information use Lifecycle Manager effectively. document's primary audience team responsible implementation support Lifecycle Manager Asset Library. Additionally, asset users, asset publishers owners, personnel controlling use Library on-going basis may find useful. document resources guide designed facilitate understanding system might apply particular environment. not intended provide information required determine initiate specific implementation. implementation usage assistance, SOA Software provides: AnySourceTM Asset Adapter documentation. documents introduce Asset Adapter toolkit describe configure extend integrate Lifecycle Manager own development infrastructure. Library Configuration Guide. document provides extensive documentation various validation process automation options available customers. provides configuration examples help customers started applying architectural project management governance processes automated Lifecycle Manager deployments. Training. comprehensive education Lifecycle Manager, SOA Software offers training asset users team responsible implementing managing Library its assets. Online Help. detailed user guidance documentation, Lifecycle Manager includes built-in comprehensive online help system. Partner Community. Our trained Partner Community provide array services meet needs. Please refer partners section http://www.soa.com. Professional services. Our Professional Services staff expert working customers understand help build plan most effective use Lifecycle Manager meet organization's objectives, requirements, environment. Each engagement builds set tried true baseline configurations supporting documents continually being developed refined SOA Software team. Online Support. Visit http://support.soa.com comprehensive support site, access latest Lifecycle Manager service packs, resources. www.soa.com Copyright SOA Software, Inc. rights reserved. Introduction Lifecycle Manager Asset Library Why deploy development-time asset repository? Technology innovations such Service Oriented Architecture (SOA), REST/JSON APIs, JEE .NET make possible build applications significantly less effort leveraging common APIs services reusable components. However, many enterprises deploying technologies not seeing expected benefit knowledge necessary use assets not available and/or easily accessible. difficult search locate common API, service component, asset cannot reused resulting redundant development. hard determine purpose asset relates business processes, duplicating work may become expedient ensure application meets requirements. potentially reusable asset found, often not clear asset developed sufficient scalability, security, nonfunctional criteria support its potential reuse under specific conditions, simply quickly understand full functionality asset due lack useful documentation. address roadblocks, development teams deploying asset management systems metadata libraries referred development-time repositories) store assets knowledge provide automated role-based governance production consumption those assets. Often systems directly associated new development initiatives (Component-Based Development (CBD), Service-Oriented Architecture (SOA), API-Based Development). Such platforms may deployed part broader initiative such \"enterprise architecture\" \"enterprise reuse.\" either case, creating central library Software Development Assets (SDAs) critical necessary step deliver development promise technologies REST/JSON, SOA, Java, .NET. Software Development Asset (SDA)? SDAs consist various elements used referenced creation integration software applications services. Assets include components (JEE, OSGi, .NET), legacy systems, services, APIs, schemas, business processes any executable aspect enterprise's infrastructure intellectual capital mindshare information architectures (both business technical), patterns best practices. general, assets come many forms, valuable elements made available development teams. organization may use many different asset types, Lifecycle Manager designed hold SDAs grouped two general types: executable assets knowledge assets. Examples executable assets include: Components (JEE, OSGi, .NET, Frameworks Apache Struts, Microsoft .NET Application Blocks) APIs Services (SOAP-based Web services, REST/JSON APIs, message queues, Applications pertinent application programmable interfaces (APIs) XML schemas Representations functional capabilities data Examples knowledge assets include: Patterns Best practices Architectures Copyright SOA Software, Inc. rights reserved. www.soa.com Reference implementations Business domain knowledge Project development process templates Lifecycle Manager? Lifecycle Manager development-time Software Development Asset (SDA) repository governance platform library) allows enterprises easily represent search key development assets (both industry-standard in-house developed) application development environment graphical, intuitive way. Lifecycle Manager provides intelligent inventory assets; relationships each technical infrastructure, company's business architecture. Through use Lifecycle Manager, organizations accelerate reuse SOA initiatives, improve governance production consumption services reusable assets. Application developers, business analysts technical business architects search repository company's SDAs, identify those best match business technical requirements application development integration. Lifecycle Manager hold internally created assets, externally purchased assets, assets shared partners consortiums. Lifecycle Manager provides multi-faceted index its SDAs. Usually, SDA's work products artifacts) sourced elsewhere, case, Lifecycle Manager identifies references source location(s) elements. referred by-reference artifacts. example, assets may include elements kept more \"systems record\" outside Lifecycle Manager, such document management system, version control source change management repository, defect tracking system, etc. Lifecycle Manager directly hold artifacts such test plans requirements its repository. Such artifacts referred by-value artifacts. either case artifacts both indexed Lifecycle Manager's text- XML-based search engine made available user review use. information references Lifecycle Manager holds each SDA includes identifying information (Asset Name Version) Asset Description Overview. addition, Lifecycle Manager holds various elements configured describe specific Asset Types Library, including: Classifiers: such asset type, supported platforms, functional domain sub-domain, support level, etc. Artifacts: files reference elements interface definitions WSDL REST documentation), executable components, user documentation, test scripts, models, etc. Asset Relationships: references assets represent previous versions, prerequisites, co-requisites, dependencies, etc. SDA Production/Distribution/Consumption Lifecycle Just make something SDA doesn't mean makes component, Web service, design pattern good SDA candidate words, makes SDA reusable? example, does JEE component become asset simply providing its jar file? Unless component's functionality dead-simple totally obvious, answer \"probably not.\" While deployable jar very important work product artifact) software development process, itself does not make component www.soa.com Copyright SOA Software, Inc. rights reserved. asset. order something considered asset organization, must maintainable, discoverable, consumable. Maintainability introduces such concepts version control, models design documentation, requirements traceability (why asset implemented way technical business perspective). Discoverability forces consider help potential consumers asset find asset timely fashion via keywords, domain taxonomies, mapping models, example. Consumability involves looking asset point view downstream project planning use asset: user guide, well-documented API, sample client code, artifacts available help user rapidly understand apply asset project hand? dependencies assets prior versions asset) specified easily navigated? achieve \"ilities\" SDA? applying appropriate development processes asset production. large extent, SDA production processes simply applying set good SDLC processes asset development; however, keep mind since producing SDA eventual library distribution external consumption thus standard SDLC's artifacts may not sufficient. example, may need insist upon more complete and/or formalized documentation, may mandate asset set full source sample code provided alongside executable show examples asset properly used. types asset production governance rules supported enforced asset library, Lifecycle Manager provides wide range capabilities just Lifecycle Manager's asset template structure allows establish validation rules such specifying mandatory artifacts, providing controlled (enumerated) lists valid classifier values, Lifecycle Manager's Smart Controls configurable process engine allows organizations automate own asset production review processes, including automatic asset validation upon submission schema validation, policy conformance, automatic invocation testcases) multi-stage review steps based organization's own defined roles. Ultimately, process building asset results asset being represented its metadata data describes asset various points view. metadata presents composite view asset across its entire development deployment lifecycle, indexes references) various point tools such document management systems, requirements management systems, version control repositories, defect tracking systems, test automation tools, etc. hold work products artifacts asset. metadata Lifecycle Manager distributes various candidate consuming organizations (typically application development project teams) potential use. Appropriate governance rules consuming SDAs comes play example, health care organization may HIPAA-specific controls placed around access Web service exposes patient information, perhaps specific project teams allowed access payroll management component. Lifecycle Manager enables automates types consumption governance processes, allowing organizations more effectively manage SDA usage development projects. Any successful SDA reuse initiative eventually deal issue asset versioning. Sooner later, organization reach point next set business process requirements affects more existing SDAs. provide necessary support new process while preserving stable operating environment existing service consumers? reusable SDAs meant used more application, organizations need plan incremental enhancement services long deployment lifetime. effect, organizations planning build robust, stable extensible SOA need treat services \"products\". includes concepts such maintaining welldefined regular release cycle reusable SDAs, maintaining backwards compatibility between SDA versions wherever possible, providing appropriate mechanisms new asset version requirements gathering management. Lifecycle Manager assist such ongoing SDA management, allowing organizations describe assets any state development (including www.soa.com Copyright SOA Software, Inc. rights reserved. agile/iterative development methodologies), planned deployed, retired. Updates new versions assets managed system communicated Library users. Since Lifecycle Manager hold such broad range SDAs, key enabling technology enterprise SOA transformation, integration consolidation efforts. Having central place search, access deploy assets accelerates success both pilot enterprise-wide SOA initiatives. assets important? While types assets stored Lifecycle Manager, not necessarily intended hold every possible asset. types assets Reference Models appropriate repository depend organizational objectives, available assets, asset users, approach implemented locate assets. assets recorded Lifecycle Manager vary depending production environment objectives. development environment integrated Lifecycle Manager, assets usually loaded system stages, starting those most useful immediately, such assets specifically designed re-use. Good candidates might Services interfaces central applications, such ERP CRM systems Shared frameworks Common services APIs designed external consumption Common technical components logging, exception handling) Enterprise Line Business data schemas views Knowledge assets such architectures, best practices, patterns, project templates good candidates initial loading Lifecycle Manager. Such knowledge assets often represent core information crucial enterprise forward, Lifecycle Manager dramatically improve enterprise's ability disseminate manage such information. considering asset selection staging, determine Reference Models captured show overall architecture. Sample applications source code snippets using assets helpful. asset template? template capabilities Lifecycle Manager allow users administrators create comprehensive Asset Classification methodology defining types assets information held Templates used Define information kept each asset type library. Set valid values information each asset type. Protect integrity asset data through enforcing use valid values. accelerate library implementation, Lifecycle Manager ships default Global Asset Definition template multiple predefined asset constraint templates. templates XML documents used define extend Lifecycle Manager asset schema. used as-is easily configured meet specific installation requirements. predefined templates serve examples www.soa.com Copyright SOA Software, Inc. rights reserved. draw means explore Library before configuring new templates. Lifecycle Manager preloaded content uses predefined templates. Global Definition template (GDT) defines superset element types available defining constraint templates each asset type. words, GDT establishes library's content model turn further refined each asset type represented Library. Among others, following default Asset Constraint templates provided Lifecycle Manager: API: template suitable provisioning documenting REST-based APIs Service: template suitable SOAP-based service assets fully described single WSDL combining both interface implementation aspects Software Component: template suitable component-based executable assets Knowledge: template suitable documenting patterns, best practices, architectures related knowledge asset types Application: template suitable applications various types. Application assets typically used represent consumers services, components reusable SDAs, although managed SDAs own right. Schema: template suitable XML schema documents SOA Reference Model: template used publishing Lifecycle Manager Reference Models most cases, multiple asset constraint templates representing various stages software development lifecycle (SDLC) configured Lifecycle Manager. Such templates establish incrementally increasing content mandates SDA advances through SDLC. Governing asset production consumption using Smart ControlsTM Lifecycle Manager Smart Controls configurable process engine gives customers ability control way assets produced, deployed consumed Lifecycle Manager. Customers define own asset management validations, processes roles, Lifecycle Manager automates. most deployments, automation occur entirely Lifecycle Manager. customers may choose use Lifecycle Manager automation interact own external tools, workflows (both manual automated) mechanisms. Chapters more information Lifecycle Manager capabilities support creating acquiring assets. user find Library assets? Lifecycle Manager assets owned made visible users Library. more Libraries may hosted single Lifecycle Manager installation, each Library logically separated Libraries. Developers, business analysts, architects Lifecycle Manager users search Library identify business technical requirements application development integration projects. Each Library may support different types users. Each type user may search Library differently, using mechanism based context work, know asset, Reference Model domain focus. addition, search method selected based characteristics asset(s) being sought. www.soa.com Copyright SOA Software, Inc. rights reserved. Lifecycle Manager provides number search mechanisms: Asset Tree organizes presents assets based metadata dynamically generated multi-level folder view according user's preferences. Queries built using SDA metadata quickly identify software assets interest particular project. Queries stored incorporate many search criteria, including precise classifier-specific matching text matching (including Boolean operators combining multiple text search strings) across any metadata elements asset. Advanced XPath-based mechanisms built Lifecycle Manager's query engine, giving customers great deal flexibility defining precise query types without exposing complexity XPath query assertion languages end user. Query types configurable, set predefined types shipped part product's default configuration. types leverage underlying XML text-indexed search infrastructure present end user both single- multi-field query forms. Model-based searches navigate through graphical Reference Models select desired capabilities functional aspects organization's business architecture) direct search against Library content. Model-based searches stored future reference. Search Alerts allow users mark any stored (persistent) search \"alertable,\" those users notified any new re-published asset meets its search parameters. powerful alert mechanism helps users automatically stay top new information (such architectural patterns best practices), improving communication development organization. Users choose email RSS-style notifications search alerts. Chapter more information Lifecycle Manager capabilities support locating assets. Reference Model? Reference Model visual representation illustrates particular system business process portion system process) works. Reference models represent: Technical architectures Application architectures Business architectures process models Models built using different forms: UML (Universal Modeling Language) Microsoft Visio Business processes use cases Free-format models rendered HTML models imported Lifecycle Manager connect SDAs elements model; assets captured edited, functions features mapped model. linkage, users easily learn understand SDAs support execute model elements. Models useful form architectural \"heat map\" used architects business analysts understand aspects enterprise represented reusable services shared capabilities aspects require additional investment. www.soa.com Copyright SOA Software, Inc. rights reserved. uses Lifecycle Manager? Many people organization use Lifecycle Manager: asset owners, asset consumers people provide Reference Models means learn find assets. addition, people support Library activities such project managers governance authorities authorize asset publication usage requests, usage controllers Library administrators configure Library work environment manage Library itself active library users. Lifecycle Manager provides tools enable full flexible access based roles. system automatically adjusts user interface functionality available particular user depending role. Role-based access assigned user level may apply Library-wide may scoped Organizational Group (Org Group) level enable user complete tasks particular group its subordinate groups. Chapter further discussion topic. Standard Lifecycle Manager roles include: Asset User Asset Producer roles, including Asset Capture Engineer (ACE), Asset Publisher, Asset Owner Usage Controller primary administrative role) Library Administrator Installation Administrator Lifecycle Manager administrators typically introduce own organization-specific roles Lifecycle Manager use Smart ControlsTM based governance process automation. roles configured control ability create edit assets type-by-type basis asset details presented browser-based thin client. Lifecycle Manager fit organizational project team structure? Lifecycle Manager designed work sizes organizations single team large organization, multiple, geographically dispersed teams cross-team assignments. Teams, organizational structures shared work inherent part Lifecycle Manager. Lifecycle Manager, teams organizational structures called Organizational Groups. Shared work areas known Projects. Together, Organizational Groups Projects used designate organizational structures define groups users work together common project. Organizations commonly used establish shared governance scope multiple teams assigning architect each LOB represented Library). project work groups defined, group roles assigned users, example, indicating users create change asset information available group. discussed section user access Lifecycle Manager defined according user's organizational group project. (Note: tree-based inheritance structure Organization Groups Projects useful assignments Profiles, Reference Models capabilities common across more Project.). organizational support Lifecycle Manager very comprehensive. said, start very simple organizational structure Lifecycle Manager grow deeper structure needed. SOA Software professional services help determine best leverage flexibility suit particular situation. Lifecycle Manager enables distributed development through its federated library support, allowing large organizations manage www.soa.com Copyright SOA Software, Inc. rights reserved. consolidated set SDAs through physically distributed interconnected set Lifecycle Manager installations. Chapter more information use organizational groups federated libraries. started? SOA Software offers proven methodology help started realize rapid return Lifecycle Manager investment. approach called enABLE methodology: Step Assess Understand information organization assets, Reference Models, asset artifacts, etc. Identify key initiatives develop roadmap successfully leverage valuable SDAs. discussed Chapter Step Build Build catalog SDAs Lifecycle Manager Library integrate Library development environment processes. discussed Chapter Step Locate Roll Library asset users educate effectively find right SDAs given project. discussed Chapter Step Employ Show asset users quickly understand use assets deliver targeted projects. discussed Chapter After completing process, return Assess step focus assessing usage effectiveness Asset Library. Continue define additional groups assets include Library next set users Library. organization conduct steps its own work SOA Software professional services. www.soa.com Copyright SOA Software, Inc. rights reserved. Assessing Situation Setting Strategy Approach Lifecycle Manager typically implemented improve enterprise visibility, use traceability key assets across organization, APIs external use, services SOA, reusable components, knowledge assets such architectures, design patterns best practices. Lifecycle Manager Assessment implemented support specific initiative involves creating shared assets rolling intended asset users. Clearly Right Pilot understanding initiative driving Lifecycle Manager's use Project essential planning effective Library implementation strategy. Getting Ready Assets? Assessing Need Models? Metadata? Regardless Lifecycle Manager used, basic upfront Users? assessment planning critical. Before Lifecycle Manager Development Library deployed: Process Changes Appropriate Staging Document existing development processes Lifecycle Manager asset search, asset capture asset governance functions aligned processes. Setting Goals List candidate SDAs. Define information required each asset type. each asset type, note source information associated roles need review needs reviewed. Determine models describe SDAs. may include using existing models creating new models appropriate). Designate organizations projects use Library. Determining Roll After completing steps, initiate staged roll plan. each stage, address following: Business objectives value/business owner. Specific asset model identification (including ownership contacts). Asset users/organizations project requirements. Asset configuration (including Library hosted administered). Organizational project structure set User role definitions User creation (typically including LDAP server SSO integration) Governance process configuration. Asset Library integration various asset sources asset information come Development process tool integration (including integration chosen IDEs, intraenterprise, inter-enterprise development portals). Training plans roll (SOA Software Professional Services provide training end users trainers). Communications launch. On-going communications management relative business objectives. Copyright SOA Software, Inc. rights reserved. www.soa.com Ideal Pilot Projects Projects defined assets built reuse API SOA initiatives, component-based development teams) prime candidates initial Library projects. assets architected used others (executable knowledge assets), likely models documentation ready use, clear asset owners, defined asset users. time, assets user groups added Library. Lifecycle Manager supports asset governance approach allows asset owners submit assets inclusion Library. Submitted assets directed roles responsible reviewing publishing Library content. submission mechanism serves way incorporate user feedback process defining creating new assets. part Lifecycle Manager delivery, SOA Software provide series SDA reuse best practices include both organizational asset production consumption process guidelines. best practices include asset reuse ROI calculations based work Jeffery Poulin, leading industry expert SDA reuse. Setting Realistic Goals \"start small, grow fast\" approach very appropriate Library roll Starting small enables understanding Library work best organization broader scale. Before finalizing enterprise-wide implementation plan, focus gaining experience several areas, including: Defining Asset metadata (schema) needed each asset type. Configuring integrating Asset sources asset information come Selecting using Reference Models. Handling asset requests asset consumption) asset submissions asset production). Reporting metrics ongoing assessments. Establishing refining development processes, including approvals, asset acquisition, reviews, etc., defining configuring associated asset governance automation processes asset submission asset acquisition learned using Library organization actively listening user needs. SOA Software professional services help start-up, pilot projects, results assessments, tuning follow-on implementation. www.soa.com Copyright SOA Software, Inc. rights reserved. Building Library: Integrating Existing Development Environment Building Library fit needs organization most important step deploying Lifecycle Manager. Lifecycle Manager designed flexibility integrate any development process regardless whether RUP (Rational Unified Process), Agile, any process use software community today. Building Library Key integration points Library Capturing reference architectural models. Capturing/updating asset information. Finding assets use during development. Development Tool Integration Asset Template Definition Reference Model Selection Asset Production Processes Linking Asset Sources Asset production governance via Smart Controls Defining Users, Organizations Projects Building Library integrating development process environment likely on-going staged effort. First, determine information help development teams understand use assets. determine users search Library. Finally, plan most efficient way load assets models, keep current. following sections look major concepts must understood define Library fit environment. Note though Lifecycle Manager highly flexible, ships many default settings speed installation initial operation. end chapter summarizes quickest way started. www.soa.com Copyright SOA Software, Inc. rights reserved. Development Tool Integration SOA Software provides various integration points popular development tools. integration helps users find assets, capture edit import Reference Models. future, SOA Software integrate Lifecycle Manager popular IDEs related development tools based industry demand. Integration Type FINDING ASSETS: Launch Lifecycle Manager Asset Searching Product Microsoft Visual Studio, IBM Rational Application Developer, Eclipse, Eclipse-based commercial IDEs Microsoft Visio Description Add-in Plug-in IMPORTING REFERENCE MODELS: Reference Model Creation CAPTURING/EDITING ASSETS: Project/Solution/Asset Capture Mapping Reference Models Plug-in Microsoft Visual Studio, IBM Rational Application Developer, Eclipse, Eclipse-based commercial IDEs Add-in Plug-in Data Library Given Asset Type? Using Asset Templates Templates used Library capture wizard Lifecycle Manager IDE Plug-in validation during asset creation, updating, publication. Templates created form XML documents, must meet requirements underlying asset template schemas apply. Once created, templates made available Library uploading via Lifecycle Manager's Configuration Designer. Configuration Designer discussed further latter section chapter. Template Types Lifecycle Manager specifies two types asset templates. Each template type specific use. Global Definition Template. Library Global Definition Template used define superset asset metadata elements classifiers, asset relationships, artifacts) available assets published Library. Global Definition Template serves basis templates. Constraint Templates. Constraint templates define specific elements used each type Asset. Library any number Constraint Templates extend Global Definition Template, must least Constraint Template. Once uploaded Library, used validate Assets during capture, edit, publishing process. addition specifying metadata elements used Asset Type, Constraint Template designate additional constraints cardinality, value lists, default override value settings during asset creation subsequent editing. Constraint Templates www.soa.com Copyright SOA Software, Inc. rights reserved. introduce conditional content rules based value specific classifiers asset instance. defined correctly, Constraint Templates greatly ease process asset capture ensuring right asset information gathered, predefining certain pieces information likely well-known constant particular type asset. Constraint templates enforce incremental information gathering across asset's SDLC requiring test plan defined design-complete phase test results provided before exiting development-complete phase). Constraint templates configured put control template change fully under automation Smart Controls governance processes automatically switch templates asset asset exits governance phase), under user control guidance each template specifies allowed downstream templates selected asset transition) fully under user control. Reference Model Definition objective Reference Model aid understanding assets work together. Reference Models include application architectures, technical architectures, business process definitions, types models provide representation domain. While models link assets many ways, common approach create \"visual domain taxonomy\" through graphical images navigated initiate Library searches. traditional layered architecture block diagram suited approach. advantage taxonomic approach Reference Model development assets automatically mapped model elements simply populating necessary taxonomy information asset metadata. discussed below, Lifecycle Manager provides integrated tooling combining Microsoft Visio Eclipse aid its customers quickly efficiently developing such models. tools techniques used develop deploy Reference Models Lifecycle Manager. Tools Help Build Lifecycle Manager Reference Model HTML used model come many sources. Two popular sources Visio diagrams business process architecture models, UML models created modeling tools. Visiobased model definition natively supported SOA Software tooling (discussed below). any event, HTML pages Lifecycle Manager model must created links between pages defined. Any HTML-editing tool used create model pages import Lifecycle Manager. Reference Model defined, consist set HTML pages associated XML file defines structure model. pair artifacts published Library. Once published, model accessed allow asset capture engineers map assets being www.soa.com Copyright SOA Software, Inc. rights reserved. captured updated models. Ultimately, model accessed doing modelbased search allow asset user specify requirements working fulfill. Note Lifecycle Manager tools help creation model artifacts publication Library. particular, Lifecycle Manager provides Eclipse-based reference model development plug-in integrated Visio. Two Reference Model Approaches two approaches consider defining Reference Model: loosely coupled tightly coupled. Coupling refers Library assets likely match model. Both approaches described further below examples use Tightly Coupled Models Assets tightly coupled model typically model used define assets Library. \"bottom-up\" sense built based assets already Library, created define specific assets needed Library. such, assets Library very high affinity model, almost always yielding match between functional requirements asset functionality. benefit tightly coupled model provides valuable navigation search mechanism users. peruse model understand domain quickly search assets fulfill architecture. Such models used \"progress indicators\" against strategic architectural initiative: greater progress, more portions model result successful asset searches. Loosely Coupled Models Assets contrast tightly coupled model, loosely coupled model created \"top-down\" -independent assets Library define goals roadmaps may not yet implemented. Consequently, Library assets varying affinity loosely coupled model. Examples approach include models define industry-standard processes assets, such third-party components, provide function same domain, may may not conform standards depicted model. Creating Working Assets two important steps adding asset information Library. first step capture asset metadata second publish Library. Asset Capture Capturing assets process entering creating references information defines asset. Once process complete, asset released publication Library. Assets created updated four ways, via Lifecycle Manager IBM Rational Application Developer Eclipse Plug-in Microsoft Visual Studio Add-in Capture Wizard Asset Editor. Lifecycle Manager Library (browser-based) user interface (including inline asset creation during asset edit via Add Relationship action, Import Center support XPDL, BPEL, www.soa.com Copyright SOA Software, Inc. rights reserved. WSDL, XSD XMI-based assets, configurable search results processing actions resulting asset creation). Lifecycle Manager AnySourceTM Asset Adapter Toolkit link asset sources drive programmatic collection asset information. Tool-based file-driven bulk creation/updating techniques. Each approach uses Asset Template define validate information captured. section more explanation Asset Templates. Each approach generates XML document holds asset metadata resides Library's asset catalog document automatically indexed made available Library's XPath-based query engine, directly retrieved viewed thin-client users Usage Controller role). asset published, Library reads corresponding metadata uses create asset information Library. Asset Capture Engineer Lifecycle Manager role authorized capture assets. each asset, Asset Capture Engineer capture following information (asset metadata): Overview Information: name, version, overview, description, aliases Classifiers: asset type, supported platforms, functional domain sub- domain, support level, (note both simple compound multi-level) classifiers supported Lifecycle Manager) Artifacts: asset models, source code, binaries, user documentation, test scripts, models, Asset Relationships: previous versions, prerequisites, co-requisites, suggested usage, Assets always created edited context owning organizational group. Asset Capture Engineer selects asset's owning group list groups granted Asset Capture Engineer role. Asset Capture Engineers easily determine group currently force viewing Active Group field Production section leftnav bar thin-client viewing equivalent field under Production node plug-in's Library Explorer view. roles combined Asset Capture Engineer role establish role-specific asset editing capabilities, including both ability create edit assets any particular type constraints asset metadata available editing. example, organization may desire Business Analyst allowed edit business-related metadata Business Process type assets whereas Architect may allowed edit metadata defined any type asset. Metadata elements configured read-only any roles classifier value automatically calculated Lifecycle Manager automation not changed any user, technical metadata not edited user Business Analyst role). Unpublished (pending) changes asset easily reverted last published values needed event error updating asset, change development plans, reasons. www.soa.com Copyright SOA Software, Inc. rights reserved. Capture Wizard Asset Editor Lifecycle Manager IBM Rational Application Developer Eclipse plug-in Capture Wizard Asset Editor integrated facility supports rapid capture Projects Lifecycle Manager assets, easy asset editing. Likewise, Lifecycle Manager Visual Studio Add-in provides similar support Visual Studio projects solutions implemented Integrated Development Environments (IDEs). Add-in Plug-ins use asset templates access asset catalog, provide two capture modes: Capture Wizard. Capture Wizard allows IDE users quickly capture Project Visual Studio Solution Lifecycle Manager asset. wizard extracts asset metadata selected project solution Visual Studio) associated assembly metadata, combining metadata user-specific properties managed Lifecycle Manager Add-in Plug-in. Asset capture using wizard simple \"one-click\" process, user finetune automatically gathered metadata additional asset information through series wizard panels. Upon completion wizard, asset submitted Library publication immediately transferred Plug-in Add-in Asset Editor further refinement. Open-ended non Project- Solution-based) assets captured through Capture Wizard. Asset Editor. Asset Editor allows IDE users edit any Lifecycle Manager-managed asset. Advanced features Asset Editor include drag-and-drop support adding asset artifacts establishing asset-to-asset relationships. Users edit aspects asset metadata using standard IDE user interactions including drop-down lists, editable text boxes, dialogs, wizards. www.soa.com Copyright SOA Software, Inc. rights reserved. Library Interface Asset Creation Editing Assets created edited using Library interface. approach most useful creating editing individual assets small set assets). Library interface supports direct importation XPDL, BPEL, WSDL, XSD XMI files purposes creating Business Process, Service Schema assets assets derived UML model parsing rules) via Import Center feature. feature described further Chapter guide. Users may able select assets Search Results page processing results asset creation grouping collection selected executable assets release creating Release asset references selected assets). Retrieval metadata values external sources Organizations often desire source certain metadata values external systems. Lifecycle Manager supports such sourcing via its extensible Value Source framework. Simple Value Source implementations provided Lifecycle Manager include OWL Lite-based taxonomies, WSDL elements (such declared operations) previously entered values (often referred \"folksonomies\"). addition, Lifecycle Manager provides prebuilt interactive Value Sources LDAP (commonly used select contact information) SQL (suitable any externally-sourced enumeration). Users interact Value Sources via imbedded configurable wizards entering query criteria turn presented list valid values conforming criteria returned Value Source. Custom Value Sources implemented deployed Value Source framework. Viewing pending changes asset Asset editors using thin-client Library interface may compare asset being edited against currently published values asset. Selection action presents asset additions, deletions modifications digest form. Asset editors compare modified WSDL XML document-type artifacts such assets using Lifecycle Manager's built-in artifact comparators. Customers implement deploy own custom comparators Lifecycle Manager artifact types desired. AnySourceTM Asset Adapter Toolkit Using AnySourceTM Asset Adapter Toolkit (AnySource) create assets most useful capturing large quantities assets automating asset updates based changes asset information artifacts held tools outside Lifecycle Manager. external tools/repositories referred Asset Sources, may include source code control systems, document control systems, defect tracking systems, etc. www.soa.com Copyright SOA Software, Inc. rights reserved. AnySource provides XML-driven framework based Apache Ant used define automate asset capture process. addition, AnySource capabilities directly accessed through programmatic (Java .NET) command line means desired. Underlying capabilities series SOAP-based Web services connect Lifecycle Manager's Automation Extensions client Lifecycle Manager Asset Library. AnySource framework uses AnySource parsers extract interpret information various files make asset. Parsers typically used analyze gather asset metadata eventual inclusion asset being assembled, invoked XML-driven tasks define asset capture process. AnySource directly publishes asset information Asset Library automatically made available asset users optionally, reviewed, corrected augmented ACEs appropriate prior submission role-based governance approval. SOA Software provides out-of-the-box parsers open-ended text-based XML-based processing, specialized Java sources WSDL parsers. Custom AnySource parsers written Java, optionally taking advantage Java's ability call languages choice, including scripting languages such PERL, Python, etc. addition core AnySource toolkit, SOA Software provides prebuilt AnySource adapters leading Source Change Management (SCM) systems such CVS, Subversion, Serena Professional (PVCS) Dimensions, Rational ClearCase (including ClearCase/ClearQuest deployed UCM mode), Rational Team Concert (RTC), Perforce, Microsoft Visual Source Safe Team Foundation Server (TFS) version control. general purpose WebDAV-based adapter available. adapters allow assets artifacts loaded retrieved Library. Additional prebuilt adapters provided future releases Lifecycle Manager based industry demand. Documentation provided AnySource includes: User Guide describes install use AnySource Toolkit Developer Guide describes write AnySource extensions Best Practices documents provide Source Change Management (SCM)-specific guidance usage deployment Toolkit AnySource Artifact Adapter many organizations widely varying asset sources multiple SCM systems, defect tracking systems, etc.) often systems record not integrated authentication perspective and/or not support modern web-based access methods, Lifecycle Manager provides AnySource Artifact Adapter. integrated authentication place, organizations often establish project-specific access rules keeping SCM best practices, thereby preventing potential asset consumers directly accessing SCM-hosted files. configured properly, AnySource Artifact Adapter provides seamless access artifacts throughout enterprise, eliminating need Lifecycle Manager user sign each system separately serving SCM proxy asset consumers. Lifecycle Manager manages authentication credentials required connect retrieve artifacts various systems record integrated Lifecycle Manager installation, either through out-of-the-box adapters provided part Lifecycle Manager installation custom adapters written support essentially any form access APIs provided those systems. Prebuilt adapters include ClearCase, TFS, RTC basic auth. conjunction Lifecycle Manager's IDE plugins, ClearCase, RTC TFS adapters support importation SCM controlled file references SCM controlled projects, thereby ensuring project access most www.soa.com Copyright SOA Software, Inc. rights reserved. current source executable content. Lifecycle Manager provides SOAP-based adapter framework use customers encapsulate systems record. Artifact Management Asset artifacts often simply managed Lifecycle Manager independent work products resulting asset development. words, such artifacts accessible through Library effect Library behavior. However, artifacts may require able take advantage special handling Lifecycle Manager, perhaps sensitive nature asset, content format enables additional capabilities Lifecycle Manager tools Lifecycle Manager integrates, simply importance user. Lifecycle Manager supports following specialized artifact-handling capabilities: Queryable Artifacts queryable artifact whose content included Lifecycle Manager search index. example, consider requirements document filled domain terminology. specifying artifacts type \"requirements\" queryable Lifecycle Manager Global Definition Template, Lifecycle Manager automatically index contents artifacts type time asset publication. Users selectively include indexed artifacts adhoc searches asset queries Section additional details). XML-based artifacts particularly well-suited Lifecycle Manager's queryable artifact capabilities, content automatically indexed support both standard textbased queries XPath assertions configured Lifecycle Manager's query infrastructure. Private Artifacts Asset templates specify more asset artifact types \"private\". While presence private artifacts made known asset users, such artifacts cannot retrieved user until associated asset acquired fully registered user's project. feature used, example, allow organizations prevent access sensitive artifacts until appropriate reviews occurred. organizations may wish restrict access run-time components until approval process completed, while still granting access asset documentation. Unpackable Artifacts Browser-based HTML content such Javadoc often delivered complex forms, imbedded graphical elements multiple linked pages assembled composite module. Lifecycle Manager allows users store such complex HTML content Lifecycle Manager zipped form, Lifecycle Manager handling presentation details user. Email-Based Dynamic Artifacts Informal design reviews development discussions often occur via extended email threads spanning multiple team members. Such email threads initiated asset via use Lifecycle Manager's email-based artifact type. email sent responded community interest, Lifecycle Manager automatically updates asset latest email discussion chain. resulting artifact serves historical record informal discussion decisions otherwise commonly lost development teams. www.soa.com Copyright SOA Software, Inc. rights reserved. Validating, Reviewing, Publishing Asset mentioned above, capture approaches yield XML document holds asset metadata resides asset catalog. asset published, Library takes information catalog uses create asset Library entries. entries held both XML relational form Library's database rapid search retrieval. However, before asset published Lifecycle Manager Library, must complete asset submission governance process appropriate its contents organizational ownership. extreme, submission governance process instantaneous minimal content required Constraint Templates, asset submitted Library, automatically passed along Library's asset publication mechanisms). extreme, organization might use Lifecycle Manager's Constraint Templates Smart Controls governance automation processes configure combination incremental content mandates aligned multi-stage review signoff process asset, process consisting mix automated validation actions manual review steps. Edit-time Validation discussed section above, Constraint Templates used Lifecycle Manager establish basic content validation rules assets, including: Cardinality (mandatory/optio nal, single multi-valued) Valid value lists Default values Override values asset progresses through its SDLC phases) many cases, such validation rules sufficient guide Asset Capture Engineers correctly completely populating assets. However, situations may require more complex validation rules. support situations, Lifecycle Manager provides synchronous (edit-time) validation www.soa.com Copyright SOA Software, Inc. rights reserved. framework. framework supports both declarative algorithmic validation rules raise detected conditions user form severe, warning informational messages. Declarative rules expressed via specialized XML document, while algorithmic validation rules access full power Lifecycle Manager's local Java-based APIs via Beanshell Jython scripts native Java extension classes. Examples declarative validation rules easily configured Lifecycle Manager include: Content format validation through Perl-style regex expressions asset version number must format V<positive integer>.<non-negative integer>) Conditional content enforcement Service asset designated SOAP, WSDL mandated; designated REST, REST operation dialog presented mandated) Conditional relationship validation asset-type set \"Service\" consumesschema relationship must established linked valid asset type Schema) Cross-classifier validation classifier service-source set \"packaged application\" classifier provider must set valid packaged application ISV) Algorithmic validation rules often retrieve assets and/or information external sources determine asset validity. may execute calculations derive populate asset metadata values. Examples prebuilt algorithmic validation rules provided part Lifecycle Manager include: Parsing validating imports includes specified WSDL XSD artifacts generate acquisition-type consumption relationships between Service Schema assets (including support enforcing use governed schemas Service schema namespace uniqueness validation Service port type binding uniqueness validation Automated establishment asset relationships based classifier values service type Data Service automatically associate specific Technical Policy Set asset service drive automated operational policy assignment discussed section below) Validation rules configured run during asset creation, asset new version copy creation, asset update time asset submission via invocation explicit Validate action end user), application new template asset automated template change occurs result governance process automation) asset deletion. Smart Controls Governance Process Automation Smart Controls allows Lifecycle Manager administrators Define Assign Define custom roles roles users organizational structure custom asset production governance/review processes, including: Automated asset validation (including asset metadata properties), parsing post-processing activities using both prebuilt custom scripted automation tasks Role-based user-specific review flows, including both comment-only approval request types notification signoff asset changes existing consumers asset desired Checklist-style request fields made available review audit activities, including advanced capabilities such Nested field support subfields controlled parent field values asset approved conditionally, customer may wish gather additional information conditional restriction being established) Copyright SOA Software, Inc. rights reserved. www.soa.com Visibility cardinality control based request approval rejection require reason code request rejected, require approval level request approved) Automatic manual final asset publication Configurable automatic discussion forum topic creation, including optional configuration inline \"comments\" section exposed directly thinclient Asset Details page Automated contact list population based org structure Designation selected artifacts \"private\" (not retrievable/downloadable until project approval granted) example, consider following asset production governance scenario: enterprise defined Web services production SDLC include reviews points lifecycle: Requirements complete: business requirements documented initial service definition specified, allowing business analyst architecture reviewers validate service against business context Design complete: Interface WSDL provided, implementation approach defined sufficient documentation UML design models completed, relevant legacy APIs identified, test plan defined) allow architecture, security test lead reviewers validate design against technical application/integration contexts Implementation complete: Service implemented deployed test environment, sufficient supporting documentation sample client code, automated test cases, usage guide) enable potential consumer understand service; architecture, performance operations reviewers complete final review before deployment www.soa.com Copyright SOA Software, Inc. rights reserved. Smart Controls roles processes configured automate each review points. simple design complete governance process might look something Asset Submitted Validate WSDL Inform Submitter failure Pass? yes Notify Architects End Inform Submitter rejection Approve? yes Proceed asset Publication (auto/manual) Each review points own Smart Controls roles processes defined, Smart Controls filters configured route submitted SDA appropriate process based asset metadata organizational structure. Users involved Smart Controls review process automatically notified pending requests via email contains imbedded URL request details. Reviewers access via Lifecycle Manager thin client list pending requests requests acted upon past. Upon opening pending request, user easily view prior governance requests differences between governance requests, change history asset currently under governance. choose approve reject request time simply edit request save later approval pass along another governance user review final action. Users Usage Controller administrative authority given access additional page lists requests library. pages provide appropriate sorting filtering options allow user quickly find desired request based submitter, status, request type, parameters. Asset submitters view active inactive requests through similar set pages Lifecycle Manager thin client. Active requests show submitters currently pending governance approval role along Lifecycle Manager users having role-based authority approve reject submission request, thereby making easy ping approvers requests not www.soa.com Copyright SOA Software, Inc. rights reserved. being expeditiously processed. Submitters needing resubmit asset rolebased reviewer rejected original submission) choose prime resubmission request field values immediately prior submission request asset. Publication Templates Once submitted asset passes through configured Smart Controls review process any), proceeds asset publication. Just capture process, templates used asset publication help define expedite process. publication template come group person(s) owns asset(s) published. Group-derived templates further selected through metadata filtering rules assign publication template restricts executable jar file access until consumption approval granted assets designated enterprise certified, while allowing users directly access such files noncertified assets). While publication typically invoked automatically, manually based library's configured publication template settings. case manual publication, assets ready publication queued publication requests Asset Publisher. each asset, publisher provides additional information publishing asset. automated publication, additional detail included publication template. New Version \"Create Processing important aspect ongoing asset management initiative new version processing. Lifecycle Manager provides customers great deal flexibility creating new asset versions. default, Lifecycle Manager automatically makes deep copy asset being versioned (including copies any by-value artifacts contained asset). more control new version content required, customers designate specialized \"new version\" constraint template configured default, override clear asset's metadata fields associated artifacts required. addition, specialized synchronous validation rules automatically invoked time new version creation automatically format version number newly created asset according organization's version numbering rules). Lifecycle Manager offers users \"Create action behavior configurability similar new version creation. primary difference between \"Create New Version\" \"Create actions \"Create New Version\" automatically establishes predecessor/successor relationship between existing new asset used generate notifications subscribers consumers existing asset) whereas \"Create does not establish such link. Synchronizing Services Policy Manager integrated configuration, Lifecycle Manager automatically synchronizes service definitions WSDLs) selected metadata SOA Software's Policy Manager product. Lifecycle Manager configured automatically advance operational governance state service Policy Manager, thereby signaling operational administrators www.soa.com Copyright SOA Software, Inc. rights reserved. handoff development operations control service occurred. service progresses through operational staging production, transitions turn synchronized back Lifecycle Manager form service state updates. Lifecycle Manager capable validating, governing synchronizing WSDLs developed through top-down modeling practices WSDLs independent work products referencing independently governed schemas) through bottom-up tooling practices WSDLs bundled implementation schemas generated through development tooling referenced via relative path). latter case, such services typically packaged zip files association services under governance; Lifecycle Manager automatically extracts WSDL associated schema documents such files builds XML dependency graph prior synchronization Policy Manager. Customers using SOA Software's Network Director Policy Manager DataPower components concert Policy Manager create proxy virtual services consumption purposes choose synchronize metadata representing operational policies each virtual service Lifecycle Manager Policy Manager. metadata turn used Policy Manager automatically assign designated audit security policies each proxy virtual service generated Network Director. instance, organization may define three audit levels normal, high diagnostic) three modes consumer authentication standard internal consumer, rich-client internal consumer, part its operational service governance framework. levels/modes expressed logical policy taxonomy values Lifecycle Manager synchronized Policy Manager use physical policy assignment. Such approach both abstracts operational service policy concepts development time greatly reduces potential human error proxy virtual service generation process. integrated Lifecycle Manager Policy Manager solution configured reflect rollup operation metrics per service generated Policy Manager Lifecycle Manager. gives SOA organization's development community full visibility each service's operational behavior, providing developers indication service capacity stability architects information overall health organization's SOA. Synchronizing APIs Community Manager Lifecycle Manager automatically synchronizes REST APIs Community Manager, SOA Software's external API gateway product. synchronization gives enterprises full visibility entire API development deployment lifecycle, ensuring configuration settings such resource-level OAuth provisioning necessary work products such documentation, end-user license agreements, avatar images properly governed once approved, automatically provisioned external partner community discovery consumption. end-to-end capability unique SOA Software's product suite provides organizations effective way link business efforts towards building set valuable APIs. www.soa.com Copyright SOA Software, Inc. rights reserved. APIs typically deployed both sandbox production modes access external consumers. Sandbox API endpoints full production API instances test data rather live data behind implementation, thereby giving partners course enterprise itself) opportunity validate app's behavior before live app. Lifecycle Manager leverages concept subsidiary assets support sophisticated behavior. subsidiary asset asset instance cannot live outside scope its parent asset whose lifecycle fully controlled parent. Such asset types very useful multi-part content must maintained validated logical unit exactly situation encountered specifying sandbox production API endpoints. Synchronizing Services SOLA Lifecycle Manager provides full service SDLC integration SOLA, SOA Software's mainframe service development platform. Both top-down WSDL first) bottom-up copybookbased) service development scenarios supported via integration. top-down case, WSDL automatically propagated Lifecycle Manager SOLA Developer use during implementation process. bottom-up case, WSDL generated SOLA Developer automatically propagated SOLA Developer Lifecycle Manager. either case, SOLA Developer notify Lifecycle Manager development completion, triggering appropriate updates SOLA-developed service Policy Manager. Asset Submission Automation Capabilities discussed above, Lifecycle Manager provides numerous prebuilt automation capabilities suitable use during asset submission along ability define custom automation tasks using Beanshell Jython scripting languages. following subsections highlight few Lifecycle Manager's prebuilt capabilities. more detail automation capabilities, refer Lifecycle Manager Process Configuration Guide available Lifecycle Manager Support Site. XML Validation Smart Controls configured automatically validate XML documents against imported schema references. schemas either retrieved external location referenced document being validated, Lifecycle Manager configured provide local copy schemas validation purposes, schemas directly represented assets Lifecycle Manager. www.soa.com Copyright SOA Software, Inc. rights reserved. Regular Expression Based Asset Validation Asset version classifier metadata automatically validated using Perl regular expressions (http://search.cpan.org/dist/perl/pod/perlre.pod). Upon detection validation failure, error notification email sent part Smart Controls governance process. Policy Manager Based Policy Validation Lifecycle Manager configured leverage SOA Software's Policy Manager policy engine artifact validation. Customers both use prebuilt policies provided part Policy Manager installation WS-I Basic Profile compliance elements) create own policies defining XQuery assertions Javascript/Java rules. policies automatically invoked part Smart Controls governance process. XML Parsing desired, XML documents automatically parsed import dependencies, discovered dependencies translated asset relationships BPEL document imports series WSDL documents, WSDL documents turn import set XSD documents; XPDL document references series applications underlying services). Smart Controls configured automatically create assets representing dependencies desired. Service Registry Publication end successful governance process Web service, Lifecycle Manager configured automatically publish Web service its associated metadata more targeted service registries. SOA Software Policy Manager UDDI-compliant registries such TIBCO Active Matrix Registry supported. section additional information topic. Target System Record Publication organizations may wish use Lifecycle Manager validate governed artifacts work products) prior publication development systems record such SCMs. Lifecycle Manager provides prebuilt automation tasks capable publishing such artifacts ClearCase WebDAV-enabled platforms. Metadata, Template Process Flow Manipulation Smart Controls configured modify asset metadata template settings configured governance process. example, may desirable automatically change both status classifier asset its capture template after publication order prepare asset next SDLC stage. Smart Controls processes configured handle special situations such post-rejection tasks (including automated resubmission desired) automatic rejection based filtered conditions. www.soa.com Copyright SOA Software, Inc. rights reserved. Lifecycle Manager Configuration Designer Eclipse Plug-in simplify development Smart Controls governance automation processes, Lifecycle Manager provides Eclipse-based plug-in allows Lifecycle Manager administrators graphically specify processes. Using standard palette-based dragand-drop techniques, administrators define many processes needed align Lifecycle Manager's automation capabilities organization's governance requirements. addition, Configuration Designer enables administrators graphically define asset types (including asset type capture template mappings), properties, property constraints, metadata property groups, user roles (including mappings editable asset types editable/viewable metadata property groups) filters used role-based asset specifications governance flows. Administrators configure Configuration Designer installations expose custom-developed automation tasks (known \"listeners\") part graphical editing palette. Custom listeners described further Chapter guide. Configuration Designer serves primary administrative interface manage Lifecycle Manager configuration files. Template files types (including HTML-based email notification templates XML-based asset definition constraint templates), asset type icon files, asset validation governance automation XML documents scripts, artifact transformation stylesheets uploaded retrieved Lifecycle Manager server via Configuration Designer. Configuration Designer used produce portable zip file representation Library's complete set configuration files easy server-to-server migration test environment production Lifecycle Manager installation), directly import such zip files produce new Configuration Designer project Eclipse standalone rich client. Users Roles discussed earlier, users assigned roles authority perform certain operations, Library-wide, while others may pertain organization project. roles include: Asset User Asset Capture Engineer Asset Publisher Asset Owner Project Manager Usage Controller Copyright SOA Software, Inc. rights reserved. www.soa.com Library Administrator Lifecycle Manager administrators introduce own customer-defined roles use Lifecycle Manager Smart Controls configurable asset governance processes. Organizational Groups Project-level Customization Considerations Lifecycle Manager supports flexible mechanism called Organizational Groups model organizations projects organization's structure. general, organizations projects populated Lifecycle Manager based involvement asset production, consumption and/or governance activities and/or need establish metrics various levels organizational hierarchy. Group hierarchies introduced establish asset search visibility rules Library Enterprise-scope assets visible Library users, Group-scope assets visible members group its subgroups). Users assigned role-by-role basis organizations projects needed. Every Lifecycle Manager Library contains Enterprise Organizational Group represents entire enterprise broadly-scoped organization event multiple libraries deployed enterprise). Subsidiary Organizational Groups Projects created each initiative needed. project creates shared work area people working particular project. Chosen asset views, reference models asset queries information managed project work area. Projects Organizational Groups useful SDA management usage reporting purposes. Library behavior driven project definition, significantly increases productivity accuracy. project defines following: allowed work project. project manager. authorized capture, edit publish assets. asset views (groups assets) visible project. Reference Models visible project. profile project includes: default asset tree display. starting set classification criteria example, project may allow components type Java used). general, user roles allocated Library's established organizational hierarchy. example, user may allocated Asset Capture Engineer role Organizational Group another user same role Organizational Group first user example allowed create edit those assets owned Projects Organizational Groups contained Organizational Group hierarchy (including course Organizational Group itself). Likewise, second user allowed work assets owned Organizational Group hierarchy. flexible approach role-based authorization gives organizations ability create layered review governance model SDA production. Referring back Smart Controls example prior section document, organization deploying Lifecycle Manager may define Architect Business Analyst roles allocate user authority those roles different levels deployed organizational hierarchy. example, organization may Enterprise Architecture team whose members involved review candidate assets; thus www.soa.com Copyright SOA Software, Inc. rights reserved. Lifecycle Manager users responsibility Architect role assigned Enterprise Group level. hand, Business Analysts may line-of-business responsibility, Lifecycle Manager users Business Analyst review responsibility role assigned LOB-specific groups organizational hierarchy. role authorization model, correct set asset reviewers automatically notified Smart Controls based group originating submitted asset. Organizations may choose automatically provision groups, users role assignments Lifecycle Manager external sources. Such automatic provisioning occur via integration LDAP instances systems record via Lifecycle Managers automation APIs. User, project organization profiles extended include customer-configured properties augmenting core information managed Lifecycle Manager. Groups Visualization Lifecycle Manager provides Eclipse-based graphical viewer visualize organizational group structure, including users roles distributed throughout organizational hierarchy. viewer simplify process maintaining enterprise's organizational structure Lifecycle Manager. Federated Libraries Enterprise development groups often need deal complex organizational issues, including distributed locations, outsourcing, offshoring, line-of-business-related partitioning project teams. Quite often teams need selectively share SDAs across organizations while maintaining control oversight those SDAs. Lifecycle Manager addresses needs its federated library infrastructure. Lifecycle Manager federated library infrastructure designed allow organizations easily partition SDA-related activities while supporting selective sharing SDAs across those partitioned libraries. multi-library support enabled two levels Lifecycle Manager product: Lifecycle Manager installation, administrators create many libraries desired. default, each library totally isolated libraries installation. Installation administrators selectively connect library another, thereby www.soa.com Copyright SOA Software, Inc. rights reserved. automatically exposing SDAs resident source library (known Visible Asset Source) client library being configured. Administrators selectively add libraries hosted remote Lifecycle Manager installation Visible Asset Source list. libraries known Remote Asset Sources. Lifecycle Manager connects Remote Asset Source using SOAP APIs. Once administrator configures client library connect Remote Asset Source, library refresh its view SDAs remotely connected library periodic basis specified administrator. assets published local Lifecycle Manager library, asset metadata applied against filtering criteria established connected libraries. Such filters configured using Configuration Designer discussed earlier document, combine multiple metadata elements values needed enable precise control assets synchronized remote connection enterprise-certified services shared across libraries). asset conforms filtering criteria, its metadata flow connected library become visible library. course, library turn may connected further downstream libraries allowing organizations implement deploy quite sophisticated asset distribution models. integrated Lifecycle Manager Policy Manager deployment, services federated across libraries acquired applications services any library visible. Lifecycle Manager automatically maintains service ownership across libraries federated configuration, thereby allowing automatically route consumed asset approvals correct remote library routing application's request use service specific service-level agreement owner service its originating library) establish operational contracts correct service instances managed Policy Manager. section further discussion integrated service acquisition. Key Library Configuration Points While many aspects Lifecycle Manager work environment defined project level, certain aspects specified \"enterprise level\" affecting entire Lifecycle Manager installation. Lifecycle Manager provides configuration points help manage installation support Library multiple groups, including: Library description \"Sender Email Account\" automatically generated messages receive replies Feedback contact information displayed asset information pages Global Template (default) definition templates discussion) Asset acquisition mode(s) chapter details) Quickest Way Started Lifecycle Manager very flexible, ships default settings, preconfigured schemas governance automation flows, standard templates speed start-up. following tasks make start faster: Work small set assets start. Identify small set users start. www.soa.com Copyright SOA Software, Inc. rights reserved. Import simple, existing UML block-diagram based model covers domain part domain assets loaded (load model used create assets, available). Capture assets using IDE-based wizard web submission interface, saving automatic updating loading later. Apply appropriate governance process automation ensure published assets good quality meet organizational needs expectations. Define minimal organizational structure sufficient represent project collaboration governance scoping requirements. Initially, same person Library usage controller administrator. many recommendations detailed further Lifecycle Manager Best Practices Assessment template documents. www.soa.com Copyright SOA Software, Inc. rights reserved. Locating Using Assets core value asset Library its ability allow users locate understand assets fit specific requirements. properly configured Library result effective asset understanding use. Lifecycle Manager provides several search mechanisms support styles search interaction, ranging quick hoc keyword search sophisticated search using Reference Models. Locating Assets Asset Tree Browsing Models hoc Search Asset Query Model Based Search IDE Integrations Asset Viewer Lifecycle Manager supports both thin-client (browser-based) IDE-based user interfaces. Both Internet Explorer Firefox browsers supported. Lifecycle Manager provides IDE integrations Eclipse-based IDEs (both open source commercial variants) Microsoft Visual Studio. Modes Locating Assets Browsing Assets user browse assets using Lifecycle Manager Asset Tree, always present left hand side Lifecycle Manager user interface. Asset Tree similar explorer tree file tree dynamically generated project- user-selected classifier types. tree navigated, asset chosen, its detail displayed. www.soa.com Copyright SOA Software, Inc. rights reserved. Searching Assets Searching assets allows user find assets associated specific criteria, such application requirements. search either persistent hoc either text-based based graphical reference model previously populated Lifecycle Manager. Search results return list assets conforming search criteria along three columns configured classification information used sort assets prior further investigation. Lifecycle Manager aid control collaboration efforts locating assets. Lifecycle Manager concept project. project thought shared work area ensures assets used project conform given profile. addition, projects provide area searches stored, used, and/or reviewed others. aspects projects Section Project Level Customization Considerations Section Acquiring Assets.) Asset Tree asset tree very flexible intuitive mechanism locating assets. operates standard file search exploring mechanism, yet its structure dynamic change based categorization values such asset type, asset domain, provider, etc. Users modify structure Asset Tree based own preferences, use Asset Tree structure provided project working Asset Tree nodes used simply organize assets hierarchical tree view, directly invoked build search result list assets reside under node. Users configure Asset Tree settings automatically expand desired depth upon login desired. www.soa.com Copyright SOA Software, Inc. rights reserved. Preconfigured Custom Searches Lifecycle Manager, standard search box always visible left-nav bar Library. Searches initiated either leftnav search box directly asset editing page while adding asset relationships. latter approach particularly useful asset owners progress asset through its defined governance lifecycle. many cases, specific relationships must established asset owner each governance stage, allowing owners initiate search asset edit Lifecycle Manager allows those users complete work while broader context fulfilling content mandates established current governance stage asset under edit. user select any following types preconfigured searches: Assets Content, searches across available asset metadata queryable artifacts. search string entered, result list assets available active project. Assets Name, searches given asset name. Assets Keyword, searches assets given keyword. Services Operation, searches operation names specified WSDL artifacts associated service assets Assets Status, combines search asset content additional search field based asset governance status Modified Since, combines search asset content date field used filter those assets whose last modification date earlier provided date value addition standard search types, Lifecycle Manager administrators configure custom search types leveraging product's XML-based search engine. Every asset managed Lifecycle Manager along its surrounding context owning organizational group, last editor, creation date, last edited date) stored XML document searched via configured XPath expressions. Lifecycle Manager administrators declare many XPath expressions desired expose end users search types alongside Lifecycle Manager's standard searches. XPath expressions extended incorporate any XML-based artifacts associated Lifecycle Manager assets BPEL, WSDL, XSD). configuring specialized search types, administrators provide Lifecycle Manager users benefit precise user-centric searches without requiring those users understand complexities XPath. evidenced Assets Status Modified Since default search types, Lifecycle Manager supports multi-field searches. Configured search expressions combined desired create compound search forms any desired type, giving Library administrators flexibility define www.soa.com Copyright SOA Software, Inc. rights reserved. sophisticated search types meet needs various Library audiences simple, easy-tounderstand manner. Once asset search executed, list assets meeting criteria displayed along configurable sortable set metadata assets. assets investigated deployed. Adhoc searches saved persistent searches further refinement. Saved Searches Saved searches persistent records search criteria. records hold definition asset query. Saved searches owned stored project accessed any authorized project user. Any search initiated search box saved selecting Edit Search Properties action Search Results page. takes user Search Details page search criteria modified search named saved future use. Users mark any saved search \"alertable\", thereby enabling those users notified any new republished asset conforms search. powerful alert mechanism helps users automatically stay top new information (such architectural patterns best practices), improving communication development organization. Saved searches offer ability Rerun same search any time update resulting asset list. Modify search criteria rerun search. Make search criteria available others www.soa.com Copyright SOA Software, Inc. rights reserved. Searching Asset Query Searches created directly Lifecycle Manager's home page selecting Create Asset Query action. Searches created manner identical those created through search box; however, approach allows user immediately enter classifier filtering criteria narrow search. Search Results Regardless method used invoke search, Lifecycle Manager returns set assets confirming search configurable flexible Search Results grid. grid lists each asset's name version along three designated classifiers sortable paginated format. Designated classifiers specified organizational profile overridden individual user settings desired. Depending upon search initiated, grid may presented user new Library page may presented asset edit dialog. initiating search left-nav search box, users choose export assets returned search. export selected, Lifecycle Manager produces zip file containing spreadsheet listing metadata selected assets series asset-specific folders containing any by-value artifacts associated exported assets. export result set turn modified used update assets via Lifecycle Manager's Import Center (section simply manipulated user produce ad-hoc reports using spreadsheet external tool capabilities. Depending upon Library configuration, search results processing actions may available Search Results page; example, user responsible creating project proposal assets Library may initiate asset search, investigate assets returned search finally select more those assets automatically associated newly generated Project asset initiated Search Results page. www.soa.com Copyright SOA Software, Inc. rights reserved. RAD Eclipse Plug-ins addition thin-client user interface shown previous sections, Lifecycle Manager provides powerful, tightly-integrated plug-in IBM Rational Application Developer Eclipsebased IDEs. plug-ins give developers capabilities Lifecycle Manager thin-client directly accessible right IDE, eliminating need move tool another during development. Lifecycle Manager plug-ins tightly integrated, users easily configure support own usage patterns activities. actions supported plugins use standard RAD/Eclipse widgets wizard structures. addition, ClearCase users import ClearCase controlled artifacts reference directly ClearCase controlled Eclipse projects via Lifecycle Manager plug-in, thereby eliminating copying duplication executable artifacts such jar files ensuring ongoing synchronization correct file version. Supported ClearCase options include both UCM mode non-UCM mode Composite Component references. Visual Studio Add-in Lifecycle Manager provides powerful, tightlyintegrated add-in Microsoft's Visual Studio IDE. add-in gives developers capabilities Lifecycle Manager thin-client directly accessible right IDE, eliminating need move tool another during development. Lifecycle Manager add-in tightly integrated, users easily configure support own usage patterns activities. actions supported add-in use standard Visual Studio widgets wizard structures. www.soa.com Copyright SOA Software, Inc. rights reserved. IDEs Lifecycle Manager's Eclipse Plug-in compatible many commercial Eclipse-based IDEs. Contact SOA Software support questions specific IDE products. www.soa.com Copyright SOA Software, Inc. rights reserved. Employing Assets Total Asset Lifecycle Manager holds overview, metadata (classifiers), properties, artifacts, related assets make \"total view\" asset. Examples information references Lifecycle Manager holds each SDA include: Overview Information: name, version, overview, description, contacts supporting project information. Attributes: classification information such asset type, supported platforms, functional domain sub- domain, support level, metadata elements configured Library asset type, along artifacts work products) such XML documents, binaries, user documentation, test scripts, models, others. Asset Relationships: previous versions, prerequisites, co-requisites, suggested/actual usage strongly-typed dependencies between assets. Context Information: group owns asset, created, last modified, etc. Governance Request History: access past submission requests asset progresses through its production SDLC. Each asset type associated unique icon providing useful visual cue Library users. Asset type icons shown Asset Tree, Asset Details both asset being viewed its related assets) Asset Relationship Visualization (ARV) views. Default icons provided each asset type provided Library's default configuration. icons replaced desired customers, additional icons provided customer-specified asset types. Lifecycle Manager configured via XML templates define exact information stored each given SDA type Chapter Building Library Integrating Development Environment). Hints provided user indicate asset currently view change process. Knowledge such planned change may cause user contact asset owner understand change affect planned use asset. www.soa.com Copyright SOA Software, Inc. rights reserved. Virtual Asset WindowTM Different roles enterprise require different information concerning asset facilitate understanding, governance consumption asset. example: Business analysts need information asset supports business requirements Architects need asset fits preferred architectural approach Project managers need understand schedule, effort, potential ROI asset Employing Assets Investigate Discuss Visualize Acquire Subscribe Cross-tool IDE integrations drive improved understanding assets/services, Lifecycle Manager's Virtual Asset Window extends role definition capabilities asset presentation level. each defined role Lifecycle Manager, asset configured present asset role-specific fashion respect information exposed information ordered user interface. addition, users multiple roles easily switch role another view asset. addition Virtual Asset Window, users quickly easily information need concerning asset, thereby broadening types users accessing, using promoting assets throughout enterprise. Studying Discussing Software Development Assets user review information available any asset visible launch download asset workproducts desired. service assets, Lifecycle Manager configured default automatically populate WSDL viewer artifact presents WSDL contents easyto-read human-friendly format. Discussion threads (including optional inline Comments section presented directly thin-client Asset Detail page) available each asset reached any asset information pages. Users review discussions join Users choose email asset information others directly thin-client Asset Detail page. older newer version asset being reviewed exists Library, users view changes between versions digest form through Lifecycle Manager thin client addition, WSDL XML document-type artifacts such versioned assets compared using Lifecycle Manager's built-in artifact comparators. Lifecycle Manager allows customers implement deploy own custom comparators artifact types desired. www.soa.com Copyright SOA Software, Inc. rights reserved. Visualizing Assets Relationships Lifecycle Manager users choose view selected asset relationship assets using Lifecycle Manager's Asset Relationship Visualization (ARV) capabilities. ARV provides Relationship Visualization view presents graphical overview multi-level dependencies centered selected asset. ARV users view asset relationship content digests via hoverhelp, choose launch any asset ARV view main Library window desired. Likewise, ARV views fully supported Lifecycle Manager's Eclipse Visual Studio plug-ins. User-configurable viewing options ARV include filtering more relationship types, asset metadata selectable recursion depth. Users select specific metadata elements expose asset hoverhelp, individually hide specific assets produce desired graph layout meets user objectives. ARV settings named saved reuse. Acquiring Assets Use Once asset editor determined consume asset, clicks acquire icon/link IDE plug-in/browser initiate asset acquisition. Alternatively, selection asset via Add Relationship wizard editing asset browser automatically initiates asset acquisition process. Asset users easily determine project consuming asset currently force viewing Active Project Active Asset fields Consumption section left-nav bar thin-client viewing equivalent entries Connection node plug-in's Library Explorer view. Upon initiation acquisition, asset user may asked provide justification more details acquisition quality service required application's use service). justification may simple freeform text comment, may involve specifying expected service-level demands placed asset, agreement corporate usage criteria, information needed evaluate audit asset usage. Lifecycle Manager integrated SOA Software's Policy Manager, www.soa.com Copyright SOA Software, Inc. rights reserved. decisions made during asset-based acquisitions services result enforceable runtime contracts being automatically generated Lifecycle Manager Policy Manager. contracts established service operation level desired, giving service consumers full control quality service requirements operation-by-operation basis. Just asset production, Smart Controls processes configured control asset acquisition process. many organizations, asset acquisitions require approval, perhaps Project Manager representative organization produced asset being acquired owner service must approve requested service usage ensure service's production infrastructure not overwhelmed consumer demand). Smart Controls provides fully flexible acquisition governance model, supporting customer-defined roles, automation manual review stages configurable checklist-style fields metadata-driven process filtering. box, Lifecycle Manager configured enable two-stage acquisition governance process involving Project Manager Asset Owner native Lifecycle Manager roles. project configured require Project Manager's approval, request put Project Manager's acquisitions queue managers project notified via email. asset acquisition may result cross-charging, license purchases usage certification, aspects project governance, approval process ensures project manager agrees use asset. Likewise, Lifecycle Manager configured require Asset Owner approve asset acquisitions, request put owner's acquisitions queue allowing owner approve deny request. noted Federated Libraries section above, Asset Owner approval extends remotely-owned assets federated library configuration, thus ensuring proper authority granted cross-enterprise consumers while preserving library-scoped security. default Smart Controls acquisition governance process graphically portrayed follows: Asset Acquired Asset User Notify Project Managers Inform Acquirer Rejection Approve? yes Notify Asset Owners End Inform Acquirer rejection Approve? yes Asset Registered, Relationship established www.soa.com Copyright SOA Software, Inc. rights reserved. Lifecycle Manager's prebuilt integration SOA Software Policy Manager provides powerful mechanism coordinate developmenttime runtime views service consumption contracts. Valid Service Level Policies (SLPs) defined Policy Manager service being acquired directly exposed developer initiating acquisition, thereby allowing developer document intended usage characteristics service client application, orchestration) currently under development. addition, Network Director IBM DataPower being used establish proxy virtual services consumption purposes, Lifecycle Manager present full set proxy services varying non-functional characteristics developer initiating consumption request. desired, integrated consumption governance processes configured allow operationlevel agreements established between consumer consumed service. consumer service, each operation consuming service establish its own independent consumption agreement more operations consumed service, thereby enabling fine-grained impact analysis visibility control service access. Upon approval, information used automatically create Policy Manager contract contracts case operation-level acquisition) draft state serves basis operational governance. contracts typically include reference consumer's unique identity UDDI tModel key case consuming service, authentication identity such LDAP userid case non-service consumer. Contracts scoped consuming project desired. Lifecycle Manager Smart Controls acquisition processes configured automatically acquire related assets upon approval root asset. example, organization may established two-tier service architecture layer composed composite elemental services, composite services incorporate more elemental services implementations. may beneficial environment track acquisitions not composite services applications underlying elemental services implicitly consumed those applications through composite service use. Related asset acquisition configured acquire directly related assets recursively acquire assets specified relationship types. Users involved asset acquisition approval process automatically notified pending requests via email contains imbedded URL request details. Reviewers access via Lifecycle Manager thin client list pending requests those requests acted upon past. Users Usage Controller authority given access additional page lists requests library. pages provide appropriate sorting filtering options allow user quickly find desired request based submitter, status, request type, parameters. Asset acquirers view active previously processed requests through similar set pages Lifecycle Manager thin client. Active requests show acquirers currently pending governance approval role along Lifecycle Manager users having role-based authority www.soa.com Copyright SOA Software, Inc. rights reserved. approve reject acquisition request, thereby making easy ping approvers requests not being expeditiously processed. Acquirers needing resubmit asset role-based reviewer rejected original acquisition request) choose prime updated acquisition request request field values immediately prior acquisition request asset. Depending upon sensitivity asset being acquired, asset publishers may choose configure certain asset artifacts (such binary executables, detailed design documentation, etc.) private. artifact configured private, cannot accessed through Lifecycle Manager Library until asset acquisition approvals successfully completed. useful feature organizations maintain tighter control asset usage deployment. Lifecycle Manager Configuration Designer Eclipse Plug-in discussed section Lifecycle Manager provides Eclipse-based plug-in support graphical definition Smart Controls governance automation processes. Active Asset Analysis organizations may desire formalized feedback mechanism (beyond asset-specific discussion forums automatically created Lifecycle Manager each asset discussed section above) acquired assets. Once asset acquired Lifecycle Manager project, Lifecycle Manager configured automatically generate user feedback survey asset. survey configurable contain both quantitative effort saved) qualitative use asset) feedback both numeric text form. Upon submission completed survey asset user, Lifecycle Manager automatically updates rated asset its discussion topics designated textual feedback, survey response preserved audit and/or historical purposes. Such formalized consumption feedback concerning asset met needs its consumers critical aspect establishing, maintaining increasing asset reuse throughout enterprise. consumption feedback guide organization identifying areas asset lifecycle, governance management practices expanded improved. Integrated Asset Project Usage Metrics Lifecycle Manager integrated Eclipse's Business Intelligence Reporting Toolkit (BIRT) runtime engine part its server deployment. part integration, Lifecycle Manager automatically generates usage metrics-oriented reports every asset, project, organizational group Lifecycle Manager library. reports show list acquisitions subscriptions each asset, list owned assets acquisitions each organizational group project metrics report shows list assets acquired project), giving Lifecycle Manager users easy access focused information library activity levels granular level. www.soa.com Copyright SOA Software, Inc. rights reserved. Subscribing Assets Keep Informed user considering asset acquisition, works asset on-going basis (such design standards core central services), subscribe asset information its changes. Subscribers receive email notification asset changed new version published. Users subscribe clicking subscribe link Asset Detail Page subscribe icon IDE plug-in. Each user manage list subscribed assets via Library home page. Users choose subscribe asset forums via RSS feed. Since every asset republication results new posting Publication Notes topic asset, RSS-based approach provides alternative email-based asset subscriptions those users prefer RSS aggregator/reader-style notifications. www.soa.com Copyright SOA Software, Inc. rights reserved. Assessing On-going Process Reporting Effectiveness Library Ongoing Assessments important track metrics associated goals set Library initial assessment planning phase. Metrics might include: Number Assets Reused (acquired) Cost saved via Reuse Number Assets Library Top Asset Authors indicated most used assets) Library Users Discussion forum activity Attainable, Measurable Goals Regular Analysis Reporting Ongoing Planning Roll SOA Software's professional services help determine appropriate metrics company's needs. Professional services help design reports custom templates gathering analyzing data Lifecycle Manager. Reporting Views Lifecycle Manager collects information needed support reporting analysis requirements. information available through read-only views production database, supports use standard report writers information warehouse/mining tools. views designed easy access understanding. Data Views include: Assets Lifecycle Manager Catalog (RPT_CATALOG_ASSET) Published Assets (RPT_ASSET) Asset Artifact Information (RPT_ASSET_ARTIFACT_INFO) Asset Classifier (RPT_CLASSIFIERS) Asset Forum Information (RPT_ASSET_FORUM) Asset Forum Topics (RPT_ASSET_FORUM_TOPIC) Asset Forum Messages (RPT_ASSET_FORUM_MESSAGES) Asset Acquisition Request (RPT_ASSET_ACQ_REQ) Asset Registrations (RPT_ASSET_REGISTRATION) Asset Changes (RPT_ASSET_CHANGE) Asset Classifier (RPT_ASSET_CLASSIFIER) Asset Relationship (RPT_ASSET_RELATIONSHIP) Asset Function (RPT_ASSET_FUNCTION) Manual Publish Requests New Assets (RPT_ASSET_PUB_REQ) Asset Requests (RPT_ASSET_REQUEST) Asset Request Actions (RPT_ASSET_REQUEST_ACTION) Asset Request Approvals (RPT_ASSET_REQUEST_APPROVAL) Asset Subscriptions (RPT_ASSET_SUBSCRIPTION) User Query Alert Subscriptions (RPT_QUERY_SUBSCRIPTION) Asset Search Specifications (RPT_SEARCH_SPECIFICATION) Asset Sources (RPT_ASSET_SOURCE) Domain Reference Models (RPT_DRM) Assets Mapped Reference Model (RPT_FUNCTION_MAPPING_INFO) Reference Model Idealized Components (RPT_IC) Copyright SOA Software, Inc. rights reserved. www.soa.com Reference Model Idealized Component Functions (RPT_IC_FUNCTION) Reference Model Idealized Component Interfaces (RPT_IC_INTERFACE) Asset Global Definition Template (RPT_GLOBAL_DEF_TEMPLATE) Asset Capture Templates (RPT_CAPTURE_TEMPLATE) Library use including Library name report) (RPT_LIBRARY) General Forum Information (RPT_GENERAL_FORUM) General Forum Messages (RPT_GENERAL_FORUM_MESSAGES) General Forum Topics (RPT_GENERAL_FORUM_TOPIC) Organizational Groups (RPT_ORG_GROUP) Organizational Group Hierarchy (RPT_ORG_GROUP_HIERARCHY) User Role (RPT_ORG_GROUP_USER_ROLE) Projects (RPT_PROJECT) Project Users (RPT_PROJECT_PARTICIPANT) User (RPT_USER) Contacts (RPT_CONTACT) Audit Trail Events (RPT_AUDITTRAIL) Audit Trail Event Properties (RPT_AUDITTRAIL_PROPERTIES) Audit Trail Events Event Properties (RPT_AUDITTRAIL_COMBINED) Lifecycle Manager Entity Properties (RPT_PROPERTY) Asset Request Properties (RPT_ASSET_REQUEST_PROPERTY) Integrated Reports Eclipse BIRT Reporting Engine Lifecycle Manager ships integrated Eclipse Business Intelligence Reporting Toolkit (BIRT) support. BIRT open source, Eclipse-based reporting system integrates applications produce compelling reports both web PDF. BIRT provides Eclipse-based design time toolkit along server-side runtime engine. BIRT's capabilities natural complement Lifecycle Manager, allowing Lifecycle Manager users rapidly develop new reports graphical rich client environment easily deploy those reports integrated BIRT server engine Lifecycle Manager. Lifecycle Manager automatically generates following BIRT-based library-wide reports every library created Lifecycle Manager installation: Business Domain Heatmap Report Success Metrics Report Copyright SOA Software, Inc. rights reserved. www.soa.com Repository Savings Report What's Hot Report What's New Report Search Analysis Report Governance Monitoring Report Stale Assets Report User Assignments Report Additional details reports available downloading Lifecycle Manager Reports Toolkit Lifecycle Manager Service Center. www.soa.com Copyright SOA Software, Inc. rights reserved. Extending Lifecycle Manager Project Management Deployment Environments Project Management, Development Deployment enterprises move forward component-based service-oriented application architectures, increasingly recognize need better tie developed components services deployed instances, both improve control efficiency application deployment maintenance provide rapid meaningful feedback developers things wrong. addition, many enterprises looking increase automation project management, taking advantage improved workflow orchestration tools both drive projects more efficiently ensure consistency process project project. Lifecycle Manager designed support enterprise goals, both through general-purpose integration interfaces through prebuilt integrations key deployment tools. example, consider large shop tens not hundreds application development maintenance projects underway any time. implementing workflow-based approach new project initiation, organization help ensure project resources properly allocated approved software development process followed through deployment, including designated review points throughout development lifecycle. Lifecycle Manager integrated such environment via: Automated Lifecycle Manager organizational group project creation maintenance Automated notifications key architects, team leaders, project management project checkpoints reached reviews required Automated publication Web service metadata enterprise runtime SOA registry Web service project goes production General-Purpose Integration Interfaces Lifecycle Manager designed support easy integration tools through its SOAP-based integration APIs. APIs include both inbound calls Lifecycle Manager outbound event notifications Lifecycle Manager. Inbound Integration Lifecycle Manager Lifecycle Manager exposes following roles via its SOAP-based integration APIs: Asset User Asset Capture Engineer (ACE) Usage Controller Smart Controls actions Among capabilities, APIs allow enterprises search assets, retrieve asset details (including artifacts), initiate asset acquisition, create edit new existing assets, create edit new existing organizational groups projects. gives organizations deploying Lifecycle Manager wide-ranging flexibility integrate Lifecycle Manager deployment tools processes. Lifecycle Manager provides selected subset its integration APIs REST form. APIs focused asset query, subscription/notification retrieval mechanisms, provided www.soa.com Copyright SOA Software, Inc. rights reserved. enable customers establish lightweight Lifecycle Manager integrations using any technology capable emitting receiving HTTP-based messages. Outbound Integration Lifecycle Manager exposing its SOAP-based event engine, Lifecycle Manager makes \"events interest\" available customers' integration tracking purposes. Supported event types cover full range Lifecycle Manager capabilities, including: User login/logout Asset Searches Asset Usage Asset Acquisition Asset Creation Maintenance Forums Reports Smart Controls events Usage Controller activities, including: Organizational Group Project Creation Maintenance User Creation Maintenance Classification Criteria Set Creation Maintenance Asset View Creation Maintenance Profile Creation Maintenance Customers pick choose wide range events creating Lifecycle Manager \"listeners\" receive event messages Lifecycle Manager. listeners may implemented externally deployed Web services supporting Lifecycle Manager-specified API (defined WSDL) internal components deployed Lifecycle Manager application. either case, listeners implemented process incoming events any number ways integrating those events workflow engine, generating emails, logging information, calling back Lifecycle Manager. help customers more quickly implement desired listeners, Lifecycle Manager provides sample listeners both types full source code. addition, Lifecycle Manager provides preimplemented Audit Trail based Lifecycle Manager events. Audit Trail configurable any Lifecycle Manager Library Administrator, exposed part Lifecycle Manager read-only reporting views. Audit Trail events subscribed via RSS feed. Prebuilt Lifecycle Manager Integrations addition prebuilt IDE version control repository integrations discussed section Lifecycle Manager provides support integrating enterprise's development production environments described below. Integrations additional run-time deployment monitoring environments planned future releases. Service Registry Synchronization Module addition its seamless integration SOA Software's Policy Manager product, Lifecycle Manager provides integrated Service Registry Web service publication module conjunction Web service definition deployment governance best practices, enables Lifecycle Manager used gateway ensure approved Web services published SOA Software Policy Manager UDDI-compliant registry such TIBCO Active Matrix Registry. www.soa.com Copyright SOA Software, Inc. rights reserved. Such registries used scenarios operational purposes, enable Web service clients dynamically bind currently active service endpoint rather statically implementing fixed endpoint binding client code, improving Web service scalability availability customer deployments. Lifecycle Manager Service Registry Synchronization Module designed flexibility. every organization's software development deployment different, trigger points Lifecycle Manager publishes registry fully configurable based Web service asset metadata stored Lifecycle Manager. addition, variability way Web services tools produce WSDL documents, Lifecycle Manager supports two publication scenarios: single Lifecycle Manager asset scenario, Lifecycle Manager asset represents both service interface deployed service endpoint; dual Lifecycle Manager asset scenario, Lifecycle Manager asset representing service interface separate assets representing deployed instances service interface. specific case SOA Software Policy Manager, Lifecycle Manager synchronizes governance state between Lifecycle Manager service registry generates runtime contracts resulting development-time acquisition requests discussed Chapter thereby enabling runtime better runtime access control services, example. Asset Import Center Lifecycle Manager's Asset Import Center allows Lifecycle Manager Asset Capture Engineer (ACE) easily create new service assets Lifecycle Manager list currently ungoverned services detected service registry instance integrated Lifecycle Manager. example, packaged application services directly deployed run-time environment WSDLs populated run-time environment's service registry imported Lifecycle Manager governed use application developers. Lifecycle Manager currently supports service imports SOA Software Policy Manager UDDIcompliant registries such TIBCO Active Matrix Registry. Asset Import Center provides quick way create Lifecycle Manager service schema assets XMI, BPEL, XPDL, WSDL XSD documents through simple browse-and-upload interface. Automated file parsing validation activities occur part file upload asset creation process. XMI import process supports full configuration map class structures represented XMI document asset relationship types Lifecycle Manager. Both BPEL XDPL import processes generate root asset Business Process) automatically build relationships related services specified imported document. importers optionally configured generate placeholder service assets those relationships specified document not yet present Lifecycle Manager. www.soa.com Copyright SOA Software, Inc. rights reserved. Spreadsheet-based imports purposes asset creation and/or update supported Import Center. Asset import spreadsheets created manually produced set existing assets exporting search results discussed section Finally, Import Center designed extensible part Lifecycle Manager. Custom importers implemented against import framework deployed customer-specific installations meet unique organizational needs. www.soa.com Copyright SOA Software, Inc. rights reserved. Works: Lifecycle Manager Architecture Lifecycle Manager Asset Library SOA Software's Lifecycle Manager Asset Library comprehensive index, designed seamlessly integrate development environment. library fully internationalized, both English French language version available. language versions may produced based customer demand. Presentation/Client Layers Lifecycle Manager supports thin-client, browser-based application model leverage its ubiquity flexibility. appropriate, information presented user through statically-defined HTML. However, most Lifecycle Manager Asset Library's sophisticated services require more dynamic interaction. Servlets JSPs leveraging AJAX technology work Application Components (via RMI-IIOP XQuery) generate dynamic pages needed present users information. Client Web pages presented user's browser HTTPS based installation configuration settings. Lifecycle Manager Architecture JEE Thin client RAD/Eclipse Open SOAP interfaces Scalable Secure Relational Database Persistence XML Data interchange, schema templates Application Layer application layer Asset Library handles requests presentation layer analyze, process, organize, present information held persistence layer. Application components layer built Enterprise Java Beans (EJBs) supporting Java objects deployed application server installation. Lifecycle Manager architecture defines three major application component types: Library Access: components manage asset enterprise data Library, provide isolation layer allows asset Library installed widely varying configurations. Configuration range fully centralized highly distributed multiple, physically separate libraries interconnected presented seamless transparent manner. sophisticated architecture allows flexible customization asset structure fit different asset types, individual enterprise requirements. Scoring Engine: component heart sophisticated search capabilities Asset Library. Software assets published Asset Library scored based rules established enterprise's Library manager. Scoring Engine returns assets highest affinity, ranked order, presentation user. Authentication Authorization: Lifecycle Manager combines LDAP integration user authentication along its imbedded role-based authorization model. Asset Library functions allocated users role-by-role basis. addition, dedicated Library installations integrated Single Sign (SSO) userid password management facilities, allowing enterprises define single point management crucial data elements. Standard JEE interfaces, such JDBC RMI-IIOP, used communicate between Application Layer layers architecture. www.soa.com Copyright SOA Software, Inc. rights reserved. Integration Layer Lifecycle Manager Asset Library provides set SOAP-based APIs integration customer's environment. APIs WS-I Basic Profile compliant, thus enable crossplatform linkage between Lifecycle Manager installations enterprise systems record, such version control repositories Lifecycle Manager IBM Rational Application Developer Eclipse Microsoft Visual Studio plug-ins add-in. Persistence Layer SOA Software defines four major categories information repositories managed Asset Library: Enterprise information users, organizational groups, profiles, etc., define asset Reference Model information Library used. Reference models specific industry technical domains allow users rapidly identify useful business processes associated functional capabilities meet current development needs. Asset entries include information, categorization data, artifact references, related assets references captured consistent complete form. Asset Search Specifications describe important functional, business, technical characteristics desired assets. information used Asset Library discover assets best meet search criteria. information managed through standard RDB XML techniques exposed report engines through series read-only RDB table views. Lifecycle Manager provides set prebuilt automatically deployed reports against views Eclipse BIRT format. reporting engines easily integrated Lifecycle Manager deployment. Lifecycle Manager Java IDE Plug-ins/Add-ins Lifecycle Manager's industry-leading plug-ins Eclipse, RAD Eclipse-based commercial IDEs bring power Lifecycle Manager asset metadata library directly developers work environment. plug-ins take full advantage underlying Eclipse RAD tool framework capabilities, presenting Lifecycle Manager functions form natural intuitive IDE users. SOA Software achieved Ready Rational status its RAD plug-in, level certification achieved very few tool vendors. Lifecycle Manager Add-in Visual Studio Lifecycle Manager's industry-leading add-in Visual Studio brings power Lifecycle Manager asset metadata library directly developer's work environment. add-in takes full advantage underlying Visual Studio tool framework capabilities, presenting Lifecycle Manager functions form natural intuitive IDE users. SOA Software Microsoft VSIP Premier partner, ensuring easy access both advanced Visual Studio APIs Microsoft expertise help using those APIs effectively. www.soa.com Copyright SOA Software, Inc. rights reserved. www.soa.com Copyright SOA Software, Inc. rights reserved. Conclusion Lifecycle Manager SOA design-time repository registry allows enterprises represent software development assets (SDAs) more graphical Reference Models. Lifecycle Manager SDA Library intelligent inventory SDAs, relationships each company's business processes technical infrastructure. Application developers, business analysts architects search library company's vital software assets identify those best match business technical requirements application development integration. Lifecycle Manager very flexible asset Library utilize default settings quick start fast return investment. system customized fit variety organizational structures, business processes, technology environments. addition, Lifecycle Manager provides tightly-integrated plug-ins add-in IBM Rational Application Developer, Eclipse, Microsoft Visual Studio, dramatically increasing developer productivity during asset search, investigation, consumption activities. www.soa.com Copyright SOA Software, Inc. rights reserved."},{"title":"J2EE Install Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-install-guide-J2EE-v6.5.1.html","date":null,"type":"pdf","description":"J2EE Install Guide for Lifecycle Manager 6.5.1.","categories":[],"body":"Portfolio Lifecycle Manager J2EE Installation Guide Introduction installation guide designed used both high level installation planning guide hardware software prerequisites, detailed step-by-step install instructions Portfolio Manager Lifecycle Manager application server. upgrade instructions please document appropriate Portfolio/Lifecycle Manager version SOA Software Support Center. first overview sections intended provide broad picture server client environments provide enough background plan install. subsequent sections detailed server install instructions take thru install process step-by-step each servers. installation process require administrator experience target operating system, application server, database platform. install client portion product done thru library interface individual users once servers library installed configured. planning dual Portfolio Manager Lifecycle Manager install, versions two products match. example, Portfolio Manager Lifecycle Manager not used together. Use System Admin Guide additional ongoing maintenance, user management, debugging, service pack information after Portfolio Lifecycle Manager installed. Step Planning Server Requirements Overview servers application designed based traditional, three-tier server architecture: database server, application server, web server. Portfolio Manager Lifecycle Manager application, logical software servers installed separately, each own hardware server, combined two hardware servers. recommended configuration install database hardware server, combine application web server second hardware server. Hardware Requirements Recommendations estimates not include base operating system, prerequisites such database product, application server product, web server product, JDK, etc. estimates minimum requirements. Additional memory processor speed generally improve performance. recommendations based users assets Asset Library, without using SSL encryption web server. Each logical server separate hardware servers Disk Database Sizing App Web Sun SPARC mhz Intel GHz IBM pSeries 400mhz Database hardware server, App Web second hardware server Database Sizing App/Web Sun SPARC mhz Intel GHz IBM pSeries 400mhz logical servers same hardware server Database Sizing Sun SPARC mhz Intel GHz IBM pSeries 400mhz SOA Software, Inc. Processor Portfolio Lifecycle Manager J2EE Installation Guide Memory least least least Database Sizing Tablespace Name Approx. Size* Notes/Comments DATA user, org group, project, base asset, general library information stored. size tablespace generally not affected size assets artifacts, does grow directly number users, projects, org groups, assets etc. LONG asset artifacts stored value artifact itself stored database opposed being referenced repository). size needed depend directly size artifacts library. estimate assumes artifacts each asset artifacts total), each artifact approx. LOGIDEXDATA LOGIDEXLONG LOGIDEXDATA LOGIDEXLONG LOGIDEXINDX LOGIDEXTEMP sizes minimums. note tablespace sizes specified pages. amount disk space depend page size time database created. Server Operating System Requirements Solaris Linux distribution supported J2EE application server AIX Windows JBoss WebSphere Server Software Prerequisites Portfolio Manager Lifecycle Manager requires LDAP server, application server, database server optionally, web server product list below. LDAP Servers Supported Portfolio Manager Lifecycle Manager able operate against any LDAP server long schema setup support email addresses through mail attribute. OpenLDAP free, open source product used company does not preexisting LDAP server. Application Servers Supported WebSphere Application Server Advanced Edition Enterprise Edition License Purchase Required IBM Version: WebSphere higher Homepage: http://www.ibm.com WebLogic Server License Purchase Required Oracle Version: Maintenance Pack SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Homepage: http://www.bea.com JBoss Server Version: 4.3EAP, 5.1.2EAP 6.1.0-Final Homepage: http://www.jboss.org SAP NetWeaver Version: Homepage: http://www.sap.com Database Servers Supported Universal Database/DB2 Server Enterprise Edition License Purchase Required IBM Version: version higher, Homepage: http://www.ibm.com Oracle Database Server Standard Edition License Purchase Required Oracle Version: higher (Oracle requires patch Oracle bug Oracle TEXT XML features required Homepage: http://www.oracle.com Microsoft SQL Server SQL Server Express Advanced Services License Purchase Required Microsoft Version: Homepage: http://www.microsoft.com/sqlserver/ Web Servers Supported (optional) iPlanet Web Server License Purchase Required Sun Version: Service Pack Homepage: http://www.sun.com Apache Web Server Available free download Apache Org. Version: greater, Homepage: http://httpd.apache.org IBM Server Available part WebSphere Java Software Development Kit (JDK) NOTE running WebLogic WebSphere, not necessary download install separate JDK, application server installed already. using JBoss, you'll need install JDK Database Requirements DBA Authority SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide base install requires database instance created available prior install. first steps install process create initial database objects (user, tablespaces, access rights) database instance. Both steps require DBA, DBA authority. After initial setup database instance schema creation database objects done via product uses standard JDBC access. DBA responsible ongoing normal DBA maintenance (backup, disk allocation, monitoring, etc). Overview clients Portfolio Lifecycle Manager product accessed via standard Web browser through SOAP-based clients. Interactive tooling brings key features Portfolio/Lifecycle Manager Desktop through standalone Windows client through IDE plug-in. Browsers Portfolio Lifecycle Manager support following browsers: Internet Explorer Firefox greater Google Chrome browser must following security settings enabled: Cookies Active Scripting JavaScript (Firefox) specific hardware requirements standard browser interface Portfolio Lifecycle Manager. Performance client constrained memory, processor speed, network connections. Client Operating System Prerequisite Requirements client tooling supported following platforms: Windows Windows following prerequisites: JRE greater installed client Client Hardware Requirements Recommendations hardware needed run Asset Capture very dependent additional modeling tool, such Rational Rose, used conjunction Lifecycle Manager. recommendations below generic additional memory processor speed may needed additional applications. GHz processor, minimum memory, memory suggested SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide disk space SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Step Pre-Install Checklist Prerequisites Notation Used Document Notation Different Operating Systems cases instructions vary slightly operating system application server version. Those differences denoted Operating system specific instructions: SOL (Solaris) RHL (Red Hat Linux) AIX (AIX Windows (WIN) Notation Configuration Properties install instructions need use several configuration properties lib.conf file (created below part Application Server install). instructions below configuration properties bracketed identify make easier search replace values. app.server.host property lib.conf file, instructions below referred {app.server.host} configuration properties described configuration file (lib.conf). Notation Commands File Updates Throughout document instructed run certain commands update various files. commands file updates denoted shaded background, such below: not execute following instructions. example executable commands look groupadd logidex useradd logidex logidex General Issues Portfolio Manager Lifecycle Manager use dates times various display computation purposes. application server database server installed separate servers running clustered setup suggested time synchronization utility, such NTPD, installed. Install JDK SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide install new JDK use existing JDK already system. install JDK any directory system. Make sure JDK install correct version above). During later steps install process need provide path JDK. Install JDK server Application Server installed. Install Configure Database Product not already existing installation Database Server products (such UDB, Oracle) need install product Install Database Server according basic instructions provided vendor. initial database instance needs created. recommended create separate database instance, use existing database instance. Refer UDB Oracle documentation instructions creating database instance database product. Oracle, instance \"database\" schema created MSSQL server, database created installation scripts. Oracle SID must Oracle Text feature installed must Oracle XML support enabled. installations must Text Search enabled instance. SQL Server Express must version \"Advanced Services.\" UDB, userid needs created database server used access database (standard UDB setup process). userid need entered configuration file part install. Install Application Server Product not already existing installation Application Server products (such WebSphere, WebLogic, etc) need install product Install Application Server according basic instructions provided vendor (WebSphere WebLogic JBoss) JBoss: JDK not bundled JBoss. Therefore, need install JDK. application servers support concept running application separate user root). run application separate userid, create userid group) install application server while logged user. During install, userid running Portfolio Manager Lifecycle Manager web app processes referred {logidex.user}, Unix userid (such portman). example commands create userid: groupadd repoman portman) useradd repoman repoman WebSphere Note: WebSphere defaults running application servers root, run Portfolio Manager Lifecycle Manager any application server different user, several additional steps needed. Pay attention specific instructions marked `WebSphere Note'. Install Web Server Product wish use Web server front J2EE application server not already Web servers listed above, need install product Install Web server according basic instructions provided vendor. SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Install LDAP Server not LDAP server install OpenLDAP. use native LDAP mode, users managed Lifecycle Manager, ensure use OpenLDAP Update System Settings Reboot Application Server (Solaris Update kernel parameters increase maximum file descriptors per process system wide. step not necessary Red Hat. Add settings increase value least number) /etc/system: set rlim_fd_max set rlim_fd_cur NOTE: system must rebooted changes take effect. SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Step Install Portfolio Lifecycle Manager Application Server Sign-on application server root administrator Under Windows Server sure launch command window Administrator privileges. Create Portfolio Lifecycle Manager user (AIX Linux Solaris) need create Unix userid Unix group server application server installed. userid group used run Portfolio Manager Lifecycle Manager WebApp own directories files. same userid/groupid running application server WebSphere Note: step section special instructions running non-root user. SOL RHL groupadd {logidex.group} useradd {logidex.group} {logidex.user} AIX mkgroup {logidex.group} mkuser pgrp={logidex.group} {logidex.user} Update {logidex.user} profile script AIX Solaris Linux: Update profile script user environment variables always set. instructions below Bourne shell adjust statements below default shell. instructions /path-to-jdk-home absolute directory path prerequisite JDK installed /usr/jdk142). Switch user add appropriate lines profile script. {logidex.user} .profile (use editor choice edit appropriate shell profile script shell) JDK_HOME=/path-to-jdk-home export JDK_HOME Return root exit SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Windows: location JDK home set environment variable Windows. Follow instructions Launch Control Panel Open System settings Click Advanced tab Select Environment Variables button Add new System Variable JDK_HOME. example: JDK_HOME=c:\\java\\jdk1.5 Create Portfolio Manager Lifecycle Manager root directory AIX Linux Solaris: mkdir /opt/portfoliomanager mkdir /opt/lifecyclemanager) chown {logidex.user}:{logidex.group} /opt/portfoliomanager Windows: Use Windows Explorer create application directory c:\\portfoliomanager c:\\lifecyclemanager) Switch User {logidex.user} (AIX Linux Solaris) majority installation must done running {logidex.user} (except noted below return root). {logidex.user} Unpack Install Package Download AIX Linux Solaris: Execute installation file appropriate operating system. prompted, enter directory name ApplicationRoot configure application deployment. Download and/or copy javaclients.zip netclients.zip ApplicationRoot directory specified above. javaclients.zip netclients.zip provide thick-client installables Java .NET platforms available download center Portfolio Manager Lifecycle Manager. Though files optional, suggested install full functionality. /cdrom/cdrom0/v6.0-javaclients.zip ApplicationRoot/javaclients.zip /cdrom/cdrom0v5.6-netclients.zip ApplicationRoot/netclients.zip downloaded files sure named `javaclients.zip' `netclients.zip', not `v6.1javaclients.zip' example.) Prevent others reading conf bin directories SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide chmod o-rwx ./conf ./bin Windows: Execute server installation file specify ApplicationRoot destination. Copy javaclients.zip netclients.zip available) ApplicationRoot directory Install License file file named license.xml supplied SOA Software. Copy license.xml file ApplicationRoot/conf/license.xml Update Configuration Parameters install requires number configuration parameters. parameters include server names addresses, directory names EAR installed, passwords, database information, etc. configuration parameters described configuration file. Note: backslashes used, Windows paths example, need escaped backslash. c:\\logidex, entered c:\\\\logidex. Database creation notes: decision need make while setting lib.conf parameters character set using create database. character set determines characters stored (without conversion) database character columns. Potential character sets include ISO8859-1 through ISO8859-15, UTF-8, others. choose multibyte character set (UTF-8) Portfolio Manager Lifecycle Manager needs create wider columns choose single byte character set (ISO8859). database.expanded.columns parameter lib.conf file determines whether not columns created more room possible multi-byte characters. anticipate users creating assets many extended characters probably set value true. users likely using ASCII characters very few extended characters, alright set value false. created database single byte character set, such ISO8859-1, parameter set false, increases wasted space. Oracle: Oracle character set specified create instance. Depending character set specified database instance created, may need adjust database.expanded.columns parameter. UDB: UDB character set specified SQL scripts generated following steps. You'll need ensure database.expanded.columns parameter set according character set specified database.codeset parameter. SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Copy lib.conf file AIX Linux Solaris conf/lib.conf.orig conf/lib.conf Windows Use Windows Explorer copy conf\\lib.conf.orig conf\\lib.conf Edit lib.conf file Update configuration properties format each configuration property simple shell script assignment statement). Configuration File description each configuration parameter. Create App Root Directory (AIX Linux Solaris) Note: step may need run while logged root. mkdir {logidex.app.root} chown {logidex.user}:{logidex.group} {logidex.app.root} Create Database Objects Oracle Installations Download Oracle JDBC driver Oracle's website. Oracle installations require Oracle JDBC driver. Copy jar file ApplicationRoot/lib Warning: wish use internationalization features, use extended (non-ASCII) characters, instance create, existing instance use, Unicode character set (UTF-8, example). Still App Server {logidex.user}, run database setup: AIX Linux Solaris ApplicationRoot/bin/install dbsetup Windows ApplicationRoot\\bin\\install dbsetup dbsetup creates sql script named ApplicationRoot/bin/{db.instance.name}.setup.sql ApplicationRoot\\bin\\{db.instance.name}.setup.sql) Copy file database server /tmp/{db.instance.name}.setup.sql. DBA might review setup script. Make sure tablespace sizes management parameters appropriate. Login database server root Switch user login directly) Oracle system userid authority create database objects. Generally \"oracle\" userid. oracle SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Database Setup NOTE: ensure ORACLE_BASE ORACLE_HOME set first: echo $ORACLE_BASE echo $ORACLE_HOME Run setup script: export ORACLE_SID={db.instance.name} sqlplus /nolog SQL> connect sysdba SQL> /tmp/{db.instance.name}.setup.sql; SQL> exit logoff database server return application server UDB Installations need copy JDBC driver license jars (db2jcc.jar, db2jcc_license_cisuz.jar, db2jcc_license_cu.jar) located /home/instance/sqllib/java /opt/logidex/lib application server. Still App Server {logidex.user}, run database setup: AIX Linux Solaris ApplicationRoot/bin/install dbsetup Windows ApplicationRoot\\bin\\install dbsetup dbsetup creates sql script named ApplicationRoot/bin/{db.instance.name}.setup.sql ApplicationRoot\\bin\\{db.instance.name}.setup.sql) Copy file database server /tmp/{db.instance.name}.setup.sql. DBA might review setup scripts. Make sure values tablespace sizes fine enough space database server. sizes listed setup script pages each page size default. Login database server root user needed connect database. user listed {logidex.db.user} lib.conf file. SOL RHL groupadd {logidex.db.user} useradd {logidex.db.user} \"Database Application User\" {logidex.db.user} AIX mkgroup {logidex.db.user} mkuser pgrp={logidex.db.user} gecos=\"Database Application User\" {logidex.db.user} Set password user. password used connect database listed {logidex.password}. asked enter password {logidex.db.user} enter {logidex.password}. passwd {logidex.db.user} SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide create database, switch user belongs SYSADM_GROUP, usually instance owner. user must authority create database objects write access {db.data.file.dir} directory. UDBinstanceUser Run setup script: -tvf /tmp/{db.instance.name}.setup.sql three instance variables (DB2_EVALUNCOMMITTED, DB2_SKIPDELETED, DB2_SKIPINSERTED) set dedicated instance. Portfolio Manager Lifecycle Manager not own instances, analyze impact setting variables databases running instance. variables not set, performance issues involving SQL timeouts may arise number concurrent users increase. db2set DB2_SKIPDELETED=ON db2set DB2_SKIPINSERTED=ON db2set DB2_EVALUNCOMMITTED=ON Return root: exit Microsoft SQL Installations Download jtds-1.2.x-dist.zip JDBC zip file SourceForge's website. Extract jtds-1.2.x.jar file zip copy ApplicationRoot/lib/jtds.jar Copy jtds-1.2.x.jar file ApplicationRoot/lib Still App Server {logidex.user}, run database setup: AIX Linux Solaris ApplicationRoot/bin/install dbsetup Windows ApplicationRoot\\bin\\install dbsetup dbsetup creates sql script named ApplicationRoot/bin/{db.instance.name}.setup.sql ApplicationRoot\\bin\\{db.instance.name}.setup.sql) Copy file database server. DBA might review setup script. Make sure tablespace sizes management parameters appropriate. Log database server launch Microsoft SQL Server Management Studio. Open {db.instance.name}.setup.sql script. Execute script. shouldn't any errors. Verif {db.instance.name} database created. Enable \"Snapshot Isolation\" mode: ALTER DATABASE {db.instance.name} SET READ_COMMITTED_SNAPSHOT ALTER DATABASE {db.instance.name} SET ALLOW_SNAPSHOT_ISOLATION SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Install Portfolio Manager Lifecycle Manager Configure Application Server WebLogic Installations: Make sure logged App Server {logidex.user} Update WebLogic start scripts: WebLogic Edit script {weblogic.domain.root}/startWebLogic.sh not script normally used start WebLogic, please modify associated scripts make changes according following instructions. UDB Note: configuring WebLogic against DB2/UDB server, copy three db2jcc jars machine appserver running Several bugs problems WebLogic necessitate adding certain JARs WebLogic's classpath. appropriate JDBC drivers must added classpath. must add Portfolio Manager Lifecycle Manager's saaj.jar classpath. due bug WebLogic always uses its own SAAJ classes instead those application. URL handlers jar must available system classloader, needs added classpath. following resembles changes need made. course, you'll need modify paths accordingly. WebLogic Add appropriate EXT_PRE_CLASSPATH entry user's profile script. sure source file after made changes. Oracle sample: EXT_PRE_CLASSPATH=\"/opt/logidex/lib/ojdbc14.jar:/usr/bea/user_projects/domains/my domain/applications/logidex/saaj.jar:/usr/bea/user_projects/domains/mydomain/applications /logidex/urlhandlers.jar\" export EXT_PRE_CLASSPATH UDB sample: EXT_PRE_CLASSPATH=\"/opt/logidex/lib/db2jcc.jar:/opt/logidex/lib/db2jcc_license_cisuz.j ar:/opt/logidex/lib/db2jcc_license_cu.jar:/usr/bea/user_projects/domains/mydomain/applicat ions/logidex/saaj.jar:/usr/bea/user_projects/domains/mydomain/applications/logidex/urlhan dlers.jar\" export EXT_PRE_CLASSPATH MSSQL sample: EXT_PRE_CLASSPATH=\"/opt/logidex/lib/jtds.jar:usr/bea/user_projects/domains/mydoma in/applications/logidex/saaj.jar:/usr/bea/user_projects/domains/mydomain/applications/logid ex/urlhandlers.jar\" export EXT_PRE_CLASSPATH Start WebLogic server (adjusting /home/bea/user_projects/... path WebLogic domain root Note: must domain directory otherwise create another WebLogic domain directory currently /home/bea/user_projects/domains/mydomain ./startWebLogic.sh Start managed server deploying SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide above command does not start WebLogic background. may need put background once starts Ctrl+Z Install web application ApplicationRoot/bin/install install Review ApplicationRoot/install.log file any errors warnings. Recommended Update JTA Timeout Value JTA timeout value increased default seconds. upgrade configuration commands exceed default timeout, depending size library (number assets, number users, size speed hardware, etc). Start WebLogic Server Console browser http://{app.server.host}:7001/console Navigate domainname> Services> JTA Click \"Lock Edit\" button using WebLogic Click \"JTA\" Tab Timeout Seconds: Click Apply/Save Click \"Activate Changes\" button using WebLogic WebSphere Installations: running Portfolio Manager Lifecycle Manager non-root user, {logidex.user}, complete next series steps, otherwise skip next bulleted step: may error after changing WebSphere application server user, such ejbdeploy.sh: line ulimit: open files: cannot modify limit: Operation not permitted. ignore warning. Make sure logged {logidex.user} generate script set permissions WebSphere directories allow Portfolio Manager Lifecycle Manager run different user. ApplicationRoot/bin/install generate-websphere-permissions file ApplicationRoot/bin/setupperms created, modifies WebSphere file permissions allow application servers run non-root users according WebSphere documentation. Any such application server does run different group user, needs use same group (logidex.group). using Network Deployment install, follow WebSphere documentation preceding paragraph modify installation run non-root, continue next bulleted step. Otherwise, installing WebSphere Base install, continue steps. SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Switch user WebSphere running Start Admin Server {websphere.profile.root}/bin/startServer.sh server1 WebSphere Base) Navigate WebSphere administration pages, usually http://{app.server.host}:9090/admin. Login select Servers ->Application Servers. each application servers listed, change group umask selecting: servername Java Process Management Process Execution change following: UMASK: WebSphere) Run Group: {logidex.group} use Portfolio/Lifecycle Manager start stop scripts bring WebSphere down set Run User {logidex.user}. Portfolio/Lifecycle Manager running applications, probably best not may break applications. Select click save twice save changes. stop WebSphere pick changes. {websphere.profile.root}/bin/stopServer.sh server1 root, change permissions WebSphere directory allow Portfolio Lifecycle Manager run different user {logidex.root}/bin/setupperms Switch {logidex.user} Start base WebSphere server (adjusting /opt/WebSphere/... path path installed WebSphere): WebSphere Base /opt/IBM/WebSphere/AppServer/profiles/default/bin/startServer.sh server1 Configure WebSphere Portfolio Manager Lifecycle Manager ApplicationRoot/bin/install setup-websphere WebSphere runs different user {logidex.user}, switch user run following user: <user-that-WebSphere-runs-as> ApplicationRoot/bin/websphere.setup Check WebSphere administration page installed/deployed correctly using following URL: http://{app.server.host}:9090/admin Install web application {logidex.user} ApplicationRoot/bin/install install Windows: ApplicationRoot\\bin\\install.bat install Review ApplicationRoot/install.log file any errors warnings. Set transaction timeout: SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Web Admin console->Servers->Application Servers->logidex->Container Services->Transaction Service Set Total transaction lifetime timeout seconds Click save top navigation bar, save again. WebSphere custom setting Internet Explorer clients SSL enabled: Application servers logidex Web container transport chains WCInboundDefault inbound channel Custom Properties New Name: CookiesConfigureNoCache Value: false JBoss Installations: Copy JDBC drivers using JBOSS_HOME/server/default/lib (adjust necessary). JBoss Logidex uses certain JARs JBoss ships causes conflicts JBoss loads incorrect JARs. workaround issue, edit JBOSS_HOME/server/default/conf/jboss-service.xml file. Remove line: <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"*\"/> replace following lines <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"activation.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"antlr-2.7.6.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"autonumber-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"bcel.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"bindingservice-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"bsf.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"bsh-1.3.0.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"bsh-deployer.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"cglib.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"commons-collections.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"commons-logging.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"dom4j.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"hibernate3.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"hsqldb.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"hsqldb-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"javassist.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"javax.servlet.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"javax.servlet.jsp.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jaxen.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-backport-concurrent.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-common-jdbc-wrapper.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-hibernate.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-j2ee.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-jaxrpc.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-jca.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-jsr77.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-jsr88.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-management.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-monitoring.jar\"/> SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jbossmq.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-remoting-int.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-remoting.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jbossretro-rt.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-saaj.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-serialization.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-srp.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jbosssx.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jboss-transaction.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jmx-adaptor-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jnpserver.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"joesnmp.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jpl-pattern.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jpl-util.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"log4j.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"log4j-snmp-appender.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"mail.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"mail-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"properties-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"scheduler-plugin-example.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"scheduler-plugin.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"wsdl4j.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"xmlentitymgr.jar\"/> add line JDBC driver using: Oracle: <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"ojdbc14.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"db2jcc.jar\"/> <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"db2jcc_license_cu.jar\"/> MSSQL: <classpath codebase=\"${jboss.server.lib.url:lib}\" archives=\"jtds.jar\"/> installations Lifecycle Manager Portfolio Manager same JBoss instance, change following attribute replace default value \"false\" \"true\" <attribute name=\"CallByValue\">true</attribute> JBoss requires changes jboss-service.xml block above, however dual RM-PortM installations require \"CallByValue\" change specified above. JBoss uses flat classloading scheme default, causes applications conflict another. enable isolation, edit {app.server.root}/server/default/deploy/ear-deployer.xml. Change false true following line: <attribute name=\"Isolated\">false</attribute> look <attribute name=\"Isolated\">true</attribute> ensure JBoss clears its cache compiled JSP files properly, change \"DeleteWorkDirOnContextDestroy\" attribute \"true\" JBoss Edit file JBOSS_HOME/server/default/deploy/jbossweb-tomcat55.sar/META-INF/jboss-service.xml JBoss Edit file JBOSS_HOME/server/default/deploy/jboss-web.deployer/META-INF/jboss-service.xml SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide <attribute name=\"DeleteWorkDirOnContextDestroy\">true</attribute> Modify JBoss Java options AIX Linux Solaris Edit file {app.server.root}/bin/run.conf Find JAVA_OPTS line modify follows line): JAVA_OPTS=\"-Xms128m -Xmx1024m -Dsun.rmi.dgc.client.gcInterval=3600000 Dsun.rmi.dgc.server.gcInterval=3600000 -XX:PermSize=128m -XX:MaxPermSize=128m\" Windows Notepad {app.server.root}\\bin\\run.bat Find JAVA_OPTS line set follows: set JAVA_OPTS=%JAVA_OPTS% -Xms256m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=128m install create configuration files copy JBoss deploy directory. JBoss started, read configuration files determine resources create. AIX Linux Solaris ApplicationRoot/bin/install install Windows ApplicationRoot\\bin\\install.bat install NetWeaver Installations: Create JDBC Driver: Open NetWeaver Administration site (http://hostname:50000). Select SAP NetWeaver Administrator Configuration Management Infrastructure Application Resources Click Create New Resource Deploy New JDBC Driver Under JDBC Driver Name enter either \"Portfolio Manager Driver\" \"Lifecycle Manager Driver\" (without quotes), depending deploying. applications looks appropriately named driver important named accordingly. Add appropriate JDBC jars database Click Save Create EAR ApplicationRoot/bin/install build-ear Deploy EAR SCA) ApplicationRoot/deploy/logidex.ear file copied NetWeaver system responsible deploying SCA. next steps convert EAR file SDA SCA. assumes using nwcetool located default (C:\\Program Files\\SAP\\IDE\\CE\\eclipse\\tools\\nwcetool). example. modify commands appropriately depending deploying Lifecycle Manager Portfolio Manager, version deploying, file paths using, nwcetool.bat nwce> createsda -name LifecycleManager -vendor soa.com -counter -location \"SOA Software\" -type J2EE c:\\Deploy\\lifecyclemanager\\logidex.ear c:\\Deploy\\SDAs\\soa-lifecyclemanager-sda nwce-> packsca -name LifecycleManager -vendor soa.com -location \"SOA Software\" c:\\Deploy\\SDAs\\soa-lifecyclemanager-sda.ear c:\\Deploy\\SCAs\\LifecycleManager.sca SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide deploy generated SCA file using NetWeaver Developer Studio suitable deployment application. SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Clustering setup numbered step configure Lifecycle Manager application server clustering. Skip next numbered step does not apply. Follow next set instructions specific application server version setup clustering. application server isn't listed, clustering Portfolio Manager Lifecycle Manager not supported platform. Perform following each host cluster. Create ApplicationRoot directory each members cluster, remember substitute actual value ApplicationRoot following commands, set prior running following mkdir ApplicationRoot/logs/webapp Change ownership Portfolio Manager Lifecycle Manager directory whomever application server running (possibly {logidex.user}:{logidex.group}) chown {logidex.user}:{logidex.group} ApplicationRoot WebLogic Login administration console. Click \"Lock Edit\" button Undeploy Portfolio Manager Lifecycle Manager targeted server; WebLogic console select domainname Deployments logidex. Select Targets tab. Place check next top-level Portfolio Manager Lifecycle Manager component select \"Change Targets\". Uncheck server select \"Yes\". Create cluster according documentation http://edocs.bea.com/wls/docs91/index.html WebLogic console, target Connection Pool cluster selecting: domainname Services JDBC Data Sources ->LogidexDataSource. Click Targets tab, select cluster, click Save. Click \"Activate Changes\" button. Edit lib.conf file set app.server.cluster.name name cluster Portfolio Manager Lifecycle Manager deployed app.server.cluster.name=clustername). Restart affected managed servers. Run install upgrade (each clustered server running) ApplicationRoot/bin/install upgrade WebSphere Network Deployment Perform following each host cluster. Copy ApplicationRoot/lib directory each system access JDBC drivers scp root@{app.server.host}:/ApplicationRoot/lib /ApplicationRoot/lib SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Change ownership logs directory whatever user Portfolio Manager Lifecycle Manager running chown {logidex.user}:{logidex.group} ApplicationRoot Create cluster based application server just installed. WebSphere specific documentation instructions create cluster based existing application server (http://publib.boulder.ibm.com/infocenter/wasinfo/v5r1/topic/com.ibm.websphere.nd.doc/info/ae/ae/crun_srvgr p.html). Make sure save configuration changes WebSphere admin console scripting environment Regenerate WebSphere plugin using WebSphere admin console scripting environment Edit lib.conf file set app.server.cluster.name property name cluster created above. Make sure app.server.cluster.name property propagated configuration files ApplicationRoot/bin/install configure Wait nodes cluster pick configuration changes deploy Portfolio Manager Lifecycle Manager. verify checking contents $WAS_ROOT/installedApps/{websphere.cell.name}/logidex.ear directory. Again each member cluster, create symlink logidex webapp logging directory ApplicationRoot/logs/webapp /opt/WebSphere/AppServer/installedApps/{websphere.cell.name}/logidex.ear/logidex.war/logs Start cluster ApplicationRoot/bin/libctl start cluster Clustering Notes: Global Definition Template (GDT) Logidex Process Configuration (LPC) updated clustered environment, application server need restarted. Start LDAP server ApplicationRoot/bin/slapd start native LDAP mode) using different LDAP server, ensure started. Restart App Server Processes AIX Linux Solaris unclustered systems: ApplicationRoot/bin/libctl stop appserver ApplicationRoot/bin/libctl start appserver SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide clustered systems: ApplicationRoot/bin/libctl stop cluster ApplicationRoot/bin/libctl start cluster Windows unclustered systems: ApplicationRoot\\bin\\libctl stop appserver ApplicationRoot\\bin\\libctl start appserver Return root exit Install license files Access application's Installation Administration console install license.key license.properties using commands SetLicenseKey SetLicenseProperties detailed System Administration guide. (Optional) Setup Portfolio Manager Lifecycle Manager startup/shutdown system booted shutdown (AIX Linux Solaris) SOL ApplicationRoot/bin/libctl /etc/rc3.d/S85logidex ApplicationRoot/bin/libctl /etc/rc3.d/K35logidex ApplicationRoot/bin/slapd /etc/rc3.d/S84slapd ApplicationRoot/bin/slapd /etc/rc3.d/K25slapd RHL AIX ApplicationRoot/bin/libctl /etc/rc.d/rc3.d/S85logidex ApplicationRoot/bin/libctl /etc/rc.d/rc3.d/K35logidex ApplicationRoot/bin/slapd /etc/rc.d/rc3.d/S84slapd ApplicationRoot/bin/slapd /etc/rc.d/rc3.d/K25slapd native LDAP mode) native LDAP mode) native LDAP mode) native LDAP mode) (Optional) Precompile .jsp files optional step improve initial performance. .jsp files precompiled won't compiled runtime first touch. AIX Linux Solaris ApplicationRoot/bin/libctl jspcompile SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Step Create Asset Libraries Bootstrap setup native LDAP mode ldap.ownership.mode=native) Due fact users initially native mode, Portfolio Manager Lifecycle Manager must \"bootstrapped\". Super user access meant recovery purposes not recommended steady-state operations. installation administrator user library administrator user created. steps follows: Set superuser.password lib.conf. Set admin.users more account names create later. modified anything lib.conf file, need update application System Administration Guide, section Configuration File,\" more detailed instructions). Create initial library following \"Create Library Assets\" follows. Return back step finished. After created library, log installation administration pages. redirected login page link request account. Click link create installation administrator account specified admin.users lib.conf file). finished redirected library notified pending access, depending Controlled Access setting. You'll need login superuser grant appropriate privileges new account. Log required, request another account library administrator future libraries create. point valid account use login installation administration pages. Try logging installation administration pages new account. successful, recommended comment superuser.password lib.conf disable super user. http://{web.server.url.host}/lm/admin/mainMenu.do Create Library Assets Open following URLs browser, depending setup. using native LDAP mode not bootstrapped setup according above instructions, use superuser login page use configured {superuser.password}. Otherwise use installation administration login page specify valid LDAP user configured {admin.users} valid password. http://{web.server.url.host}/lm/admin/mainMenu.do (installation administration login page http://{web.server.url.host}/lm/application/access/suLogin.do (superuser login page) Select Create Library Fill information library: Field Basic Tab name Asset Library. used URL accessing library via web thick clients. reasonably short, same time make something meaningful users. Description Library Name SOA Software, Inc. Portfolio Lifecycle Manager J2EE Installation Guide Naming Rules: library name must start alpha character white space not allowed. Valid characters (underscore) Description Sender Email more descriptive text Asset Library. email address used email address notifications library end users. format username@domain internalsupport@example.com) library setup controlled access, user account requests must approved usage controller before allowed access. library setup uncontrolled access, any user already account requests account allowed access. bootstrapping native LDAP mode) recommended say option. option selected Project Manager authority create users LDAP. options not selected Usage Controller perform task. Library Administrator Information library login account name initial library administrator. must already existing user LDAP using guest LDAP mode, existing account using native LDAP mode). first library created new installation native LDAP mode, accounts yet, property left blank. assign library administrator later, must login library using super user. Feedback Account Information user receive email end users click \"Feedback\" link top navigation bar library interface. any user email account does not user library account). recommended use same user info Support Account info above, name Usage Controller library. Controlled Access Enable Project Manager Authority Create Users Account First Name, Middle Name, Last Name, email SOA Software, Inc."},{"title":"Policy Manager Integration Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-pm-int-guide-v6.5.1.html","date":null,"type":"pdf","description":"Policy Manager Integration Guide for Lifecycle Manager 6.5.1.","categories":[],"body":"POLICY MANAGER LIFECYCLE MANAGER INTEGRATION GUIDE Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Table Contents OVERVIEW INSTALLATION POLICY MANAGER (EJB) EAR JBoss WebSphere WebLogic INSTALLATION POLICY MANAGER CONFIGURING POLICY MANAGER FEDERATED SYSTEM Policy Manager Details Policy Manager Policy Manager Details Policy Manager SYNCHRONIZING GROUPS ORGANIZATIONS.................................................................................................. SynchronizePolicyManagerOrganizations PolicyManagerOrganizationPublisher PUBLISHING SERVICES Service Updates PolicyManagerPublisher Listener Details CONTRACTS PolicyManagerContractPublisher Listener Details LIFECYCLE PolicyManagerTransition Listener Details SERVICE METRICS PolicyManagerRuntimeStatistics Listener Details ARTIFACT VALIDATION.................................................................................................................................... PolicyManagerValidator Details PolicyManagerWSDLValidator Details ARTIFACT SOURCE PolicyManagerArtifactSource Details VALUE SOURCE............................................................................................................................................. PolicyManagerIdentityValueSource PolicyManagerSLPs Details ServiceOperationValueSource VirtualServiceValueSource VALIDATORS PolicyManagerSyncValidator INSTALLATION POLICY MANAGER (EJB) EAR JBoss WebSphere WebLogic APPENDIX CLASSIFICATION.......................................................................................................................... Mapping Classifiers Categories Mapping Classifier Values Mapping Compound Classifiers Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide OVERVIEW Smart Controls framework allows Repository/Lifecycle Manager product tightly integrated SOA Policy Manager product allowing end-toend-governance service lifecycle. Policy Manager integration facilitated primarily listeners related elements defined Library Configuration document. While document does not describe actual service flows associated use cases, does describe integration points between products associated library configuration elements. INSTALLATION POLICY MANAGER (EJB) EAR certain components Repository/Lifecycle Manager communicate Policy Manager using EJB deployed EAR file. Policy Manager EJB allows exposes certain APIs not available through normal Policy Manager interaction. following instructions followed install EAR application server. Note Policy Manager EJB EAR supports Policy Manager system per installation. instructions followed configuring system communicate Policy Manager using Policy Manager next section. Follow instructions generate install EAR. Copy PM_HOME/sm52/config/bootstrap.properties dems.properties file Policy Manager system communicating RM_HOME/conf directory Copy any Service Manager installed updates Policy Manager server PM_HOME/ installed_updates/service_manager/lib directory RM_HOME/deploy/app/policymanager52-updates directory. mkdir /opt/rm_application/deploy/app/policymanager52-updates /opt/soa_sw/sm52/installed_updates/service_manager/lib/* /opt/rm_application/deploy/app/policymanager52-updates Run RM_HOME/bin/install build-policymanager-ear ear created RM_HOME/deploy/policymanager.ear Deploy ear according application server using (paths may need adjusted accordingly) JBoss Create directory JBOSS_HOME/server/default/deploy/policymanager.ear Unjar ear file directory Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Edit JBOSS_HOME/server/server_name/conf/jboss-service.xml Locate NamingService mbean XML section modify \"CallByValue\" false true resemble: <attribute name=\"CallByValue\">true</attribute> Edit JBOSS_HOME/server/server_name/deploy/ear-deployer.xml Locate EARDeployer mbean XML section modify \"CallByValue\" false true resemble: <attribute name=\"CallByValue\">true</attribute> WebSphere Using WebSphere admin console, install new ear file. Ensure EAR file deployed same application server installed WebLogic Create directory next deployed app directory, example, /opt/bea/user_projects/domains/base_domain/applications/policymanager Unjar ear directory Login WebLogic console step through deploying new ear file, pointing directory created above. INSTALLATION POLICY MANAGER integration uses web service APIs, need install EAR Policy Manager integration. However, integration however does require installation WebService APIs. Follow steps install WebService APIs. Install Policy Manager according Policy Manager installation instructions Install Integration Workflow Feature Option Pack Download com.soa.integration.services zip file SOA Software support site under Downloads PolicyManager RepositoryManagerIntegration directory Extract file directory Policy Manager server repository tab Policy Manager Admin console, add new URL \"repository.xml\" file extracted above. file:/C:/temp/pmrm/repository.xml Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Available features install \"SOA Software Integration Workflow Services feature\" already installed Policy Manager Console Services feature may need restart Policy Manager after installing Integration Option Pack Due Web Service Security, clock times Repository/Portfolio Manager system Policy Manager system synchronized time source using NTP, domain server). PKI Certificate Policy Manager need exported imported Repository/Lifecycle Manager Portfolio Manager. step needs completed instances access Policy Manager secured restricted HTTPS. Login Policy Manager expand \"SOA Software Policy Manager\" organization, expand Services item, select \"Repository Integration Manager Service\". right, select \"Manage PKI Keys\" link. Export certificate save next section \"Error! Reference source not found.\" instructions importing library. CONFIGURING POLICY MANAGER FEDERATED SYSTEM Connections external registries such Policy Manager facilitated specifying specific <federated-system> element <federated-systems> section Library Configuration document. <federated-system> element represents not connection external system identity system. Any data stored RepositoryManager system scoped name federated-system. reason federated-system names must unique cannot changed. federated-system class Policy Manager PolicyManager. Depending integrating Policy Manager refer correct Policy Manager federated system details below. Policy Manager Details Policy Manager Purpose: Represents SOA Policy Manager installation Class: com.logiclibrary.registry.PolicyManager Properties: registry-host root URL Policy Manager installation. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Example: \"http://myPolicyManagerServer.mycompany.com\" (Required) user1 User authentication Policy Manager (Required) password Password authentication Policy Manager (Required) data-locale Locale associated data (such name description) Policy Manager. UDDI compliant locale. property optional. not specified, value assumed. inquiry-url URL Policy Manager UDDI Inquiry service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9901/uddi/inquiry_v2\" publish-url URL Policy Manager UDDI Publish service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9901/uddi/publish_v2\" technote-service-url URL Policy Manager TechNote service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9901/wsdltechnote\" policy-service-url URL Policy Manager ServiceLevel Policy service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9904/servicelevel\" contract-service-url URL Policy Manager Contracts service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9904/contract\" compliance-service-url URL Policy Manager Compliance Policy service. property user specified admin privileges Policy Manager. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9904/compliance\" workflow-service-url URL Policy Manager Workflow service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9904/workflow\" application-url URL Policy Manager application, used forming URLs service contract detail pages. property optional specified application not standard path relative registry-host URL. Default \"<registry-host>:9900\" rest-url URL Policy Manager REST servlet. property optional specified servlet not standard path relative registry-host URL. Default \"<registry-host>:9900/rest/services/\" Example Configuration <federated-systems> <federated-system name=\"SMTest\" class=\"PolicyManager\"> <properties> <property name=\"registry-host\" value=\"http://PolicyManagerServer.com\"/> <property name=\"user\" value=\"Administrator\"/> <property name=\"password\" value=\"password\" encrypt=\"true\"/> </properties> </federated-system> </federated-systems> Policy Manager Details Policy Manager Purpose: Represents SOA Policy Manager installation. Class: com.logiclibrary.registry.PolicyManager Properties: registry-host root URL Policy Manager installation. Example: \"http://example.com:9900\" (Required) Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide user2 User authentication Policy Manager (Required) password Password authentication Policy Manager (Required) version depending version Policy Manager using. errors contacting workflow service indicate property set incorrectly. not set, assumes registry host Policy Manager Refer section titled \"Policy Manager Details Policy Manager case. security-url URL Policy Manager UDDI Security service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>/uddi/security\" inquiry-url URL Policy Manager UDDI Inquiry service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>/uddi/inquiry\" publish-url URL Policy Manager UDDI Publish service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9901/uddi/publish\" technote-service-url URL Policy Manager TechNote service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>:9901/wsdltechnote\" policy-service-url URL Policy Manager Policy Configuration Manager service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>/policyconfiguration\" contract-service-url URL Policy Manager Contracts Manager service. property optional specified service not standard user specified admin privileges Policy Manager. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide path relative registry-host URL. Default \"<registryhost>/contract\" compliance-service-url URL Policy Manager Compliance service. property optional specified service not standard path relative registry-host URL. Default \"<registry-host>/compliance\" workflow-service-url URL Policy Manager Workflow service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>/workflowservice\" repository-integration-service-url URL Repository Integration Manager service. property optional specified service not standard path relative registry-host URL. Default \"<registryhost>/repository\" rest-url URL Policy Manager REST servlet. property optional specified servlet not standard path relative registry-host URL. used construct URLs certain object Policy Manager. Default \"<registry-host>/rest/\" keystore-service-url URL Policy Manager KeyStore service. property optional specified service not standard path relative registry-host URL. used retrieve certificates needed communicate Policy Manager services. Default \"<registry-host>/KeyStoreService\" Example Configuration <federated-systems> <federated-system name=\"SMTest\" class=\"PolicyManager\"> <properties> <property name=\"registry-host\" value=\"http://example.com:9900\"/> <property name=\"user\" value=\"administrator\"/> <property name=\"password\" value=\"password\" encrypt=\"true\"/> <property name=\"version\" value=\"6.0\"/> </properties> </federated-system> </federated-systems> SYNCHRONIZING GROUPS ORGANIZATIONS Publishing services Policy Manager requires Repository/Lifecycle Manager Groups Policy Manager organizations synchronized. accomplished two Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide parts: SynchronizePolicyManagerOrganizations command synchronize existing Repository/Lifecycle Manager Groups3 PolicyManagerOrganizationPublisher listener ongoing synchronization groups. described below: SynchronizePolicyManagerOrganizations Purpose: Command creating Policy Manager Organizations reflect Repository/Lifecycle Manager groups. Parameters: Parameter name Policy Manager federated-system synchronize Notes library name used name Organization associated Enterprise Group. following Services related Operational Policies need setup Policy Manager command execute successfully Compliance Service PolicyManagerDefaultUsernameTokenSecurityPolicy Contracts Manager PolicyManagerDefaultUsernameOrX509TokenSecurityPolicy PolicyConfigurationmanagerservice PolicyManagerDefaultUsernameTokenSecurityPolicy Repository Integration Manager Service PolicyManagerDefaultUsernameTokenSecurityPolicy WSDL Tech Note PolicyManagerDefaultUsernameTokenSecurityPolicy Workflow Service PolicyManagerDefaultHttpSecurityPolicy UDDI Inquiry Operational Policy needs defined. UDDI Publish Operational Policy needs defined. UDDI Security Operational Policy needs defined. PolicyManagerOrganizationPublisher Behavior: Publishes updates Repository/Lifecycle Manager Groups Organizations specified Policy Manager installation. Usage Context: Generally configured triggered Group create/update/delete time Enterprise Group needs synchronized case new library. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide following events: ORGGROUP_CREATED PROJECT_CREATED ORGGROUP_DELETED PROJECT_DELETED ORGGROUP_UPDATED PROJECT_UPDATED Class: com.logiclibrary.listeners.PolicyManagerOrganizationPublisher Properties: federated-system-name name Policy Manager federated-system publish (Required) Prerequisites: Organization Policy Manager must not child Organizations services. case, error4 occur resulting return code listener. Return Codes: success Notes following listener, filter action needs present Library Process Configuration file (lpc) ongoing synchronization Groups between Lifecycle Manager Policy Manager. Global Listeners section define following listener: <listener name=\"SM Organization Publisher\" class=\"PolicyManagerOrganizationPublisher\" <properties> <property name=\"federated-system-name\" value=\"SM60Dev2\" </properties> </listener> Global Filters section define following filter: <filter name=\"Group Events\"> <event>ORGGROUP_CREATED</event> <event>PROJECT_CREATED</event> <event>ORGGROUP_DELETED</event> <event>PROJECT_DELETED</event> <event>ORGGROUP_UPDATED</event> <event>PROJECT_ACTIVATED</event> </filter> Currently not possible RepositoryManager distinguish error more general system errors, handled return code. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Global Actions section define following action: <action name=\"Synchonize Groups\"> <trigger-event> <event-filter>Group Events</event-filter> </trigger-event> <listener>SM Organization Publisher</listener> </action> PUBLISHING SERVICES integration supports publishing Repository/Lifecycle Manager Assets representing web services5 Policy Manager. Such assets may contain WSDL document artifact. WSDL define single web service. Publishing updating service assets Policy Manager responsibility PolicyManagerPublisher listener. service published Policy Manager, businessService object created reflecting name version Repository/Lifecycle Manager asset. Classifiers defined mappings GDT populated categorizations Policy Manager businessService described Appendix below. present, asset's WSDL document associated Policy Manager businessService. Policy Manager populate any referenced schemas. Service Updates PolicyManagerPublisher listener may configured handle service asset updates Policy Manager. service update following actions may taken: businessService name, version, description updated businessService categorizations updated WSDL document updated PolicyManagerPublisher Listener Details Behavior: Publishes updates web service Assets specified Policy Manager installation. listener construct WSDL definition based artifacts asset. isn't enough information supporting schema cannot found, errors may occur during publish. asset contain either WSDL ZIP containing WSDL, possibly supporting schemas. asset contains WSDL, support schemas looked based namespace classifier information fallback schemaLocation information needed. Specifically, assets representing complete web services (single-asset representation) those assets representing service implementation (multi-asset representation). Service interface assets associated schema assets currently not explicitly published Policy Manager. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide asset contains ZIP file, supporting schemas packaged ZIP file. publishing artifact type wsdl-category packed-serviceartifact-category exist containing (zipped) WSDL. Usage Context: Generally configured triggered Asset publish/republish time ASSET_AUTO_PUBLISH, ASSET_MANUAL_PUBLISH, ASSET_AUTO_REPUBLISH, ASSET_MANUAL_REPUBLISH Events. restricted Filter allowing Assets represent web services. Class: com.logiclibrary.listeners.PolicyManagerPublisher Properties: WSDL schema resolution properties supported importer. appendix Library Process Configuration guide full set. federated-system-name name Policy Manager federated-system publish (Required) publish-wsdl Determines whether not WSDL published along service. may used support workflows, service modified policy manager not wish overwrite those changes. property optional. not specified, property defaults \"true\". email-exception boolean determines whether not email submitter Policy Manager publish errors. Default: false. email-administrators boolean determines whether not email library administrators Policy Manager publish errors. email-exception property must enabled. Default: false. log-count number logs attach email exception occurs. most recent logs attached. email-exception property must enabled. Default: message-id message used any email resulting exception occurring during publish. email-exception property must specified. \"Commands\" section RepositoryManager System Administration guide more information retrieving mail template information. default built message. substitution parameters use customize message Asset Name Asset Version Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Asset Submitter account Exception Prerequisites: Groups RepositoryManager library must synchronized Policy Manager installation. Qname service being published WSDL namespace qualified service name) must unique Policy Manager installation. Return Codes: success Duplicate service error Unsynchronized owning Group CONTRACTS PolicyManagerContractPublisher listener may used create Policy Manager consumer contracts correspond Repository/Lifecycle Manager asset acquisitions. PolicyManagerContractPublisher Listener Details Behavior: Publishes Policy Manager consumer contracts between consuming producing organizations service. Allows assignment service-level policy through use service level agreement contract. aspects contract set include contract anonymity, user identities, consumed operations. Multiple contracts created during acquisition. nested property details bullet below. Usage Context: Generally configured triggered Asset acquisition time ASSET_ACQUISITION_APPROVED event. restricted Filter allowing Assets represent web services. Class: com.logiclibrary.listeners.PolicyManagerContractPublisher Properties: federated-system-name name Policy Manager federated-system publish (Required) description description used Policy Manager contract. property optional. not specified, contract description defaulted \"Contract created via Repository/Lifecycle Manager acquisition\". Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide start-time-request-property name property acquisition AssetRequest use start time contract. property optional. not specified, \"contract-effective-date\" request property used. end-time-request-property name property acquisition AssetRequest use expiration time contract. property optional. not specified, \"contract-expiration-date\" request property used. service-level-policy-property name property acquisition AssetRequest used hold optional key service-level policy associate contract. property optional. not specified, \"service-level-policy\" request property used. contract-reference-property name property acquisition AssetRequest use storing URL Policy Manager contract detail page. property optional. not specified, \"contract-reference\" request property used. consumed-service-key-property name property acquisition AssetRequest use consumed service contract. Normally property connected VirtualServiceValueSource, user select virtual service acquiring. property optional. not specified, \"consumed-service\" request property used. user-identity-property name property acquisition AssetRequest use contract reduce consumption scope contract. Normally property connected PolicyManagerIdentityValueSource, user select consuming user. property optional. not specified, \"user-identity\" request property used. sla-name-pattern Determines name use SLA attaching optional service-level policy. substitution approach used \"{SLP_NAME}\" representing name service-level policy. property optional. not specified, default value \"{SLP_NAME}\" simply uses service-level policy name SLA name. sla-description-pattern Determines description use SLA attaching optional service-level policy. substitution approach used \"{SLP_NAME}\" representing name service-level policy. property optional. not specified, default value \"Generated Service Level Agreement {SLP_NAME} Service Level Policy\". Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide consumed-operation-property Specifies name property represents consumed operations, restricting scope contract operations. property usually sourced ServiceOperationsValueSource displays service's operations user friendly format. Default: consumedoperation anonymous-contract-property Specifies name Boolean property determines whether contract created anonymous not. contract anonymous, consuming organization service applicable contract. Default: anonymous-contract Nested property details: Policy Manager contract created several ways depending configure properties. service-level-property contains nested Policy Manager specific properties consumed-operation), contract created each SLP specified request, contract attached SLP property instead asset request. Prerequisites: Groups Repository/Lifecycle Manager library must synchronized Policy Manager installation. asset being acquired must corresponding businessService Policy Manager. Return Codes: success corresponding businessService Unsynchronized Group LIFECYCLE State transitions Policy Manager services contacts may triggered Repository/Lifecycle Manager through use PolicyManagerTransition listener. PolicyManagerTransition Listener Details Behavior: Performs lifecycle transition specified service contract Policy Manager. Usage Context: Assets: Generally configured triggered Asset republish time ASSET_AUTO_REPUBLISH ASSET_MANUAL_REPUBLISH Events. Commonly transition associated AssetFilter triggers transition asset's classifiers match specified criteria. restricted Filter allowing Assets represent web services. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Contracts: Configured triggered revocation asset registration Repository/Lifecycle Manager using ASSET_DEREGISTERED event. Class: com.logiclibrary.listeners.PolicyManagerTransition Properties: federated-system-name name Policy Manager federated-system publish (Required) object-type Determines whether target transition service contract. Valid values \"service\" \"contract\" (Required). action name action (transition) applied. example \"Mark Obsolete\" (Required). message message stored transition service contract's lifecycle history. property optional. not specified, \"Action requested Repository/Lifecycle Manager\" used message. Prerequisites: corresponding businessService contract must exist Policy Manager defined workflow. specified action must valid current state businessService contract. case asset registration (contract) acquisition Asset Request registration must exist must target PolicyManagerContractPublisher listener. Return Codes: success corresponding Policy Manager businessService Workflow not defined businessService contract Invalid action Contract not retrieved asset registration SERVICE METRICS Synchronization Policy Manager service metrics back Repository/Lifecycle Manager asset properties possible PolicyManagerRuntimeStatistics listener. PolicyManagerRuntimeStatistics Listener Details Behavior: Copies tModel information Policy Manager service back its corresponding Repository/Lifecycle Manager asset. tModel mapped asset properties using comma-separated value file format. listener Policy Manager Lifecycle Manager Integration Guide Copyright SOA Software, Inc. runs identifies Policy Manager service mapped assets Repository/Lifecycle Manager updates asset's properties values corresponding service's tModel categories. failure update asset any reason does not terminate listener continue process assets. property per tModel key supported, multiple tmodels same key Policy Manager, property populated Asset. Usage Context: Assets: Generally configured triggered using timer-based approach, every day. Class: com.logiclibrary.listeners.PolicyManagerRuntimeStatistics Properties: federated-system-name name Policy Manager federated-system synchronized (Required) tmodel-mappings-document-id name comma-separated value file (CSV) containing row per tModel/property mapping. examples below format information (Required). Prerequisites: federated system setup least service published Policy Manager. Return Codes: success Example CSV file: following file demonstrates map two service tModels asset properties. uddi:systinet.com:management:metric:errors,uddi-metric-errors uddi:systinet.com:management:metric:hits,uddi-metric-hits ARTIFACT VALIDATION PolicyManagerValidator Details Behavior: Used test artifacts using Policy Manager Compliance Validation. validator handle standalone schemas WSDLs contain references resources absolute URIs. PolicyManagerWSDLValidator enhanced WSDL processing support. validator tests each target artifact Policy Manager Lifecycle Manager Integration Guide Copyright SOA Software, Inc. against compliance rules setup Policy Manager organization corresponding asset's owning group. Usage Context: Used during asset publish. Class: com.logiclibrary.listeners.PolicyManagerValidator Return Codes: Success Failure warnings Failure errors Artifact not found Properties: federated-system-name name Policy Manager federated-system publish (Required) target-artifact-category artifact category name containing artifacts validate. (Required) result-artifact-category name artifact category contain results Policy Manager compliance validation. exclude-successful-results validation successful property set \"true\", Policy Manager compliance report not attached asset. validation-succeeded name classifier set either \"true\" \"false\" depending whether validation successful not. locking-user name user used make updates asset. omitted default \"Repository Manager\" user replace-results replace results set true, any existing Policy Manager validation results removed prior attaching results most recent execution. default \"false\". policy-target name Policy Manager policy target use validating. Potential values \"schema\" \"wsdl\". value omitted Repository/Lifecycle Manager attempt determine type based artifacts being submitted validation. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide PolicyManagerWSDLValidator Details Behavior: Used test artifacts using Policy Manager Compliance Validation. validator handle WSDLs packed ZIP file, standalone. handle WSDLs imports based namespace (assuming imported WSDL/Schemas contain appropriate target namespace classifiers. validator tests each target artifact against compliance rules setup Policy Manager organization corresponding asset's owning group. Usage Context: Used during asset publish. Class: com.logiclibrary.listeners.PolicyManagerWSDLValidator Return Codes: Success Failure warnings Failure errors Artifact not found Properties: federated-system-name name Policy Manager federated-system publish (Required) target-artifact-category artifact category name containing artifacts validate. (Required) result-artifact-category name artifact category contain results Policy Manager compliance validation. exclude-successful-results validation successful property set \"true\", Policy Manager compliance report not attached asset. validation-succeeded name classifier set either \"true\" \"false\" depending whether validation successful not. locking-user name user used make updates asset. omitted default \"Repository Manager\" user replace-results replace results set true, any existing Policy Manager validation results removed prior attaching results most recent execution. default \"false\". Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide policy-target name Policy Manager policy target use validating. value omitted Repository/Lifecycle Manager use \"wsdl\". service-artifact-category name artifact category publisher use access WSDL document. property optional. not specified, WSDL artifact category defaulted \"message-definition\". schema-artifact-category name artifact category use searching supporting schemas assets. namespace-classifier property property optional. not specified, \"schema-definition\" category used. namespace-classifier name classifier contains target namespace supporting schemas/services. searching supporting schemas namespace, assets matching classifier used. multiple assets contain same namespace, error occurs. not specified, \"target-namespace\" classifier used. packed-service-artifact-category name artifact category containing zipped WSDL its associated schemas. not specified, \"packed-service\" artifact category used. ARTIFACT SOURCE PolicyManagerArtifactSource defined allow assets reference Policy Manager service detail pages WSDL documents. PolicyManagerArtifactSource Details Behavior: Used displaying either service detail pages retrieving WSDL documents Policy Manager. WSDL case, artifact source attempt first locate actual consumed Policy Manager service existing Consumption Context between currently active Asset \"consuming\" Asset) Asset being viewed \"consumed\" asset). Consumption Context cannot found, consumed service property set Context, WSDL associated Policy Manager physical service retrieved. Usage Context: Used assets representing web services. Class: com.logiclibrary.artifact.sources.PolicyManagerArtifactSource Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Properties: federated-system-name name Policy Manager federated-system publish (Required) consumed-service-key-property property name use retrieving consumed Policy Manager service key consumption context. default property name \"consumed-service\" (Optional) consuming-relationship-property name consuming relationship may exist active asset service asset being viewed. default value property \"service-used\" (Optional). VALUE SOURCE Repository/Lifecycle Manager allows valid values Asset Requests source external system such Policy Manager. Specifically, PolicyManagerSLPs valuesource provided provide list defined service-level policies Policy Manager installation. PolicyManagerIdentityValueSource Applicability Properties Resolution Dynamic Behavior: acquiring assets Asset Based Acquisition scenario, value source limit consumption scope contract user identity. applies acquiring assets not exist Policy Manager (application assets example). list identities listed those corresponding Policy Manager group acquiring asset's owning group. project based acquisitions, selection available \"Not Applicable\". acquiring assets (services) already exist Policy Manager, selection available \"Use Service\", either two cases, not affect consumption scope contract. Class: com.logiclibrary.registry.PolicyManagerIdentityValueSource Properties: federated-system-name property used specify Policy Manager federated system contacted enumerate user identities. correspond Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide same system used create physical service Policy Manager. Example Configuration default, service Repository/Lifecycle Manager acquired, underlying contract created Policy Manager. add user identity contract, specify \"user-identity\" property populated value-source. resemble: <property-definition name=\"user-identity\" valuesource=\"PolicyManagerIdentities\" type=\"STRING\" display-name=\"Policy Manager User Identity\" help-text=\"Policy Manager Identity consumption scope contract\" target=\"ASSET_REQUEST\"/> property needs added corresponding acquisition property constraint sets, along configuring value-source called \"PolicyManagerIdentities\" using example above). PolicyManagerSLPs Details Behavior: Used displaying list valid property values based defined servicelevel policies Policy Manager installation. Presents service-level policy names, descriptions, detail page URLs. Usage Context: Used asset acquisition requests web service assets. Class: com.logiclibrary.registry.PolicyManagerSLPs Properties: federated-system-name name Policy Manager federated-system publish (Required) Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide ServiceOperationValueSource Applicability Properties Resolution Dynamic Behavior: Displays operations service Policy Manager. operations either listed consumed service consuming service Policy Manager. Policy Manager Contract publisher use value source define operations valid contract either consuming consumed side contract. policies enumerated found locating Policy Manager organization belonging service storing policies level each parent org hierarchy. Properties: federated-system-name property used specify Policy Manager federated system contacted enumerate operations service. correspond same system used create service Policy Manager. consuming-asset Boolean property determines whether operations listed service being acquired property set \"false\", acquiring service property set \"true\". Example Configuration <value-source name=\"PolicyManagerConsumingOperations\" class=\"com.logiclibrary.registry.polm.ServiceOperationValueSource\"> <properties> <property name=\"federated-system-name\" value=\"SMTest\" <property name=\"consuming-asset\" value=\"true\" </properties> </value-source> VirtualServiceValueSource Applicability Properties Resolution Dynamic Behavior: Displays potential Policy Manager services based asset being acquired. Policy Manager Lifecycle Manager Integration Guide Copyright SOA Software, Inc. service being acquired may associated service Policy Manager. service associated proxies, Value Source return available virtual service proxies service, virtual service proxies proxy. proxies, physical service available value. behavior may modified using display property below. Properties: federated-system-name property used specify Policy Manager federated system contacted enumerate virtual services physical service. correspond same system used create physical service Policy Manager. display property used specify services displayed value source. Lists physical service along virtual services default Lists virtual services exist. virtual services, list physical service. virtual Lists virtual services corresponding physical service. Example Configuration default, service Repository/Lifecycle Manager acquired, underlying contract created Policy Manager associated corresponding physical service. modify acquisition process use virtual service proxy, property definition \"consumed-service\" changed/added use Virtual Service Value Source. resemble: <property-definition name=\"consumed-service\" valuesource=\"PolicyManagerVirtualServices\" type=\"STRING\" displayname=\"Policy Manager Service\" help-text=\"Physical Virtual Service acquisition\" target=\"ASSET_REQUEST\"/> property needs added corresponding acquisition property constraint sets. VALIDATORS Repository/Lifecycle Manager allows synchronous validation various Policy Manager entities. validation occurs whenever asset submitted publish explicitly invoked user. PolicyManagerSyncValidator Behavior: Before service published Policy Manager, validator warn users Policy Manager Lifecycle Manager Integration Guide Copyright SOA Software, Inc. potential naming conflicts Policy Manager. validator similar ServiceNamespaceValidator. validator check asset's WSDL against Policy Manager Policy Manager already contains service, port type, binding same qualified name (namespace local name). display any conflicts back user configurable severities. Class: com.logiclibrary.validators.PolicyManagerSyncValidator Properties: federated-system-name property used specify Policy Manager federated system contacted verify potential namespace collisions. severity property specifies validation error message severity. either \"info\", \"warning\", \"error\". default \"error\". service-artifact-category artifact category containing service (WSDL). default \"message-definition\" packed-service-artifact-category artifact category containing packed service (ZIP). service relevant schemas packaged together artifact. default \"packed-service\" service-namespace-classifier namespace classifier contains target namespace service. used resolve services located Repository/Lifecycle Manager. default \"target-namespace\". service-name-classifier name classifier contains service name asset represents. Multiple services WSDL cause errors classifier not set. default \"service-name\". schema-artifact-category artifact category containing schemas. default \"schemadefinition\" schema-namespace-classifier namespace classifier contains target namespace schema. used resolve schemas located Repository/Lifecycle Manager. default \"target-namespace\". INSTALLATION POLICY MANAGER (EJB) EAR certain components Repository/Lifecycle Manager communicate Policy Manager using EJB deployed EAR file. Policy Manager EJB Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide exposes certain APIs not available through normal Policy Manager interaction. any components utilized identified guide, under those components), EAR needs created installed. Follow instructions generate install EAR. Copy PM_HOME/sm52/config/bootstrap.properties dems.properties file Policy Manager system communicating RM_HOME/conf directory Run RM_HOME/bin/install build-policymanager-ear ear created RM_HOME/deploy/policymanager.ear Deploy ear according application server using (paths may need adjusted accordingly) JBoss Create directory JBOSS_HOME/server/default/deploy/policymanager.ear Unjar ear file directory Edit JBOSS_HOME/server/server_name/conf/jboss-service.xml Locate NamingService mbean XML section modify \"CallByValue\" false true resemble: <attribute name=\"CallByValue\">true</attribute> Edit JBOSS_HOME/server/server_name/deploy/ear-deployer.xml Locate EARDeployer mbean XML section modify \"CallByValue\" false true resemble: <attribute name=\"CallByValue\">true</attribute> WebSphere Using WebSphere admin console, install new ear file. Ensure EAR file deployed same application server installed WebLogic Create directory next deployed app directory, example, /opt/bea/user_projects/domains/base_domain/applications/policymanager Unjar ear directory Login WebLogic console step through deploying new ear file, pointing directory created above. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide APPENDIX CLASSIFICATION Category information businessService Policy Manager determined classifiers Repository/Lifecycle Manager asset. facilitated through use \"external-mapping\" elements Repository/Lifecycle Manager Definition Template. Mapping Classifiers Categories Defining external-mapping sub-element define-classifier element binds classifier particular category Policy Manager. \"key\" external-mapping element mapping-id property assigned PolicyManagerPublisher listener default mapping-id Policy Manager \"UDDI\". \"value\" external-mapping element UDDI key category defined Policy Manager \"UDDI:SOA.com:rm:certificationlevel\"). case \"keyword\"6, term \"KEYWORD\" may used external-mapping value attribute. Note classifiers external-mappings defined appropriate Policy Manager mapping-id translated Policy Manager categories. Mapping Classifier Values external-mapping defined define-classifier level, values classifier used directly values categorization Policy Manager. useful \"open\" categories, however often necessary translate values RepositoyManager classifier defined values Policy Manager category. done through use external-mapping element added sub-element \"addvalue\" element classifier definition. mapping-id attribute externalmapping element set mapping-id PolicyManagerPublisher, while value attribute set actual value use category Policy Manager. Example Configuration following example maps \"certification-level\" classifier \"soa.com:rm:certificationLevel\" category. example uses \"Policy Manager\" mapping values \"none\", \"Owning Group\", \"Enterprise\" explicitly mapped category values PolciyManager. values \"Line Business ABC\" \"Line Business XYZ\" mappings used literally category values. <define-classifier name=\"certification-level\" displayname=\"Certification Level\" type=\"string\" open=\"false\" max-occurs=\"1\" value-ordering=\"GDT\" help-text=\"The reuse level asset approved.\"> UDDI terms, categorization based \"uddi-org:general_keywords\" category. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide <external-mapping key=\"Policy Manager\" value=\"uddi:soa.com:rm:certificationlevel\" <add-value value=\"None\"> <external-mapping key=\"Policy Manager\" value=\"No Certification Level|None\" </add-value> <add-value value=\"Owning Group\"> <external-mapping key=\"Policy Manager\" value=\"Owning Group Certification Level|Owning Group\" </add-value> <add-value value=\"Line Business ABC\" <add-value value=\"Line Business XYZ\" <add-value value=\"Enterprise\"> <external-mapping key=\"Policy Manager\" value=\"Enterprise Certification Level|Enterprise\" </add-value> </define-classifier> Mapping Compound Classifiers Standard (\"dependent\") compound classifiers mapped similar fashion singlevalue classifiers, each defined value optionally having external-mapping defined. However, fields independent compound classifier handled separately respect external-mappings. case independent compound classifier, each \"field\" element may its own external-mapping sub-element. Similarly, each addvalue element field may external-mapping. Example following example, field \"general\" mapped \"soa.com:rm:businessdomain\" Policy Manager category. second field \"specific\" external-mapping effect catergorization Policy Manager. <define-compound-classifier name=\"business-domain\" displayname=\"Business Domain\" max-occurs=\"1\" independent=\"true\" valueordering=\"GDT\" help-text=\"The business domain asset applies\"> <fields> <field name=\"general\" open=\"false\" required=\"true\" help-text=\"The general domain applicability\"> <external-mapping key=\"Policy Manager\" value=\"uddi:soa.com:rm:businessdomain\" <add-value value=\"Educational Services\"> <external-mapping key=\"Policy Manager\" value=\"Educational Services|EDU\" </add-value> <add-value value=\"Finance Insurance\"> <external-mapping key=\"Policy Manager\" value=\"Finance Insurance|FI\" </add-value> <add-value value=\"Manufacturing\" <add-value value=\"Professional, Scientific, Technical Services\" <add-value value=\"Real Estate Rental Leasing\" Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide <add-value value=\"Retail Trade\" <add-value value=\"Transportation Warehousing\" <add-value value=\"Utilities\" <add-value value=\"Wholesale Trade\" <add-value value=\"Not Applicable\" </field> <field name=\"specific\" help-text=\"The specific domain applicability\" </fields> </define-compound-classifier> Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide"},{"title":"SOLA Integration Guide for Lifecycle Manager 6.5.1","url":"/lm/lm-sola-int-guide-v6.5.1.html","date":null,"type":"pdf","description":"SOLA Integration Guide for Lifecycle Manager 6.5.1.","categories":[],"body":"SOLA LIFECYCLE MANAGER INTEGRATION GUIDE Trademarks SOA Software SOA Software logo either trademarks registered trademarks SOA Software, Inc. product names, logos, designs, titles, words phrases mentioned guide may trademarks, service marks trade names SOA Software, Inc. third parties may registered jurisdictions. Copyright SOA Software, Inc. rights reserved. material manual may copied, reproduced, republished, uploaded, posted, transmitted, distributed converted any electronic machine-readable form whole part without prior written approval SOA Software, Inc. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Table Contents OVERVIEW CONFIGURING SOLA FEDERATED SYSTEM SOLA Federated System details SYNCHRONIZING GROUPS ORGANIZATIONS.................................................................................................... PUBLISHING SERVICES Bottom-Up Project Creation SOLAPublisher Listener Details LIFECYCLE ARTIFACT SOURCE SOLAArtifactSource Details VALIDATORS SOLAValidator Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide OVERVIEW Smart Controls framework allows Lifecycle Manager product tightly integrated SOA SOLA product allowing end-to-end-governance service lifecycle. SOLA integration facilitated primarily listeners related elements defined Library Configuration document. While document does not describe actual service flows associated use cases, does describe integration points between products associated library configuration elements. CONFIGURING SOLA FEDERATED SYSTEM Connections external registries such SOLA facilitated specifying specific <federated-system> element <federated-systems> section Library Configuration document. <federated-system> element represents not connection external system identity system. Any data stored Lifecycle Manager system scoped name federated-system. reason federated-system names must unique cannot changed. federated-system class SOLA SOLAFederatedSystem. SOLA Federated System details Purpose: Represents SOA SOLA installation. Class: com.logiclibrary.integrations.sola.SOLAFederatedSystem Properties: endpoint root URL SOLA installation. Example: \"http://example.com:1454\" (Required) user1 User authentication SOLA (Required) password Password authentication SOLA (Required) validate-connection Valid values \"true\" \"false\". value true, test connection SOLA made any communication errors user specified privileges SOLA create modify services. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide prevent LPC uploading. false, such connection attempted. Default: \"true\". (Optional) Example Configuration <federated-systems> <federated-system name=\"SOLA\" class=\"com.logiclibrary.integrations.sola.SOLAFederatedSystem <properties> <property name=\"endpoint\" value=\"http://example.com:1454 <property name=\"user\" value=\"user\"/> <property name=\"password\" value=\"password\" encrypt=\"true\"/> </properties> </federated-system> </federated-systems> SYNCHRONIZING GROUPS ORGANIZATIONS SOLA integration synchronize groups organizations needed publishing services. Therefore, not required step needed maintain organizations. PUBLISHING SERVICES integration supports publishing Lifecycle Manager Assets representing web services2 SOLA. several different scenarios SOLA supports (bottomup, top-down, meet-in-the-middle), currently bottom-up supported integration, expanded future. Bottom-Up bottom-up scenario, service defined Lifecycle Manager operations classifiers. service published SOLA, service created containing operations. Lifecycle manager does not manage WSDL scenario. Instead SOLA builds WSDL set operations passed SOLA analysis mapping stage SOLA. Project Creation project does not exist SOLA representing owning group/project service asset Lifecycle Manager, project automatically created. Specifically, assets representing complete web services (single-asset representation) those assets representing service implementation (multi-asset representation). Service interface assets associated schema assets currently not explicitly published Policy Manager. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide SOLAPublisher Listener Details Behavior: Publishes updates service assets specified SOLA installation. listener create service SOLA populate information service based information asset. Usage Context: Generally configured triggered Asset publish/republish time ASSET_AUTO_PUBLISH, ASSET_MANUAL_PUBLISH, ASSET_AUTO_REPUBLISH, ASSET_MANUAL_REPUBLISH Events. restricted Filter allowing Assets represent web services. Class: com.logiclibrary.integrations.sola.SOLAPublisher Properties: WSDL schema resolution properties supported importer. Appendix Library Process Configuration guide more details. federated-system-name name SOLA federated-system publish (Required) workflow-type workflow-type asset. Possible values \"bottom-up\", \"topdown\", \"meet-in-the-middle\". Currently \"bottom-up\" supported. operation-classifier classifier name containing list operations create service. not specified \"operation\" classifier used. program-type-classifier classifier name containing SOLA program type. not specified, \"program-type\" classifier used. program type classifier found program type used program-name-classifier name SOLA program-name. not specified, \"programname\" classifier used. program name specified, created assigned service created SOLA. Prerequisites: highly recommended use SOLAValidator validate service assets conform requirements needed SOLA prior publishing service SOLA. Return Codes: success Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide Duplicate service error LIFECYCLE Lifecycle Manager notified state/lifecycle transitions services SOLA during analysis stage. enable functionality webservice API call made SOLA Lifecycle Manager during appropriate points. LPC (library process configuration) library made take advantage notifications. SOLA_EVENT LPC event created SOLA. take advantage requires manual configuration LPC. global top-level section LPC new custom-event, filter, action, listener need defined event custom property associated indicates status service SOLA. property name \"state\". Valid values \"INITIAL\", \"UPDATED\", \"ISREADY\". custom-event notifies LPC action needs take SOLA_EVENT <custom-events> <custom-event>SOLA_EVENT</custom-event> </custom-events> filter lets LPC take certain actions whenever event processed <filters> <filter name=\"SOLAEventFilter\"> <event>SOLA_EVENT</event> </filter> </filters> action triggers listener whenever filter fired case AdvanceStatus listener. <actions> <action name=\"Handle SOLA Transition\"> <trigger-event> <event-filter>SOLAEventFilter</event-filter> </trigger-event> <listener>AdvanceStatus</listener> </action> </actions> listener anything, most likely sets status classifier lifecycle related behavior. <listeners> <listener name=\"AdvanceStatus\" class=\"SetAssetClassifier\"> <properties> <property name=\"classifier-name\" value=\"sola-status\" <property name=\"classifier-value\" value=\"SYNCHRONIZED\" <property name=\"update-semantics\" value=\"replace\" <property name=\"submit-asset\" value=\"true\" Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide <property name=\"submit-note\" value=\"Synchronize asset status SOLA\" </properties> </listener> </listeners> ARTIFACT SOURCE SOLAArtifactSource defined allow assets reference SOLA service detail pages WSDL documents. SOLAArtifactSource Details Behavior: Used displaying either service detail pages service's WSDL SOLA. two general formats URLs using artifact source soa://sola/service soa://sola/wsdl. sola name artifact source, \"service\" \"wsdl\" refers service detail page service WSDL being referenced. Usage Context: Used assets representing services. Class: com.logiclibrary.integrations.sola.SOLAArtifactSource Properties: federated-system-name name SOLA federated-system (Required) Example: <artifact-source name=\"sola\" class=\"com.logiclibrary.integrations.sola.SOLAArtifactSource\"> <properties> <property name=\"federated-system-name\" value=\"SOLA\" </properties> </artifact-source> VALIDATORS Lifecycle Manager allows synchronous validation various SOLA entities. validation occurs whenever asset submitted publish explicitly invoked user. Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide SOLAValidator Behavior: Before service published SOLA, validator warn users potential conflicts SOLA. validator check any issues creating service project doesn't already exist) SOLA. perform name limitations (such length reserved characters). Items prevent publish marked severe errors, those indicate potential issues warnings. Class: com.logiclibrary.integrations.sola.SOLAValidator Properties: federated-system-name property used specify SOLA federated system contacted perform validation. Example: <asset-validator name=\"SOLAValidator\" class=\"com.logiclibrary.integrations.sola.SOLAValidator\"> <properties> <property name=\"federated-system-name\" value=\"SOLA\" </properties> </asset-validator> Copyright SOA Software, Inc. Policy Manager Lifecycle Manager Integration Guide"},{"title":"What's New in Lifecycle Manager 6.5.1","url":"/lm/new_in_lm_v6.5.1.html","date":null,"type":"pdf","description":"The new features for Lifecycle Manager 6.5.1.","categories":[],"body":"What's New Lifecycle ManagerTM Lifecycle Manager furthers SOA Software's industry leading end-to-end SOA governance API management suite adding integrated app governance (including negotiated API contract support) Community Manager mainframe-based service governance SOLA. addition, significant enhancements asset editing, viewing graphical impact analysis incorporated release. REST API Support Phase REST API Support addition full SDLC support REST APIs delivered Lifecycle Manager release adds management support following areas: Automated population Lifecycle Manager-governed internally developed) apps Community Manager, including Community Manager-generated app support Integrated OAuth credential management Community Manager internal apps consuming REST APIs Extension Lifecycle Manager's integrated contract governance capabilities include Lifecycle Manager-centric app acquisition governed APIs (both sandbox production endpoints) automated population resulting agreements Community Manager purposes runtime enforcement Asset Relationship Visualization (ARV) Enhancements Asset Relationship Visualization (ARV) Enhancements Users Lifecycle Manager's ARV graphical impact analysis viewer increased flexibility both display precisely information needed assess specific scenarios ability save those settings future use. Specific enhancements include: Configurable asset classifier settings display specific metadata interest via asset node hoverhelp Support selectively hiding asset nodes produce more narrowly-focused impact analysis graph Classifier-based filtering enumerated Boolean classifier types Nameable saveable filter settings addition, ARV provides integrated print support. Asset Enhancements Asset Enhancements following enhancements Lifecycle Manager's asset content viewing editing capabilities incorporated release: Email-based dynamic artifacts: Informal design reviews development discussions often occur via extended email threads spanning multiple team members. Lifecycle Manager threads initiated asset via new email-based artifact type. email sent responded community interest, Lifecycle Manager automatically updates asset www.soa.com sales@soa.com SOA Software latest email discussion chain. resulting artifact serves historical record informal discussion decisions otherwise commonly lost development teams. Greater control asset display thin-client users: Thin-client users Lifecycle Manager control default action asset hyperlinks choosing snapshot, main window, new tab/window-based launch desired. prior releases, \"right-click\" context menu continues present three options user. Conditional template definition support: conjunction Lifecycle Manager's integrated API support, administrators specify conditional classifier-based rules enabling template content. example, asset owner tags Application asset enable REST API acquisition via Boolean classifier asset dynamically modified expose REST-specific content such identity OAuth configuration information. Deletion validators: Validators incorporated asset deletion scenarios present severe errors asset owner prior submission deletion request. SOLA Integration SOLA Integration Lifecycle Manager provides full production governance support mainframe-based services development taking place SOA Software's SOLA product. Both top-down WSDL first) bottom-up copybook-based) service development scenarios eventually supported via integration, more typical bottom-up scenario initially supported release. top-down case, WSDL automatically propagated Lifecycle Manager SOLA Developer use during implementation process. bottom-up case, WSDL generated SOLA Developer automatically propagated SOLA Developer Lifecycle Manager. either case, SOLA Developer notify Lifecycle Manager development completion, triggering appropriate updates SOLA-developed service Policy Manager. Infrastructure Enhancements Infrastructure Enhancements Lifecycle Manager provides integration support latest releases various supporting technologies. IDE support: Eclipse commercial variants based Eclipse supported Lifecycle Manager's Eclipse add-in. www.soa.com sales@soa.com SOA Software, Inc."},{"title":"Lifecycle Manager Reference","url":"/lm/reference.html","date":null,"type":"document","description":"The Lifecycle Manager landing page","categories":[],"body":"documents pages refernce section provide detailed information wide range topics. recommend visit Getting Started Learning sections speed before diving deep section."},{"title":"System Administrator Guide","url":"/lm/SysAdmin-J2EE.html","date":null,"type":"document","description":"This System Admin Guide is written and intended for the person filling the role of Installation Administrator, and is most useful after the initial installation is completed.","categories":[],"body":"System Admin Guide written intended person filling role Installation Administrator, most useful after initial installation completed. Refer Portfolio Manager Lifecycle Manager Install Guide overview hardware software installation requirements detailed instructions installing base servers product. following topics covered system admin guide: General Configuring application Start/Stop Service Packs Log Files Logging Creating Libraries Import/Export Assets Contact SOA Software Support help any issue topic not covered Install documents, any applications' on-line help systems. Throughout System Admin guide references configuration parameters Configuration File). System Admin Guide configuration settings bracketed identify make easier search replace values. example, app.server.host lib.conf variable, while instructions below referred {app.server.host} three different distinct administrator roles assigned user accounts application. three roles described order provide context Installation Administrator responsibilities required skills described document. Responsibilities Installation Administrator generally include types activities: Coordinate installation base product service packs underlying server sysadmins Creating initial Asset Library additional libraries required Obtaining reviewing system logs Responsibilities generally include types activities: Managing Library parameters configurable (post-Library creation) Managing Global Definition Template used library's Asset definition Managing Library's UDDI publishing Each Library more users assigned role Usage controller. responsibilities generally include types activities: Create manage library group project hierarchy Manage asset capture (constraint) templates Assign manage user roles authorization Create manage additional items used library configuration, such group profiles, asset views classification criteria sets. Project Manager perform user management tasks library, users assigned Usage Controller role described above. However, Project Manager role assigned project, capabilities Project Manager scoped own project Each project library more users assigned role Project Manager. responsibilities generally include types activities: Create new library users assign project. capability withheld. Manage group role assignments project users. Approve asset reuse requests instigated project users. capability optional. Portfolio Manager Lifecycle Manager provide access number administrative functions via System Admin Console. application accessed web browser top navigation bar item called Administration available users installation administrators) directly URL follows. Replace examples context root, appropriate. context root \"logiclibrary\" systems upgraded Logidex. system admin console, Installation Administrator perform number administrative tasks. items provided Main Menu: Execute Command Selecting item displays page enter command applicable command parameters. administration commands documented document commands may provided SOA support as-needed basis. Create New Library Click link display Create Library page. Manage Visible Asset Sources Selecting item designating library drop down list produces listing Visible Asset Sources available library. Visible Asset Source configuration causes assets published individual library's asset source simultaneously published library use Visible Asset Sources create \"federated\" library configuration libraries both Portfolio/Lifecycle Manager installation remote Portfolio/Lifecycle Manager installation. Manage Remote Asset Sources Selecting item produces listing Remote Asset Sources currently available installation. Remote Asset Source connection established library exists installation separate own. Creating Remote Asset Source results availability remote library creation visible asset source library local installation. \"Manage Visible Asset Sources\" previous bullet. Remote Asset Source entry establishes connection information remote library, polling interval update published asset information between systems. Browse Logs Click link display Application Logs page. page list logs produced means email SOA Software support any recipient, corresponding links access logs directly. Download Upgrades link provides access Service Center, downloads available upgrade installation. System Admin Additional Documentation link provides access Service Center, documentation (including System Administration Guide) provided. Each library consists two components: library itself, contains published assets, its associated asset source, assets created edited prior being published. assets published asset source its associated library, designate simultaneous publish take place libraries configuration necessary cause take place occurs target library consists establishment Visible Asset Source each source library desired. Libraries share content fashion said \"federated\". Note content shared manner include reference models assets. Published assets refreshed applicable libraries each publish originating asset source. cases Visible Asset Source entry uses remote library, update takes place according polling interval established Remote Asset Source entry used Visible Asset Source. Manage Visible Asset Sources page, selecting library Library drop down list causes page refresh display list libraries existing installation. pull assets models visible library library, click corresponding Selected box. two important things consider choices make: help system available online application more information Classification Criteria Sets, Publish Templates association groups asset types, asset publish information, Reporting Groups, Reference Models. configuration parameters installation ApplicationRoot/conf/lib.conf configuration file created install time updated after install enable new features, change settings, etc. Most configuration parameters changed via admin command SetInstallationProperty. Update Installation-wide Properties section document details. configuration points cannot set via command, lib.conf file edited directly using any text editor (such Emacs, etc.) UNIX command line application server Wordpad Windows Servers: Login app server {logidex.user} Edit lib.conf file Apply changes (Note: deployed Portfolio Manager Lifecycle Manager EAR file without using SOA-supplied install scripts, following commands may not update running application. Contact support any questions. Eclipse-based Configuration Designer plug-in provides library administrators rich client interface manage configuration libraries. included Repository Client--a standalone, Eclipse-based IDE--or plug-in may installed existing Eclipse IDE. Download Center library installation details. Once installed, administrators create more projects each contains configuration library. following table outlines common administrative functions project file(s) associated function. documentation available Help menu IDE. configuration parameters needed setup Portfolio Manager Lifecycle Manager against preexisting LDAP server new server configuration file. two distinct modes Portfolio Manager Lifecycle Manager operate respect LDAP server: native guest mode. first step setting application use LDAP server determine modes use. following parameters describe configure installation properties. most cases defaults acceptable. However: plan use 'guest' mode, need know few details existing LDAP server. Each property described differently depending mode configured. Installation Properties section. any following characters appears part name value RDN must escaped backslash: due fact lib.conf interprets backslashes, must double escape any backslashes. example: ldap.binddn=cn=John Doe\\\\, Jr.,ou=users,dc=example,dc=com ldap.url LDAP server notes examples: best make sure installation works without SSL first, turn SSL after verified configuration parameters set correctly. steps setup LDAP SSL follows depend type LDAP application server installed. step-by-step example Novell eDirectory WebLogic: Admin Note: Automatic startup/shutdown system reboot configured /etc/init.d/ servers optional step install instructions. NOTE: warning messages ignored startup. warning message similar following: [warn] Loaded DSO libexec/solaris/mod_wl.so uses plain Apache API, module might crash under EAPI! (please recompile -DEAPI) LDAP guest mode configured: Service packs distributed via SOA Sofware Support website. Each service pack corresponding README file instructions installing service pack. Portfolio Manager Lifecycle Manager support use SSL (Secure Sockets Layer) encryption. However, default, installation not configured use SSL. use SSL installation, need modify default configuration. Changes required both Web Server App Server. updates Apache web server. NOTE SSL certificate host name must match {web.server.host} property lib.conf file. need reset passwords, list passwords may need update: Below brief description most important log files (not log files listed default log files directory ApplicationRoot/logs, subdirectories (listed below) each major component. Sample Logging file: Possible logging levels follows most verbose logging): default level new installations FINER, changed FINEST more detailed debugging information. NOTE: Setting logging level more \"verbose\" levels tend slow down performance application turn logging needed debugging. Database administration not covered Generally DBA responsibilities separate specialized responsibility. additional DBA requirements Portfolio Manager Lifecycle Manager. cases full backup installation, including data, code, configuration information. Prior installing service packs installation backup. Most service packs simple code updates, however may times data update service pack required support new function. list items backed NOTE does not backup pre-requisite installed products, such app server (WebLogic, WebSphere, etc), database products (Oracle, UDB, etc), web server products. backup those products according procedures outlined those vendors. data stored database, database tables spaces need backed backing data. default tablespaces named DBUSERDATA, DBUSERLONG, DBUSERINDX, DBUSERTEMP, unless overrode tablespace names lib.conf file. ever need full restore Portfolio Manager Lifecycle Manager corresponding data, follow steps: ever need restore just data, follow steps: {ldap.ownership.mode}=guest, user information obtained external LDAP server. Therefore, concept creating users application. Valid LDAP users simply login library either request access usage controller allowed depending controlled access turned not. {ldap.ownership.mode}=native, users request accounts \"Request Account\" link login page. entry dependent whether controlled access library turned not. user reset password using \"Forgot Password\" link login page. NOTE: {ldap.ownership.mode}=guest, password resets must done through external LDAP server. Portfolio Manager Lifecycle Manager provide capability accessing libraries System Admin console logging special \"user\" account does not require authentication LDAP system. account, termed \"Super User\" account used via web browser application access library System Admin console. Logging Super User provides unlimited access libraries installation facilities provided System Admin console. Note super user access enabled disabled lib.conf file assigning password leaving password blank. Super User access provided enable recover lack active Library Administrator account. logging library super user, activate inactive account create new user account assign Library Administrator role. Another purpose Super User account provide user account portrayed being associated application opposed being associated individual, human user. Portfolio Manager Lifecycle Manager provides use super user account \"application user\" called Portfolio Manager Application User Lifecycle Manager Application User. user available such things being recorded \"submitter\" assets submitted automation being identified \"responsible user\" establishing library federation through creation Visible Asset Source Remote Asset Source configuration. Super User account assigned library roles Library Administrator, Usage Controller Asset User. addition, account assigned group roles Asset Capture Engineer (ACE), Publisher Asset Owner Enterprise Group level. web browser application's online help more information roles scope application. installation needs create multiple Asset Libraries, create needed. Additional libraries created using via Admin Console Installation Administrator. ability automate asset operations provided Automation Extensions two samples provided allow user import group assets library export group assets library. SampleLoader SampleDownloader installable accompanying documentation available support link top navigation bar library. install command used both initial install Portfolio Manager Lifecycle Manager, installing upgrades, such service packs new releases. Below description command options: several special administrative library maintenance commands available Installation Administrator. Admin Console overview access Admin Console select \"Execute Command\". Types admin commands: list format example Asset Deletion List XML file below UTF-8 Note single asset UTF-8 Note First, items need imported before others. example, assets published prior asset views use (asset-view-assets). import items steps, done order listed ExportLibrary command. Secondly, actions asynchronous, requiring time before visible library. Therefore, items including assets models done prior importing items follow. Ensure any assets models published before proceeding next items. UTF-8 Note Parameters script may specified form \"variablename=value\" (without quotes). parameters available script variables. library dropdown set library containing user remove following text example asset deletion list file. Note \"repository-delete\" parameter shown each entry indicates whether asset deleted underlying \"assets progress\" \"repository-delete\" parameter set false, asset placed back \"submitted\" state catalog. user properties appear create display user contact pages obtained configured through attribute definitions. Attribute definitions determine not names fields available displayed users, corresponding services use looking user information. accomplished configuring XML document uploading through Admin Console using Attribute Definition commands: GetAttributeDefinitionSchema, GetCurrentAttributeDefinitions, GetDefaultAttributeDefinitions, SetAttributeDefinitions. following example document. Each AttributeDefinition element defines user attribute may displayed (through attribute-name XML attribute). \"Full Name\" \"Email\" attributes ones required. include-in-filter XML attribute set true, attribute searchable user create list pages, otherwise not. include-in-list XML attribute currently ignored, attributes show user detail pages. ExternalSourceMapping element determines user attributes come external sources through source-id XML attribute. Currently \"LDAP\" supported, signifies LDAP queried, LDAP element used (name-in-source attribute), user information related particular user attribute. associated ExternalSourceMapping element configured, Usage Controller set particular user attribute library. user set any such attributes own account. sample Attribute Definition document configures possible attributes user (Full Name, Email, First Name, Last Name, Phone, Fax, Cell). sample document states user attribute values come LDAP. case, \"Full Name\" user comes LDAP attribute, \"Email\" user comes LDAP \"mail\" attribute, \"Full Name\" \"Email\" attributes searchable attributes. attribute may helpful include account name user. may configured adding following entry XML file editing name-in-source attribute correspond attribute using authenticate users through LDAP attribute configured ldap.url parameter lib.conf file): Full-text searching enabled default SQL Server. However SQL Server \"knows\" index certain types artifacts depending filters installed. Details filters found determine filters installed SQL Server, execute following SQL: EXEC sp_help_fulltext_system_components 'filter'; Most configuration values set through lib.conf (logidex.conf) during initial installation updated through via Installation Administration command SetInstallationProperty. command works manipulating override values stored database table. value set via SetInstallationProperty, blank value set, system uses values deployment descriptor--built 'conf' file properties--as case previous releases. Use \"GetInstallationProperty\" view property value set configuration file value persisted database, exists. Take care not misconfigure properties lock system LDAP parameters). following table describes properties cannot set method. Single Sign-on (SSO) login mechanism allows authorization external web server plug-in. enables integrate own \"single sign solution. capability enabled configuring following property lib.conf. value entry specify header name contains authenticated user's user (account name). example lib.conf specifies \"XYZ_USERID\", logon logic look Header name. Effectively, enable external authorization specifying non-null values entry. incoming request contains specified header, login logic assumes user authenticated externally does not present login challenge page. Instead, attempts find existing User object account name specified configured user header. uses found User object establish session user. properly configured integrated external authentication mechanism, users never login challenge. Instead challenge presented external authentication mechanism. mode not necessary Usage Controllers define new users. external authorization configured, \"Logout\" link appears top navigation bar. following resources not protected SSO authorization: customize banner top web pages own branding information. configuration global means effect libraries installation. Note: styles document may override global defaults. example, style sheet entry \"A:hover COLOR: #FFFFFF; TEXT-DECORATION: underline; override hover link color whole page. many references .css files internet. web site information general .css topics http://www.htmlhelp.com/reference/css/ page color references http://www.htmlhelp.com/reference/css/color-background/background-color.html Basic Options Values:#brand sections apply background image file (.gif, .jpeg, etc) top banner (header) Example custom.css file example shows configuration library banner. footer each web page customized needed installation. may add additional information terms use, privacy, help desk contact information, etc. customize footer pages, create following html files ApplicationRoot/customer/logidex.war/custom. application redeployed after changes made. file customized using standard html syntax. Note: styles document may override global defaults. example, style sheet entry \"A:hover COLOR: #FFFFFF; TEXT-DECORATION: underline; override hover link color whole page. customize content presented home page web browser application. area available custom content falls below web page Top Banner above Active Project designation home page. configuration global installation, means effect libraries installation. may customize content presented Support Center page web browser application. area available custom content Support Information section. configuration global installation, means effect libraries installation. Library Administrators Usage Controllers continue default information. may change target top navigation bar \"Discussion\" \"Help\" links. configuration library-specific different each library. Portfolio Manager Lifecycle Manager configured user select language display its contents. Contact support information languages available configure default, database schema owner used create modify database entities (tables, views, sequences, etc). configure different user, actions not work modify underlying schema. actions need performed schema owner therefore configured alternate database user, certain permission issues running Portfolio Manager Lifecycle Manager must reconfigured use schema owner case. potentially problematic actions configure alternate database user, follow instructions. setup notes: certain instances, such creating custom listeners, deploying custom class files required. accomplished adding class files ApplicationRoot/customer/custom.jar file. You'll need ensure package information preserved class file's path. instance, suppose class named com.example.CustomListener. need added custom.jar file com/example/CustomListener.class. example required steps: WebLogic uses /tmp/_wl_proxy write file while being uploaded. Typical problems tend permissions/mode disk full problem. Verify enough space /tmp file least size trying upload. verify /tmp/_wl_proxy directory owned web server user (User Group httpd.conf file). delete /tmp/_wl_proxy directory recreated correct permissions. configuration element plugin-cfg.xml web server plug-in configuration file limits uploads default. increase limit example) change following line WebSphere plugin-cfg.xml file. use Long Table spaces columns store binary data. Previously regular table spaces used store binary data inefficient. recommended upgrade use Long table spaces. Note: used advanced tablespace tab library creation, please contact SOA Software support. needs concerned saving files non-ASCII characters. several different encodings use safely preserve extended characters (UTF-16, UTF-8, etc). Portfolio Manager Lifecycle Manager use UTF-8 encoding various places throughout application. Most issues transparent end-user, noted. Whereever input takes form XML file, XML file declaration specifying encoding. not specified, default encoding UTF-8 document interpreted being encoded such. recommended leave set UTF-8 ensure file saved UTF-8. Most XML files displayed user preserved UTF-8 saved using browser’s File Save option. not copy paste text browser text editor unless know text preserved UTF-8 encoded without BOM (byte-order mark). overviews uploaded using Automation Extensions, encoded using UTF-8 very easy mess file saving incorrect encoding. Therefore instructions used anytime save file containing non-ASCII characters. User License Report included may link appropriate group choice. report provides list users installation libraries each user access. Create report link follows: Customers may use BIRT Eclipse tool create custom reports deploy those reports application server available application users. Beginning PortM BIRT reports managed using Configuration Designer plug-in. report design files appear configuration project under Document-Source reports. Custom reports may saved folder uploaded library via context menu. Once report uploaded library, follow steps below create report link. version installations, follow steps once report ready deploy: Create report link follows: Integrating WebLayers requires application server find appropriate WebLayers' configuration file executables. Install WebLayers Governor client same application server Portfolio/Lifecycle Manager installed prompted make sure check \"Java option. Continue application server specific instructions complete integration."},{"title":"SOA Software Product Documents","url":"/page.html","date":null,"type":"document","description":"The docs.soa.com landing page","categories":[],"body":"content needed, anyway"},{"title":"Page List","url":"/pagelist.html","date":null,"type":"document","description":"A sorted list of all the pages in the site","categories":[],"body":"content needed, anyway"}]}